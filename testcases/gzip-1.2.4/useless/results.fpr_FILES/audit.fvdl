<?xml version="1.0" encoding="UTF-8"?>
<FVDL xmlns="xmlns://www.fortifysoftware.com/schema/fvdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.11" xsi:type="FVDL">
<CreatedTS date="2014-10-20" time="21:47:21"/>
<UUID>36204f54-c8a8-4b5f-89c0-2a5e7dc70ba7</UUID>
<Build>
  <BuildID>build1</BuildID>
  <NumberFiles>80</NumberFiles>
  <LOC type="Fortify">1527</LOC>
  <LOC type="Line Count">7323</LOC>
  <LOC type="Source Code">4024</LOC>
  <LOC type="Comments">1810</LOC>
  <LOC type="Comments and Source Code">616</LOC>
  <LOC type="White Space">873</LOC>
  <SourceBasePath>/home/bty/testcase/gzip-1.2.4</SourceBasePath>
  <SourceFiles>
    <File size="6781" timestamp="1380551585000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/stat.h</Name>
    </File>
    <File size="2620" timestamp="1380551584000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/sys/sysmacros.h</Name>
    </File>
    <File size="9203" timestamp="745245337000" loc="111" type="cpp" encoding="UTF-8">
      <Name>unlzh.c</Name>
      <LOC type="Fortify">111</LOC>
      <LOC type="Line Count">401</LOC>
      <LOC type="Source Code">292</LOC>
      <LOC type="Comments">43</LOC>
      <LOC type="Comments and Source Code">12</LOC>
      <LOC type="White Space">54</LOC>
    </File>
    <File size="113" timestamp="1386099336000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/asm/types.h</Name>
    </File>
    <File size="5878" timestamp="745245329000" loc="24" type="cpp" encoding="UTF-8">
      <Name>bits.c</Name>
      <LOC type="Fortify">24</LOC>
      <LOC type="Line Count">205</LOC>
      <LOC type="Source Code">86</LOC>
      <LOC type="Comments">89</LOC>
      <LOC type="Comments and Source Code">11</LOC>
      <LOC type="White Space">19</LOC>
    </File>
    <File size="6024" timestamp="745245339000" loc="62" type="cpp" encoding="UTF-8">
      <Name>unzip.c</Name>
      <LOC type="Fortify">62</LOC>
      <LOC type="Line Count">199</LOC>
      <LOC type="Source Code">98</LOC>
      <LOC type="Comments">43</LOC>
      <LOC type="Comments and Source Code">29</LOC>
      <LOC type="White Space">29</LOC>
    </File>
    <File size="1595" timestamp="1380551573000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/sigstack.h</Name>
    </File>
    <File size="13662" timestamp="1380551573000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/signal.h</Name>
    </File>
    <File size="40691" timestamp="745608992000" loc="250" type="cpp" encoding="UTF-8">
      <Name>trees.c</Name>
      <LOC type="Fortify">250</LOC>
      <LOC type="Line Count">1075</LOC>
      <LOC type="Source Code">471</LOC>
      <LOC type="Comments">326</LOC>
      <LOC type="Comments and Source Code">131</LOC>
      <LOC type="White Space">147</LOC>
    </File>
    <File size="8186" timestamp="745245338000" loc="44" type="cpp" encoding="UTF-8">
      <Name>unpack.c</Name>
      <LOC type="Fortify">44</LOC>
      <LOC type="Line Count">239</LOC>
      <LOC type="Source Code">98</LOC>
      <LOC type="Comments">84</LOC>
      <LOC type="Comments and Source Code">25</LOC>
      <LOC type="White Space">32</LOC>
    </File>
    <File size="801" timestamp="1386099333000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/asm-generic/int-ll64.h</Name>
    </File>
    <File size="477" timestamp="745695984000" type="secondary" encoding="UTF-8">
      <Name>revision.h</Name>
    </File>
    <File size="624" timestamp="1380551620000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/gnu/stubs-32.h</Name>
    </File>
    <File size="11774" timestamp="1380551585000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/fcntl.h</Name>
    </File>
    <File size="8652" timestamp="1380551585000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/fcntl.h</Name>
    </File>
    <File size="5250" timestamp="1386099333000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/asm-generic/errno.h</Name>
    </File>
    <File size="229" timestamp="1386099335000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/asm/bitsperlong.h</Name>
    </File>
    <File size="1289" timestamp="1380551574000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/alloca.h</Name>
    </File>
    <File size="2526" timestamp="1380551576000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/_G_config.h</Name>
    </File>
    <File size="1440" timestamp="1380551575000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/stdio_lim.h</Name>
    </File>
    <File size="256" timestamp="745245330000" type="secondary" encoding="UTF-8">
      <Name>crypt.h</Name>
    </File>
    <File size="7430" timestamp="745535995000" type="secondary" encoding="UTF-8">
      <Name>tailor.h</Name>
    </File>
    <File size="2452" timestamp="1380551574000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/errno.h</Name>
    </File>
    <File size="3148" timestamp="1380551574000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/sys/ucontext.h</Name>
    </File>
    <File size="1316" timestamp="1386099336000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/asm/posix_types_32.h</Name>
    </File>
    <File size="189" timestamp="745245330000" type="cpp" encoding="UTF-8">
      <Name>crypt.c</Name>
      <LOC type="Line Count">6</LOC>
      <LOC type="Source Code">3</LOC>
      <LOC type="Comments">3</LOC>
      <LOC type="Comments and Source Code">0</LOC>
      <LOC type="White Space">0</LOC>
    </File>
    <File size="14046" timestamp="1380551587000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/sys/cdefs.h</Name>
    </File>
    <File size="168" timestamp="1380551578000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/endian.h</Name>
    </File>
    <File size="22612" timestamp="1380551578000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/string.h</Name>
    </File>
    <File size="4477" timestamp="1380551584000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/pthreadtypes.h</Name>
    </File>
    <File size="14099" timestamp="745245340000" loc="102" type="cpp" encoding="UTF-8">
      <Name>util.c</Name>
      <LOC type="Fortify">102</LOC>
      <LOC type="Line Count">462</LOC>
      <LOC type="Source Code">295</LOC>
      <LOC type="Comments">81</LOC>
      <LOC type="Comments and Source Code">30</LOC>
      <LOC type="White Space">56</LOC>
    </File>
    <File size="3170" timestamp="745245340000" loc="35" type="cpp" encoding="UTF-8">
      <Name>zip.c</Name>
      <LOC type="Fortify">35</LOC>
      <LOC type="Line Count">117</LOC>
      <LOC type="Source Code">61</LOC>
      <LOC type="Comments">21</LOC>
      <LOC type="Comments and Source Code">12</LOC>
      <LOC type="White Space">23</LOC>
    </File>
    <File size="1771" timestamp="1380551552000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/xlocale.h</Name>
    </File>
    <File size="12887" timestamp="1334527780000" type="secondary" encoding="UTF-8">
      <Name>/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h</Name>
    </File>
    <File size="21538" timestamp="745611848000" type="cpp" encoding="UTF-8">
      <Name>getopt.c</Name>
      <LOC type="Line Count">755</LOC>
      <LOC type="Source Code">419</LOC>
      <LOC type="Comments">239</LOC>
      <LOC type="Comments and Source Code">8</LOC>
      <LOC type="White Space">89</LOC>
    </File>
    <File size="8840" timestamp="745248670000" loc="89" type="cpp" encoding="UTF-8">
      <Name>unlzw.c</Name>
      <LOC type="Fortify">89</LOC>
      <LOC type="Line Count">377</LOC>
      <LOC type="Source Code">310</LOC>
      <LOC type="Comments">23</LOC>
      <LOC type="Comments and Source Code">6</LOC>
      <LOC type="White Space">38</LOC>
    </File>
    <File size="7601" timestamp="1380551584000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/types.h</Name>
    </File>
    <File size="4376" timestamp="745245331000" type="secondary" encoding="UTF-8">
      <Name>getopt.h</Name>
    </File>
    <File size="4203" timestamp="1334527780000" type="secondary" encoding="UTF-8">
      <Name>/usr/lib/gcc/i686-linux-gnu/4.6/include/stdarg.h</Name>
    </File>
    <File size="2919" timestamp="1380551573000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/sigaction.h</Name>
    </File>
    <File size="1153" timestamp="1380551550000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/predefs.h</Name>
    </File>
    <File size="873" timestamp="1380551574000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/wordsize.h</Name>
    </File>
    <File size="4272" timestamp="1380551587000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/sys/select.h</Name>
    </File>
    <File size="3371" timestamp="1380551581000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/time.h</Name>
    </File>
    <File size="1270" timestamp="1386099335000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/linux/posix_types.h</Name>
    </File>
    <File size="6838" timestamp="1380551584000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/sys/types.h</Name>
    </File>
    <File size="52560" timestamp="745767583000" loc="474" type="cpp" encoding="UTF-8">
      <Name>gzip.c</Name>
      <LOC type="Fortify">474</LOC>
      <LOC type="Line Count">1744</LOC>
      <LOC type="Source Code">1165</LOC>
      <LOC type="Comments">283</LOC>
      <LOC type="Comments and Source Code">148</LOC>
      <LOC type="White Space">148</LOC>
    </File>
    <File size="79" timestamp="1386099334000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/linux/errno.h</Name>
    </File>
    <File size="32361" timestamp="1380551579000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/wchar.h</Name>
    </File>
    <File size="10619" timestamp="745245333000" type="secondary" encoding="UTF-8">
      <Name>gzip.h</Name>
    </File>
    <File size="302" timestamp="1386099333000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/asm-generic/types.h</Name>
    </File>
    <File size="2049" timestamp="1380551587000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/select.h</Name>
    </File>
    <File size="16823" timestamp="1380551585000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/sys/stat.h</Name>
    </File>
    <File size="34259" timestamp="1380551574000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/stdlib.h</Name>
    </File>
    <File size="1481" timestamp="745245334000" type="secondary" encoding="UTF-8">
      <Name>lzw.h</Name>
    </File>
    <File size="2171" timestamp="1380551574000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/errno.h</Name>
    </File>
    <File size="1429" timestamp="1386099335000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/linux/types.h</Name>
    </File>
    <File size="29179" timestamp="745245331000" loc="110" type="cpp" encoding="UTF-8">
      <Name>deflate.c</Name>
      <LOC type="Fortify">110</LOC>
      <LOC type="Line Count">763</LOC>
      <LOC type="Source Code">300</LOC>
      <LOC type="Comments">323</LOC>
      <LOC type="Comments and Source Code">48</LOC>
      <LOC type="White Space">92</LOC>
    </File>
    <File size="2538" timestamp="1380551584000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/typesizes.h</Name>
    </File>
    <File size="5403" timestamp="1386099336000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/asm/sigcontext.h</Name>
    </File>
    <File size="501" timestamp="1386099333000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/asm-generic/bitsperlong.h</Name>
    </File>
    <File size="4888" timestamp="1380551578000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/byteswap.h</Name>
    </File>
    <File size="1603" timestamp="1380551585000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/utime.h</Name>
    </File>
    <File size="13084" timestamp="1380551550000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/features.h</Name>
    </File>
    <File size="31645" timestamp="1380551576000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/stdio.h</Name>
    </File>
    <File size="588" timestamp="745245333000" loc="7" type="cpp" encoding="UTF-8">
      <Name>lzw.c</Name>
      <LOC type="Fortify">7</LOC>
      <LOC type="Line Count">26</LOC>
      <LOC type="Source Code">17</LOC>
      <LOC type="Comments">4</LOC>
      <LOC type="Comments and Source Code">1</LOC>
      <LOC type="White Space">4</LOC>
    </File>
    <File size="2991" timestamp="1380551578000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/endian.h</Name>
    </File>
    <File size="9124" timestamp="1380551573000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/siginfo.h</Name>
    </File>
    <File size="150" timestamp="1386099335000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/linux/stddef.h</Name>
    </File>
    <File size="11867" timestamp="1380551568000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/ctype.h</Name>
    </File>
    <File size="31613" timestamp="745253420000" loc="219" type="cpp" encoding="UTF-8">
      <Name>inflate.c</Name>
      <LOC type="Fortify">219</LOC>
      <LOC type="Line Count">954</LOC>
      <LOC type="Source Code">409</LOC>
      <LOC type="Comments">248</LOC>
      <LOC type="Comments and Source Code">155</LOC>
      <LOC type="White Space">142</LOC>
    </File>
    <File size="4652" timestamp="1380551573000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/sigset.h</Name>
    </File>
    <File size="1715" timestamp="1380551584000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/waitflags.h</Name>
    </File>
    <File size="1549" timestamp="1386099333000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/asm-generic/errno-base.h</Name>
    </File>
    <File size="3639" timestamp="1380551584000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/waitstatus.h</Name>
    </File>
    <File size="13531" timestamp="1380551581000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/time.h</Name>
    </File>
    <File size="1325" timestamp="1380551573000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/sigcontext.h</Name>
    </File>
    <File size="1747" timestamp="1380551573000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/sigthread.h</Name>
    </File>
    <File size="3484" timestamp="1380551573000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/i386-linux-gnu/bits/signum.h</Name>
    </File>
    <File size="17857" timestamp="1380551576000" type="secondary" encoding="UTF-8">
      <Name>/usr/include/libio.h</Name>
    </File>
  </SourceFiles>
  <ScanTime value="86"/>
</Build>
<Vulnerabilities>
<Vulnerability>
  <ClassInfo>
    <ClassID>BA40B07C-72BC-4732-B24C-9E9C7CFF1089</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Dangerous Function</Type>
    <Subtype>strcpy()</Subtype>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>0366FB762079C193180265C6421F08FB</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="main"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="426" lineEnd="603" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="524"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="524" lineEnd="524" colStart="13" colEnd="0" contextId="1" snippet="8802296934244C73C60978468E21BAED#gzip.c:524:524"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>096B512F2F6DDD78409734CE0169973E</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unzip"/>
        <FunctionDeclarationSourceLocation path="unzip.c" line="100" lineEnd="199" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unzip()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="unzip.c"/>
        <Def key="PrimaryLocation.line" value="135"/>
        <LocationDef path="unzip.c" line="135" lineEnd="135" colStart="6" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unzip.c" line="135" lineEnd="135" colStart="6" colEnd="0" contextId="2" snippet="3522DC1CB5C4B51E0801D97BC6EA4CBC#unzip.c:135:135"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>0DB2BAC0F29B9E64CDAD05BC99647E34</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.7360001</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="decode"/>
        <FunctionDeclarationSourceLocation path="unlzh.c" line="341" lineEnd="379" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="decode()"/>
        <Def key="PrimaryLocation.file" value="unlzh.c"/>
        <Def key="PrimaryLocation.line" value="373"/>
        <LocationDef path="unlzh.c" line="373" lineEnd="373" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="6"/>
          </Entry>
          <Entry>
            <NodeRef id="7"/>
          </Entry>
          <Entry>
            <NodeRef id="8"/>
          </Entry>
          <Entry>
            <NodeRef id="9"/>
          </Entry>
          <Entry>
            <NodeRef id="10"/>
          </Entry>
          <Entry>
            <NodeRef id="11"/>
          </Entry>
          <Entry>
            <NodeRef id="12"/>
          </Entry>
          <Entry>
            <NodeRef id="13"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="373" lineEnd="373" colStart="0" colEnd="0" contextId="5" snippet="CB766819C39ADCF00C939A3D4DC2D2E9#unlzh.c:373:373"/>
              <Action type="Assign">Assignment to buffer[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">LOOP_BOUND, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="6"/>
          </Entry>
          <Entry>
            <NodeRef id="7"/>
          </Entry>
          <Entry>
            <NodeRef id="8"/>
          </Entry>
          <Entry>
            <NodeRef id="9"/>
          </Entry>
          <Entry>
            <NodeRef id="10"/>
          </Entry>
          <Entry>
            <NodeRef id="11"/>
          </Entry>
          <Entry>
            <NodeRef id="12"/>
          </Entry>
          <Entry>
            <NodeRef id="13"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="373" lineEnd="373" colStart="0" colEnd="0" contextId="5" snippet="CB766819C39ADCF00C939A3D4DC2D2E9#unlzh.c:373:373"/>
              <Action type="Assign">Assignment to buffer[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">LOOP_BOUND, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="6"/>
          </Entry>
          <Entry>
            <NodeRef id="7"/>
          </Entry>
          <Entry>
            <NodeRef id="8"/>
          </Entry>
          <Entry>
            <NodeRef id="9"/>
          </Entry>
          <Entry>
            <NodeRef id="10"/>
          </Entry>
          <Entry>
            <NodeRef id="11"/>
          </Entry>
          <Entry>
            <NodeRef id="12"/>
          </Entry>
          <Entry>
            <NodeRef id="13"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="373" lineEnd="373" colStart="0" colEnd="0" contextId="5" snippet="CB766819C39ADCF00C939A3D4DC2D2E9#unlzh.c:373:373"/>
              <Action type="Assign">Assignment to buffer[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">LOOP_BOUND, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="14"/>
          </Entry>
          <Entry>
            <NodeRef id="15"/>
          </Entry>
          <Entry>
            <NodeRef id="16"/>
          </Entry>
          <Entry>
            <NodeRef id="17"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="21"/>
          </Entry>
          <Entry>
            <NodeRef id="22"/>
          </Entry>
          <Entry>
            <NodeRef id="8"/>
          </Entry>
          <Entry>
            <NodeRef id="9"/>
          </Entry>
          <Entry>
            <NodeRef id="10"/>
          </Entry>
          <Entry>
            <NodeRef id="11"/>
          </Entry>
          <Entry>
            <NodeRef id="12"/>
          </Entry>
          <Entry>
            <NodeRef id="13"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="373" lineEnd="373" colStart="0" colEnd="0" contextId="5" snippet="CB766819C39ADCF00C939A3D4DC2D2E9#unlzh.c:373:373"/>
              <Action type="Assign">Assignment to buffer[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">LOOP_BOUND, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BA40B07C-72BC-4732-B24C-9E9C7CFF1089</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Dangerous Function</Type>
    <Subtype>strcpy()</Subtype>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>130C9A32392AE76A980BE40B7E91EDE8</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="treat_file"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="705" lineEnd="852" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="754"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="754" lineEnd="754" colStart="2" colEnd="0" contextId="9" snippet="17023C09FE0883203FD7EE5E0191C600#gzip.c:754:754"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>13F67D49744A4C3312A58E6235B0D3C3</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_codes"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="492" lineEnd="595" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_codes()"/>
        <Def key="PrimaryCall.name" value="memcpy()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="568"/>
        <LocationDef path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="24"/>
          </Entry>
          <Entry>
            <NodeRef id="25"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="36"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="24"/>
          </Entry>
          <Entry>
            <NodeRef id="25"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="44"/>
          </Entry>
          <Entry>
            <NodeRef id="45"/>
          </Entry>
          <Entry>
            <NodeRef id="36"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="44"/>
          </Entry>
          <Entry>
            <NodeRef id="45"/>
          </Entry>
          <Entry>
            <NodeRef id="36"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>144C7C4B50BDF9CD70CB5C309FB26E93</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="get_method"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1152" lineEnd="1312" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="get_method()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1251"/>
        <LocationDef path="gzip.c" line="1251" lineEnd="1251" colStart="4" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1251" lineEnd="1251" colStart="4" colEnd="0" contextId="13" snippet="DD05586025B29EFF7AFF728F5DF5A4CE#gzip.c:1251:1251"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>D9CBF365-998C-464B-BF12-92EE7E08939B</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Unchecked Return Value</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>175F08D5C9639A8BCFE95667EB02F7ED</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="create_outfile"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="863" lineEnd="917" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="create_outfile()"/>
        <Def key="PrimaryCall.name" value="unlink()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="909"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="909" lineEnd="909" colStart="2" colEnd="0" contextId="14" snippet="E6D0C2D5F3B582226B61BEA002C296C2#gzip.c:909:909"/>
              <Action type="InCall">unlink()</Action>
              <Reason>
                <Rule ruleID="D9CBF365-998C-464B-BF12-92EE7E08939B"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>D9CBF365-998C-464B-BF12-92EE7E08939B</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Unchecked Return Value</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>175F08D5C9639A8BCFE95667EB02F7EE</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="create_outfile"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="863" lineEnd="917" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="create_outfile()"/>
        <Def key="PrimaryCall.name" value="unlink()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="896"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="896" lineEnd="896" colStart="6" colEnd="0" contextId="14" snippet="973DD5AF75F3C035956F73D841336B41#gzip.c:896:896"/>
              <Action type="InCall">unlink()</Action>
              <Reason>
                <Rule ruleID="D9CBF365-998C-464B-BF12-92EE7E08939B"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>1835A09F0FC491962FBB8788463E27C3</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="huft_build"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="278" lineEnd="465" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="huft_build()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="312"/>
        <LocationDef path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="46"/>
          </Entry>
          <Entry>
            <NodeRef id="47"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="46"/>
          </Entry>
          <Entry>
            <NodeRef id="47"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="46"/>
          </Entry>
          <Entry>
            <NodeRef id="47"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="46"/>
          </Entry>
          <Entry>
            <NodeRef id="47"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="51"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>186AE77C5CF363EF5CA26C0E53A1FACD</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="get_istat"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="999" lineEnd="1066" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="get_istat()"/>
        <Def key="PrimaryCall.name" value="strcat()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1062"/>
        <LocationDef path="gzip.c" line="1062" lineEnd="1062" colStart="12" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <Node label="Buffer ifname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="233" lineEnd="233" colStart="0" colEnd="0" contextId="19" snippet="6B1F5119B5F077F6759D3766FE085E92#gzip.c:233:233"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1062" lineEnd="1062" colStart="12" colEnd="0" contextId="19" snippet="25BE63DC01FFB65106B5759C33E9B6ED#gzip.c:1062:1062"/>
              <Action type="InCall">strcat(0)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcat</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 257784 bytes</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <Node label="Buffer ifname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="233" lineEnd="233" colStart="0" colEnd="0" contextId="19" snippet="6B1F5119B5F077F6759D3766FE085E92#gzip.c:233:233"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1062" lineEnd="1062" colStart="12" colEnd="0" contextId="19" snippet="25BE63DC01FFB65106B5759C33E9B6ED#gzip.c:1062:1062"/>
              <Action type="InCall">strcat(0)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcat</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 257784 bytes</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="65"/>
          </Entry>
          <Entry>
            <NodeRef id="66"/>
          </Entry>
          <Entry>
            <Node label="Buffer ifname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="233" lineEnd="233" colStart="0" colEnd="0" contextId="19" snippet="6B1F5119B5F077F6759D3766FE085E92#gzip.c:233:233"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="67"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1062" lineEnd="1062" colStart="12" colEnd="0" contextId="19" snippet="25BE63DC01FFB65106B5759C33E9B6ED#gzip.c:1062:1062"/>
              <Action type="InCall">strcat(0)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcat</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 257784 bytes</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>1E854A89201338401106D00C0970030D</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="shorten_name"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1456" lineEnd="1505" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="shorten_name()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1501"/>
        <LocationDef path="gzip.c" line="1501" lineEnd="1501" colStart="21" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1501" lineEnd="1501" colStart="21" colEnd="0" contextId="20" snippet="208EC4111E4A36B09E36FAAF2BE34E29#gzip.c:1501:1501"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>0B138A51-FDDD-4FA6-A615-70B8C0EC87DA</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Integer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>1EA99D73BD562A3D7C00398091054A8D</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="add_envopt"/>
        <FunctionDeclarationSourceLocation path="util.c" line="282" lineEnd="331" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="add_envopt()"/>
        <Def key="PrimaryLocation.file" value="util.c"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="68"/>
          </Entry>
          <Entry>
            <NodeRef id="69"/>
          </Entry>
          <Entry>
            <NodeRef id="70"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="util.c" line="311" lineEnd="311" colStart="0" colEnd="0" contextId="21" snippet="7E23C31018F20CBCB81AEB098BD99D1C#util.c:311:311"/>
              <Action type="InCall">calloc(0)</Action>
              <Reason>
                <Rule ruleID="0B138A51-FDDD-4FA6-A615-70B8C0EC87DA"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : calloc</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED, NUMBER</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>1EBA5CEB45DE7ACEC23FA91AE1B264C4</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="build_tree"/>
        <FunctionDeclarationSourceLocation path="unpack.c" line="145" lineEnd="175" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="build_tree()"/>
        <Def key="PrimaryLocation.file" value="unpack.c"/>
        <Def key="PrimaryLocation.line" value="160"/>
        <LocationDef path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="76"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="76"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>23B739E5D3D9FA56F853B1B295F493C7</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="lm_init"/>
        <FunctionDeclarationSourceLocation path="deflate.c" line="288" lineEnd="342" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="lm_init()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="deflate.c"/>
        <Def key="PrimaryLocation.line" value="292"/>
        <LocationDef path="deflate.c" line="292" lineEnd="292" colStart="43" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="deflate.c" line="292" lineEnd="292" colStart="43" colEnd="0" contextId="23" snippet="4658F7A61388762BE95A791E10EA79A3#deflate.c:292:292"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>23F4266783224FDAC35ED9E14DFED9D2</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unzip"/>
        <FunctionDeclarationSourceLocation path="unzip.c" line="100" lineEnd="199" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unzip()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="unzip.c"/>
        <Def key="PrimaryLocation.line" value="146"/>
        <LocationDef path="unzip.c" line="146" lineEnd="146" colStart="2" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unzip.c" line="146" lineEnd="146" colStart="2" colEnd="0" contextId="2" snippet="46F945612C264A0C9C7B2131B0BF7589#unzip.c:146:146"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>242C0F0A7C89A7D10313801D86A26F4E</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unzip"/>
        <FunctionDeclarationSourceLocation path="unzip.c" line="100" lineEnd="199" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unzip()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="unzip.c"/>
        <Def key="PrimaryLocation.line" value="175"/>
        <LocationDef path="unzip.c" line="175" lineEnd="175" colStart="2" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unzip.c" line="175" lineEnd="175" colStart="2" colEnd="0" contextId="2" snippet="5BAF463AC7DCD78A25471E886260B538#unzip.c:175:175"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>6F195230-103C-42F3-930D-8ACA743407EE</ClassID>
    <Kingdom>Code Quality</Kingdom>
    <Type>Portability Flaw</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>26021C9EDF89E14A0D815006EA7D2BC5</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="main"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="426" lineEnd="603" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="getopt_long()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="481"/>
        <LocationDef path="gzip.c" line="481" lineEnd="481" colStart="20" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="481" lineEnd="481" colStart="20" colEnd="0" contextId="1" snippet="57AC8ABA1B19EE8DB7E2BD73C7B56DF4#gzip.c:481:481"/>
              <Action type="InCall">getopt_long()</Action>
              <Reason>
                <Rule ruleID="6F195230-103C-42F3-930D-8ACA743407EE"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BA40B07C-72BC-4732-B24C-9E9C7CFF1089</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Dangerous Function</Type>
    <Subtype>strcpy()</Subtype>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>26A05B220B13325503B10547A8863789</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="treat_stdin"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="608" lineEnd="699" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="638"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="638" lineEnd="638" colStart="5" colEnd="0" contextId="24" snippet="844D23FE05E207CF0C7A21DBE09A7CBC#gzip.c:638:638"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>2D33C4849EA2ECD60E9CD2A26B0C3F46</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.768</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="801"/>
        <LocationDef path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="51"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>2D33C4849EA2ECD60E9CD2A26B0C3F47</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.768</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="812"/>
        <LocationDef path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="51"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>2E2600FD17C789328BA7D43A656C0A8B</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.8</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="main"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="426" lineEnd="603" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="main()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="439"/>
        <LocationDef path="gzip.c" line="439" lineEnd="439" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="86"/>
          </Entry>
          <Entry>
            <NodeRef id="87"/>
          </Entry>
          <Entry>
            <NodeRef id="88"/>
          </Entry>
          <Entry>
            <NodeRef id="89"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="439" lineEnd="439" colStart="0" colEnd="0" contextId="1" snippet="2FF56C923CFF343594188799CCB53097#gzip.c:439:439"/>
              <Action type="AssignGlobal">Assignment to progname[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED, NUMBER, STRING_LENGTH</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="91"/>
          </Entry>
          <Entry>
            <NodeRef id="87"/>
          </Entry>
          <Entry>
            <NodeRef id="88"/>
          </Entry>
          <Entry>
            <NodeRef id="89"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="439" lineEnd="439" colStart="0" colEnd="0" contextId="1" snippet="2FF56C923CFF343594188799CCB53097#gzip.c:439:439"/>
              <Action type="AssignGlobal">Assignment to progname[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED, NUMBER, STRING_LENGTH</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>40EDB68B39A0F020EFD269700175234D</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="make_ofname"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1072" lineEnd="1137" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="make_ofname()"/>
        <Def key="PrimaryCall.name" value="strcat()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1133"/>
        <LocationDef path="gzip.c" line="1133" lineEnd="1133" colStart="9" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <Node label="Buffer ofname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="234" lineEnd="234" colStart="0" colEnd="0" contextId="26" snippet="072054F20D9EE7EB49E38EF017734B3E#gzip.c:234:234"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1133" lineEnd="1133" colStart="9" colEnd="0" contextId="26" snippet="DCB607E347F3B7AB9A931644BC176A22#gzip.c:1133:1133"/>
              <Action type="InCall">strcat(0)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcat</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 1034 bytes</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <Node label="Buffer ofname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="234" lineEnd="234" colStart="0" colEnd="0" contextId="26" snippet="072054F20D9EE7EB49E38EF017734B3E#gzip.c:234:234"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1133" lineEnd="1133" colStart="9" colEnd="0" contextId="26" snippet="DCB607E347F3B7AB9A931644BC176A22#gzip.c:1133:1133"/>
              <Action type="InCall">strcat(0)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcat</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 1034 bytes</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>44BA57E84BEE79CB08E22B5560E2C1B7</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="flush_block"/>
        <FunctionDeclarationSourceLocation path="trees.c" line="856" lineEnd="952" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="flush_block()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="trees.c"/>
        <Def key="PrimaryLocation.line" value="902"/>
        <LocationDef path="trees.c" line="902" lineEnd="902" colStart="30" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="trees.c" line="902" lineEnd="902" colStart="30" colEnd="0" contextId="27" snippet="86998D2050864CC23856718ABDAB9003#trees.c:902:902"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>44BCCC898735C72A750899A45640CCEA</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_codes"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="492" lineEnd="595" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_codes()"/>
        <Def key="PrimaryCall.name" value="memcpy()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="568"/>
        <LocationDef path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="24"/>
          </Entry>
          <Entry>
            <NodeRef id="25"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="24"/>
          </Entry>
          <Entry>
            <NodeRef id="25"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="44"/>
          </Entry>
          <Entry>
            <NodeRef id="45"/>
          </Entry>
          <Entry>
            <NodeRef id="36"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="24"/>
          </Entry>
          <Entry>
            <NodeRef id="25"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="44"/>
          </Entry>
          <Entry>
            <NodeRef id="45"/>
          </Entry>
          <Entry>
            <NodeRef id="36"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>47B70BCE7B344CC62EACD846B22404FF</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="treat_stdin"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="608" lineEnd="699" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="treat_stdin()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="647"/>
        <LocationDef path="gzip.c" line="647" lineEnd="647" colStart="6" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="647" lineEnd="647" colStart="6" colEnd="0" contextId="24" snippet="A3C5D08FB2E7018B95E8D4936F743940#gzip.c:647:647"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>48623EBBD838AF5BF74BAD78BD65B727</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="get_istat"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="999" lineEnd="1066" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="get_istat()"/>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1009"/>
        <LocationDef path="gzip.c" line="1009" lineEnd="1009" colStart="20" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="65"/>
          </Entry>
          <Entry>
            <NodeRef id="66"/>
          </Entry>
          <Entry>
            <Node label="Buffer ifname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="233" lineEnd="233" colStart="0" colEnd="0" contextId="19" snippet="6B1F5119B5F077F6759D3766FE085E92#gzip.c:233:233"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1009" lineEnd="1009" colStart="20" colEnd="0" contextId="19" snippet="247D202A9301FBF404E24BC02F6D4CB9#gzip.c:1009:1009"/>
              <Action type="InCall">strcpy(1)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcpy</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 262143 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] iname.$strlen: 262142</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>57B0CA93-7DF5-4452-9A00-08AC165BA412</ClassID>
    <Kingdom>Time and State</Kingdom>
    <Type>Race Condition</Type>
    <Subtype>File System Access</Subtype>
    <AnalyzerName>controlflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>49725786FF3E4FCFD29C50CEBCBE5177</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="check_ofname"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1521" lineEnd="1584" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="FirstTraceLocation.file" value="gzip.c"/>
        <Def key="FirstTraceLocation.line" value="1543"/>
        <Def key="FirstTransitionFunction" value="stat()">
          <SourceLocation path="/usr/include/i386-linux-gnu/sys/stat.h" line="211" lineEnd="211" colStart="0" colEnd="0"/>
        </Def>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1576"/>
        <Def key="PrimaryTransitionFunction" value="chmod()">
          <SourceLocation path="/usr/include/i386-linux-gnu/sys/stat.h" line="286" lineEnd="286" colStart="0" colEnd="0"/>
        </Def>
        <LocationDef path="gzip.c" line="1543" lineEnd="1543" colStart="6" colEnd="0" key="FirstTraceLocation"/>
        <LocationDef path="gzip.c" line="1576" lineEnd="1576" colStart="12" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node detailsOnly="true" label="Branch taken">
              <SourceLocation path="gzip.c" line="1541" lineEnd="1541" colStart="0" colEnd="0" snippet="F6CD12EE12D4C93B5BBF736BE82EC1B6#gzip.c:1541:1541"/>
              <Action type="BranchTaken">Branch taken: (decompress == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch taken">
              <SourceLocation path="gzip.c" line="1541" lineEnd="1541" colStart="0" colEnd="0" snippet="F6CD12EE12D4C93B5BBF736BE82EC1B6#gzip.c:1541:1541"/>
              <Action type="BranchTaken">Branch taken: (name_too_long(ofname, (&amp;ostat)) != 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="gzip.c" line="1543" lineEnd="1543" colStart="6" colEnd="0" contextId="28" snippet="A71661C93210DFFC767E89E43A623680#gzip.c:1543:1543"/>
              <Action type="InCall">stat(ofname, &amp;(ostat))</Action>
              <Reason>
                <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="gzip.c" line="1543" lineEnd="1543" colStart="19" colEnd="0" contextId="28" snippet="A71661C93210DFFC767E89E43A623680#gzip.c:1543:1543"/>
              <Action>ostat refers to the stat structure for ofname</Action>
              <Reason>
                <Internal text="ostat refers to the stat structure for ofname"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="1543" lineEnd="1543" colStart="0" colEnd="0" snippet="A71661C93210DFFC767E89E43A623680#gzip.c:1543:1543"/>
              <Action type="BranchNotTaken">Branch not taken: (stat(ofname, (&amp;ostat)) == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="gzip.c" line="1549" lineEnd="1549" colStart="27" colEnd="0" contextId="28" snippet="C4B7DDC9324CF5A6E395DE045FF509F6#gzip.c:1549:1549"/>
              <Action>ostat : Symbolic filename ofname used to check some file property</Action>
              <Reason>
                <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="1549" lineEnd="1549" colStart="0" colEnd="0" snippet="C4B7DDC9324CF5A6E395DE045FF509F6#gzip.c:1549:1549"/>
              <Action type="BranchNotTaken">Branch not taken: (same_file((&amp;istat), (&amp;ostat)) == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="1561" lineEnd="1561" colStart="0" colEnd="0" snippet="4E49F08383090ED8093544977BA5197F#gzip.c:1561:1561"/>
              <Action type="BranchNotTaken">Branch not taken: (force != 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1576" lineEnd="1576" colStart="12" colEnd="0" contextId="28" snippet="CF2933B3455088A4B09C17AD4F9AF231#gzip.c:1576:1576"/>
              <Action type="InCall">chmod(ofname, ...) : Symbolic filename ofname used to operate on a file</Action>
              <Reason>
                <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <Node detailsOnly="true" label="Branch taken">
              <SourceLocation path="gzip.c" line="1541" lineEnd="1541" colStart="0" colEnd="0" snippet="F6CD12EE12D4C93B5BBF736BE82EC1B6#gzip.c:1541:1541"/>
              <Action type="BranchTaken">Branch taken: (decompress == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="gzip.c" line="1541" lineEnd="1541" colStart="24" colEnd="0" contextId="28" snippet="F6CD12EE12D4C93B5BBF736BE82EC1B6#gzip.c:1541:1541"/>
              <Action type="InOutCall">name_too_long(ofname, ?) : Symbolic filename ofname used to check some file property</Action>
              <Reason>
                <TraceRef id="0"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="1541" lineEnd="1541" colStart="0" colEnd="0" snippet="F6CD12EE12D4C93B5BBF736BE82EC1B6#gzip.c:1541:1541"/>
              <Action type="BranchNotTaken">Branch not taken: (name_too_long(ofname, (&amp;ostat)) == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="1549" lineEnd="1549" colStart="0" colEnd="0" snippet="C4B7DDC9324CF5A6E395DE045FF509F6#gzip.c:1549:1549"/>
              <Action type="BranchNotTaken">Branch not taken: (same_file((&amp;istat), (&amp;ostat)) == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="1561" lineEnd="1561" colStart="0" colEnd="0" snippet="4E49F08383090ED8093544977BA5197F#gzip.c:1561:1561"/>
              <Action type="BranchNotTaken">Branch not taken: (force != 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1576" lineEnd="1576" colStart="12" colEnd="0" contextId="28" snippet="CF2933B3455088A4B09C17AD4F9AF231#gzip.c:1576:1576"/>
              <Action type="InCall">chmod(ofname, ...) : Symbolic filename ofname used to operate on a file</Action>
              <Reason>
                <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <Node detailsOnly="true" label="Branch taken">
              <SourceLocation path="gzip.c" line="1541" lineEnd="1541" colStart="0" colEnd="0" snippet="F6CD12EE12D4C93B5BBF736BE82EC1B6#gzip.c:1541:1541"/>
              <Action type="BranchTaken">Branch taken: (decompress == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="gzip.c" line="1541" lineEnd="1541" colStart="24" colEnd="0" contextId="28" snippet="F6CD12EE12D4C93B5BBF736BE82EC1B6#gzip.c:1541:1541"/>
              <Action type="InOutCall">name_too_long(ofname, ?)</Action>
              <Reason>
                <TraceRef id="1"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="gzip.c" line="1541" lineEnd="1541" colStart="24" colEnd="0" contextId="28" snippet="F6CD12EE12D4C93B5BBF736BE82EC1B6#gzip.c:1541:1541"/>
              <Action>name_too_long(ofname, (&amp;ostat)) : Symbolic filename ofname used to check some file property</Action>
              <Reason>
                <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="1541" lineEnd="1541" colStart="0" colEnd="0" snippet="F6CD12EE12D4C93B5BBF736BE82EC1B6#gzip.c:1541:1541"/>
              <Action type="BranchNotTaken">Branch not taken: (name_too_long(ofname, (&amp;ostat)) == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="1549" lineEnd="1549" colStart="0" colEnd="0" snippet="C4B7DDC9324CF5A6E395DE045FF509F6#gzip.c:1549:1549"/>
              <Action type="BranchNotTaken">Branch not taken: (same_file((&amp;istat), (&amp;ostat)) == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="1561" lineEnd="1561" colStart="0" colEnd="0" snippet="4E49F08383090ED8093544977BA5197F#gzip.c:1561:1561"/>
              <Action type="BranchNotTaken">Branch not taken: (force != 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1576" lineEnd="1576" colStart="12" colEnd="0" contextId="28" snippet="CF2933B3455088A4B09C17AD4F9AF231#gzip.c:1576:1576"/>
              <Action type="InCall">chmod(ofname, ...) : Symbolic filename ofname used to operate on a file</Action>
              <Reason>
                <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Path Manipulation</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>506ABDCC8B8ABFBAFA999351E69BB7A1</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="abort_gzip"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1737" lineEnd="1744" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="unlink()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1741"/>
        <Def key="SinkFunction" value="unlink()">
          <SourceLocation path="gzip.c" line="831" lineEnd="831" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SinkLocation.file" value="gzip.c"/>
        <Def key="SinkLocation.line" value="1741"/>
        <Def key="SourceFunction" value="main()">
          <SourceLocation path="gzip.c" line="424" lineEnd="424" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SourceLocation.file" value="gzip.c"/>
        <Def key="SourceLocation.line" value="426"/>
        <LocationDef path="gzip.c" line="1741" lineEnd="1741" colStart="16" colEnd="0" key="SinkLocation"/>
        <LocationDef path="gzip.c" line="426" lineEnd="426" colStart="0" colEnd="0" key="SourceLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="93"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1741" lineEnd="1741" colStart="16" colEnd="0" contextId="30" snippet="F8C0AA28D05835FB4EC9F3602F6706E9#gzip.c:1741:1741"/>
              <Action type="InCall">unlink(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : unlink</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="93"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1741" lineEnd="1741" colStart="16" colEnd="0" contextId="30" snippet="F8C0AA28D05835FB4EC9F3602F6706E9#gzip.c:1741:1741"/>
              <Action type="InCall">unlink(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : unlink</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>56E20FD7CF9E7ADF9200A06AB6AEA673</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unlzw"/>
        <FunctionDeclarationSourceLocation path="unlzw.c" line="193" lineEnd="377" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unlzw()"/>
        <Def key="PrimaryCall.name" value="memcpy()"/>
        <Def key="PrimaryLocation.file" value="unlzw.c"/>
        <Def key="PrimaryLocation.line" value="344"/>
        <LocationDef path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="94"/>
          </Entry>
          <Entry>
            <NodeRef id="95"/>
          </Entry>
          <Entry>
            <NodeRef id="96"/>
          </Entry>
          <Entry>
            <NodeRef id="97"/>
          </Entry>
          <Entry>
            <NodeRef id="98"/>
          </Entry>
          <Entry>
            <NodeRef id="99"/>
          </Entry>
          <Entry>
            <NodeRef id="100"/>
          </Entry>
          <Entry>
            <NodeRef id="101"/>
          </Entry>
          <Entry>
            <NodeRef id="102"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="14"/>
          </Entry>
          <Entry>
            <NodeRef id="15"/>
          </Entry>
          <Entry>
            <NodeRef id="16"/>
          </Entry>
          <Entry>
            <NodeRef id="17"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="105"/>
          </Entry>
          <Entry>
            <NodeRef id="95"/>
          </Entry>
          <Entry>
            <NodeRef id="96"/>
          </Entry>
          <Entry>
            <NodeRef id="97"/>
          </Entry>
          <Entry>
            <NodeRef id="98"/>
          </Entry>
          <Entry>
            <NodeRef id="99"/>
          </Entry>
          <Entry>
            <NodeRef id="100"/>
          </Entry>
          <Entry>
            <NodeRef id="101"/>
          </Entry>
          <Entry>
            <NodeRef id="102"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="112"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="114"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="112"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="114"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>56E20FD7CF9E7ADF9200A06AB6AEA674</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unlzw"/>
        <FunctionDeclarationSourceLocation path="unlzw.c" line="193" lineEnd="377" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unlzw()"/>
        <Def key="PrimaryCall.name" value="memcpy()"/>
        <Def key="PrimaryLocation.file" value="unlzw.c"/>
        <Def key="PrimaryLocation.line" value="357"/>
        <LocationDef path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="94"/>
          </Entry>
          <Entry>
            <NodeRef id="95"/>
          </Entry>
          <Entry>
            <NodeRef id="96"/>
          </Entry>
          <Entry>
            <NodeRef id="97"/>
          </Entry>
          <Entry>
            <NodeRef id="98"/>
          </Entry>
          <Entry>
            <NodeRef id="99"/>
          </Entry>
          <Entry>
            <NodeRef id="100"/>
          </Entry>
          <Entry>
            <NodeRef id="101"/>
          </Entry>
          <Entry>
            <NodeRef id="102"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="14"/>
          </Entry>
          <Entry>
            <NodeRef id="15"/>
          </Entry>
          <Entry>
            <NodeRef id="16"/>
          </Entry>
          <Entry>
            <NodeRef id="17"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="105"/>
          </Entry>
          <Entry>
            <NodeRef id="95"/>
          </Entry>
          <Entry>
            <NodeRef id="96"/>
          </Entry>
          <Entry>
            <NodeRef id="97"/>
          </Entry>
          <Entry>
            <NodeRef id="98"/>
          </Entry>
          <Entry>
            <NodeRef id="99"/>
          </Entry>
          <Entry>
            <NodeRef id="100"/>
          </Entry>
          <Entry>
            <NodeRef id="101"/>
          </Entry>
          <Entry>
            <NodeRef id="102"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="112"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="114"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="112"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="114"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>5D2B7B98-B81A-4B28-A6E6-F3C5C6268019</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>buffer</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>578C51D30E5233B1F0DDA0F98E5AD180</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="get_suffix"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="949" lineEnd="987" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="Buffer.name" value="suffix"/>
        <Def key="EnclosingFunction.name" value="get_suffix()"/>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="974"/>
        <LocationDef path="gzip.c" line="974" lineEnd="974" colStart="9" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node label="Caller: make_ofname" isDefault="false">
              <SourceLocation path="gzip.c" line="1078" lineEnd="1078" colStart="12" colEnd="0" contextId="26" snippet="8E97EA16EC849A176F379BE199C5C330#gzip.c:1078:1078"/>
              <Knowledge>
                <Fact primary="true" type="Buffer">Buffer Size: 1024</Fact>
              </Knowledge>
            </Node>
          </Entry>
          <Entry>
            <Node label="Buffer suffix Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="952" lineEnd="952" colStart="0" colEnd="0" contextId="34" snippet="22207A1EE9684CD0CCCBF31BAF3FBDDA#gzip.c:952:952"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="974" lineEnd="974" colStart="9" colEnd="0" contextId="34" snippet="73C2EE4425709A2505352A239DE91BEF#gzip.c:974:974"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="FAFAD4F2-360F-4CC4-A076-1775F75FE4230"/>
              </Reason>
              <Knowledge>
                <Fact primary="true" type="Buffer">Buffer Size: 33 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 262143 bytes</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>587B4DB03F2C0656B755287C7F03CF74</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.768</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="801"/>
        <LocationDef path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>587B4DB03F2C0656B755287C7F03CF75</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.768</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="812"/>
        <LocationDef path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>57B0CA93-7DF5-4452-9A00-08AC165BA412</ClassID>
    <Kingdom>Time and State</Kingdom>
    <Type>Race Condition</Type>
    <Subtype>File System Access</Subtype>
    <AnalyzerName>controlflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>5A0DD8C9D2DCA24137B2978B94DAC2CC</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="create_outfile"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="863" lineEnd="917" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="FirstTraceLocation.file" value="gzip.c"/>
        <Def key="FirstTraceLocation.line" value="879"/>
        <Def key="FirstTransitionFunction" value="open()">
          <SourceLocation path="/usr/include/fcntl.h" line="119" lineEnd="119" colStart="0" colEnd="0"/>
        </Def>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="909"/>
        <Def key="PrimaryTransitionFunction" value="unlink()">
          <SourceLocation path="gzip.c" line="831" lineEnd="831" colStart="0" colEnd="0"/>
        </Def>
        <LocationDef path="gzip.c" line="879" lineEnd="879" colStart="35" colEnd="0" key="FirstTraceLocation"/>
        <LocationDef path="gzip.c" line="909" lineEnd="909" colStart="2" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="873" lineEnd="873" colStart="0" colEnd="0" snippet="11B57864FD904084BC97AFD205F187F0#gzip.c:873:873"/>
              <Action type="BranchNotTaken">Branch not taken: (check_ofname() == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="gzip.c" line="879" lineEnd="879" colStart="35" colEnd="0" contextId="14" snippet="894C70D7C77B08CC116170E3C7EEB406#gzip.c:879:879"/>
              <SecondaryLocation path="tailor.h" line="319" lineEnd="319" colStart="0" colEnd="0" snippet="232AD5630BC74D988122A85A2A5CF36F#tailor.h:319:319"/>
              <Action type="InCall">open(ofname, ...) : Symbolic filename ofname used to open a file</Action>
              <Reason>
                <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="880" lineEnd="880" colStart="0" colEnd="0" snippet="02D45B494B6C7E1DBFBDC54C3072CDCE#gzip.c:880:880"/>
              <Action type="BranchNotTaken">Branch not taken: (ofd != -1)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="891" lineEnd="891" colStart="0" colEnd="0" snippet="267FD560746EB7EE4AB5FFFC3EE2861A#gzip.c:891:891"/>
              <Action type="BranchNotTaken">Branch not taken: (fstat(ofd, (&amp;ostat)) == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="900" lineEnd="900" colStart="0" colEnd="0" snippet="D5EA78DA824D537020EDF3D847A6B4B0#gzip.c:900:900"/>
              <Action type="BranchNotTaken">Branch not taken: (name_too_long(ofname, (&amp;ostat)) != 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="902" lineEnd="902" colStart="0" colEnd="0" snippet="4982B62717342E34E245D7EC067BC105#gzip.c:902:902"/>
              <Action type="BranchNotTaken">Branch not taken: (decompress == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="909" lineEnd="909" colStart="2" colEnd="0" contextId="14" snippet="E6D0C2D5F3B582226B61BEA002C296C2#gzip.c:909:909"/>
              <Action type="InCall">unlink(ofname) : Symbolic filename ofname used to operate on a file</Action>
              <Reason>
                <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="873" lineEnd="873" colStart="0" colEnd="0" snippet="11B57864FD904084BC97AFD205F187F0#gzip.c:873:873"/>
              <Action type="BranchNotTaken">Branch not taken: (check_ofname() == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="880" lineEnd="880" colStart="0" colEnd="0" snippet="02D45B494B6C7E1DBFBDC54C3072CDCE#gzip.c:880:880"/>
              <Action type="BranchNotTaken">Branch not taken: (ofd != -1)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="891" lineEnd="891" colStart="0" colEnd="0" snippet="267FD560746EB7EE4AB5FFFC3EE2861A#gzip.c:891:891"/>
              <Action type="BranchNotTaken">Branch not taken: (fstat(ofd, (&amp;ostat)) == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="gzip.c" line="900" lineEnd="900" colStart="7" colEnd="0" contextId="14" snippet="D5EA78DA824D537020EDF3D847A6B4B0#gzip.c:900:900"/>
              <Action type="InOutCall">name_too_long(ofname, ?) : Symbolic filename ofname used to check some file property</Action>
              <Reason>
                <TraceRef id="0"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="900" lineEnd="900" colStart="0" colEnd="0" snippet="D5EA78DA824D537020EDF3D847A6B4B0#gzip.c:900:900"/>
              <Action type="BranchNotTaken">Branch not taken: (name_too_long(ofname, (&amp;ostat)) != 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="902" lineEnd="902" colStart="0" colEnd="0" snippet="4982B62717342E34E245D7EC067BC105#gzip.c:902:902"/>
              <Action type="BranchNotTaken">Branch not taken: (decompress == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="909" lineEnd="909" colStart="2" colEnd="0" contextId="14" snippet="E6D0C2D5F3B582226B61BEA002C296C2#gzip.c:909:909"/>
              <Action type="InCall">unlink(ofname) : Symbolic filename ofname used to operate on a file</Action>
              <Reason>
                <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="873" lineEnd="873" colStart="0" colEnd="0" snippet="11B57864FD904084BC97AFD205F187F0#gzip.c:873:873"/>
              <Action type="BranchNotTaken">Branch not taken: (check_ofname() == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="880" lineEnd="880" colStart="0" colEnd="0" snippet="02D45B494B6C7E1DBFBDC54C3072CDCE#gzip.c:880:880"/>
              <Action type="BranchNotTaken">Branch not taken: (ofd != -1)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="891" lineEnd="891" colStart="0" colEnd="0" snippet="267FD560746EB7EE4AB5FFFC3EE2861A#gzip.c:891:891"/>
              <Action type="BranchNotTaken">Branch not taken: (fstat(ofd, (&amp;ostat)) == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="gzip.c" line="900" lineEnd="900" colStart="7" colEnd="0" contextId="14" snippet="D5EA78DA824D537020EDF3D847A6B4B0#gzip.c:900:900"/>
              <Action type="InOutCall">name_too_long(ofname, ?)</Action>
              <Reason>
                <TraceRef id="1"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="gzip.c" line="900" lineEnd="900" colStart="7" colEnd="0" contextId="14" snippet="D5EA78DA824D537020EDF3D847A6B4B0#gzip.c:900:900"/>
              <Action>name_too_long(ofname, (&amp;ostat)) : Symbolic filename ofname used to check some file property</Action>
              <Reason>
                <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="900" lineEnd="900" colStart="0" colEnd="0" snippet="D5EA78DA824D537020EDF3D847A6B4B0#gzip.c:900:900"/>
              <Action type="BranchNotTaken">Branch not taken: (name_too_long(ofname, (&amp;ostat)) != 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="902" lineEnd="902" colStart="0" colEnd="0" snippet="4982B62717342E34E245D7EC067BC105#gzip.c:902:902"/>
              <Action type="BranchNotTaken">Branch not taken: (decompress == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="909" lineEnd="909" colStart="2" colEnd="0" contextId="14" snippet="E6D0C2D5F3B582226B61BEA002C296C2#gzip.c:909:909"/>
              <Action type="InCall">unlink(ofname) : Symbolic filename ofname used to operate on a file</Action>
              <Reason>
                <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>5B4F22AAE770A2117A5949FBB747D5DC</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="make_table"/>
        <FunctionDeclarationSourceLocation path="unlzh.c" line="145" lineEnd="199" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="make_table()"/>
        <Def key="PrimaryLocation.file" value="unlzh.c"/>
        <Def key="PrimaryLocation.line" value="151"/>
        <LocationDef path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="121"/>
          </Entry>
          <Entry>
            <NodeRef id="122"/>
          </Entry>
          <Entry>
            <NodeRef id="123"/>
          </Entry>
          <Entry>
            <NodeRef id="124"/>
          </Entry>
          <Entry>
            <NodeRef id="125"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="51"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="126"/>
          </Entry>
          <Entry>
            <NodeRef id="127"/>
          </Entry>
          <Entry>
            <NodeRef id="128"/>
          </Entry>
          <Entry>
            <NodeRef id="129"/>
          </Entry>
          <Entry>
            <NodeRef id="130"/>
          </Entry>
          <Entry>
            <NodeRef id="131"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>5BF3B50D9A94F141FC7B608578D458B3</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.8</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_codes"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="492" lineEnd="595" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_codes()"/>
        <Def key="PrimaryCall.name" value="memcpy()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="568"/>
        <LocationDef path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="24"/>
          </Entry>
          <Entry>
            <NodeRef id="25"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="134"/>
          </Entry>
          <Entry>
            <NodeRef id="25"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="44"/>
          </Entry>
          <Entry>
            <NodeRef id="45"/>
          </Entry>
          <Entry>
            <NodeRef id="36"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="24"/>
          </Entry>
          <Entry>
            <NodeRef id="25"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="135"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="137"/>
          </Entry>
          <Entry>
            <NodeRef id="24"/>
          </Entry>
          <Entry>
            <NodeRef id="25"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>5CCAD0BC3688132792B8B806EC44D652</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>2.4</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="build_tree"/>
        <FunctionDeclarationSourceLocation path="unpack.c" line="145" lineEnd="175" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="build_tree()"/>
        <Def key="PrimaryLocation.file" value="unpack.c"/>
        <Def key="PrimaryLocation.line" value="160"/>
        <LocationDef path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>5D2B7B98-B81A-4B28-A6E6-F3C5C6268019</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>62D3DC582CE1CB12F4D040F1BF9B1957</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="get_suffix"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="949" lineEnd="987" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="Buffer.name" value="suffix"/>
        <Def key="EnclosingFunction.name" value="get_suffix()"/>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="974"/>
        <LocationDef path="gzip.c" line="974" lineEnd="974" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="138"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="974" lineEnd="974" colStart="0" colEnd="0" contextId="34" snippet="73C2EE4425709A2505352A239DE91BEF#gzip.c:974:974"/>
              <Action type="InCall">strcpy(1)</Action>
              <Reason>
                <Rule ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcpy</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="139"/>
          </Entry>
          <Entry>
            <NodeRef id="140"/>
          </Entry>
          <Entry>
            <NodeRef id="141"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="974" lineEnd="974" colStart="0" colEnd="0" contextId="34" snippet="73C2EE4425709A2505352A239DE91BEF#gzip.c:974:974"/>
              <Action type="InCall">strcpy(1)</Action>
              <Reason>
                <Rule ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcpy</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="139"/>
          </Entry>
          <Entry>
            <NodeRef id="140"/>
          </Entry>
          <Entry>
            <NodeRef id="141"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="974" lineEnd="974" colStart="0" colEnd="0" contextId="34" snippet="73C2EE4425709A2505352A239DE91BEF#gzip.c:974:974"/>
              <Action type="InCall">strcpy(1)</Action>
              <Reason>
                <Rule ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcpy</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="142"/>
          </Entry>
          <Entry>
            <NodeRef id="143"/>
          </Entry>
          <Entry>
            <NodeRef id="141"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="974" lineEnd="974" colStart="0" colEnd="0" contextId="34" snippet="73C2EE4425709A2505352A239DE91BEF#gzip.c:974:974"/>
              <Action type="InCall">strcpy(1)</Action>
              <Reason>
                <Rule ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcpy</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="142"/>
          </Entry>
          <Entry>
            <NodeRef id="143"/>
          </Entry>
          <Entry>
            <NodeRef id="141"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="974" lineEnd="974" colStart="0" colEnd="0" contextId="34" snippet="73C2EE4425709A2505352A239DE91BEF#gzip.c:974:974"/>
              <Action type="InCall">strcpy(1)</Action>
              <Reason>
                <Rule ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcpy</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>635DA35079548EE0A97C8A1E50C5162F</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="xmalloc"/>
        <FunctionDeclarationSourceLocation path="util.c" line="398" lineEnd="404" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="xmalloc()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="util.c"/>
        <Def key="PrimaryLocation.line" value="402"/>
        <LocationDef path="util.c" line="402" lineEnd="402" colStart="21" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="util.c" line="402" lineEnd="402" colStart="21" colEnd="0" contextId="41" snippet="4041F7F2148FCCF373E1AA27D683F416#util.c:402:402"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BA40B07C-72BC-4732-B24C-9E9C7CFF1089</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Dangerous Function</Type>
    <Subtype>strcpy()</Subtype>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>642B8E78557835BC184B9268D61AF00F</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="shorten_name"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1456" lineEnd="1505" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1477"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1477" lineEnd="1477" colStart="2" colEnd="0" contextId="20" snippet="3ED53A926AD5838C9D1CD86DE8795BA6#gzip.c:1477:1477"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>651B9AA3EAFF20D052AAA7F35A2FD5F3</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.768</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="801"/>
        <LocationDef path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>651B9AA3EAFF20D052AAA7F35A2FD5F4</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.768</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="812"/>
        <LocationDef path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>660047078509011AE690D828AA53CB12</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="add_envopt"/>
        <FunctionDeclarationSourceLocation path="util.c" line="282" lineEnd="331" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="add_envopt()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="util.c"/>
        <Def key="PrimaryLocation.line" value="317"/>
        <LocationDef path="util.c" line="317" lineEnd="317" colStart="22" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="util.c" line="317" lineEnd="317" colStart="22" colEnd="0" contextId="21" snippet="A421080DB1451D8AF844A0AC4CE8770C#util.c:317:317"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>678CFB63D62E334D58D3FE65FA519808</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="make_table"/>
        <FunctionDeclarationSourceLocation path="unlzh.c" line="145" lineEnd="199" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="make_table()"/>
        <Def key="PrimaryLocation.file" value="unlzh.c"/>
        <Def key="PrimaryLocation.line" value="151"/>
        <LocationDef path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="144"/>
          </Entry>
          <Entry>
            <NodeRef id="145"/>
          </Entry>
          <Entry>
            <NodeRef id="146"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <NodeRef id="144"/>
          </Entry>
          <Entry>
            <NodeRef id="145"/>
          </Entry>
          <Entry>
            <NodeRef id="146"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="148"/>
          </Entry>
          <Entry>
            <NodeRef id="145"/>
          </Entry>
          <Entry>
            <NodeRef id="146"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <NodeRef id="148"/>
          </Entry>
          <Entry>
            <NodeRef id="145"/>
          </Entry>
          <Entry>
            <NodeRef id="146"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="144"/>
          </Entry>
          <Entry>
            <NodeRef id="145"/>
          </Entry>
          <Entry>
            <NodeRef id="146"/>
          </Entry>
          <Entry>
            <NodeRef id="151"/>
          </Entry>
          <Entry>
            <NodeRef id="152"/>
          </Entry>
          <Entry>
            <NodeRef id="153"/>
          </Entry>
          <Entry>
            <NodeRef id="154"/>
          </Entry>
          <Entry>
            <NodeRef id="155"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>69772CE970399C95839E641BB94F2777</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.768</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="782"/>
        <LocationDef path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>69772CE970399C95839E641BB94F2778</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.768</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="791"/>
        <LocationDef path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>D9CBF365-998C-464B-BF12-92EE7E08939B</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Unchecked Return Value</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>7B01656BDBECC3A347D5E744779657DA</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="treat_file"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="705" lineEnd="852" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="treat_file()"/>
        <Def key="PrimaryCall.name" value="unlink()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="831"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="831" lineEnd="831" colStart="18" colEnd="0" contextId="9" snippet="6F4AD3B4A46273FC804D75B473F361D1#gzip.c:831:831"/>
              <Action type="InCall">unlink()</Action>
              <Reason>
                <Rule ruleID="D9CBF365-998C-464B-BF12-92EE7E08939B"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>FDE123D1-00F8-A0F5-E54C-B20080EE8025</ClassID>
    <Kingdom>Code Quality</Kingdom>
    <Type>Null Dereference</Type>
    <AnalyzerName>controlflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>7E4915ADEFF42807D20F063CAABB4239</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="huft_build"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="278" lineEnd="465" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="huft_build()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="446"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="false">
              <SourceLocation path="inflate.c" line="371" lineEnd="371" colStart="3" colEnd="0" contextId="16" snippet="30E848AC157E46A3C1567EDCC511B6F9#inflate.c:371:371"/>
              <Action>Assigned null : q</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch taken">
              <SourceLocation path="inflate.c" line="375" lineEnd="375" colStart="0" colEnd="0" snippet="AA2453B944A16F78012A2A2A359F9294#inflate.c:375:375"/>
              <Action type="BranchTaken">Branch taken: (k &lt;= g)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch taken">
              <SourceLocation path="inflate.c" line="378" lineEnd="378" colStart="0" colEnd="0" snippet="23A27ED0636233A6D7CBDC7F76C64321#inflate.c:378:378"/>
              <Action type="BranchTaken">Branch taken: (&lt;inline expression&gt; != 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="inflate.c" line="382" lineEnd="382" colStart="0" colEnd="0" snippet="660C509D962DE0C2FC7B180700CB4DCF#inflate.c:382:382"/>
              <Action type="BranchNotTaken">Branch not taken: (k &lt;= (w + l))</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch taken">
              <SourceLocation path="inflate.c" line="445" lineEnd="445" colStart="0" colEnd="0" snippet="38C64096ABE563CF38675F9B7EE8ACDD#inflate.c:445:445"/>
              <Action type="BranchTaken">Branch taken: (j &lt; z)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="446" lineEnd="446" colStart="9" colEnd="0" contextId="16" snippet="9C2A2C6C520E7B4E47CC9793FA4D190C#inflate.c:446:446"/>
              <Action>Dereferenced : q</Action>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>7EF7E5CD-5511-49A5-B57E-87F33F2C6C82</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Integer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>7F9408D3519A084535200F13F4BB7451</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="xmalloc"/>
        <FunctionDeclarationSourceLocation path="util.c" line="398" lineEnd="404" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="xmalloc()"/>
        <Def key="PrimaryLocation.file" value="util.c"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="156"/>
          </Entry>
          <Entry>
            <NodeRef id="157"/>
          </Entry>
          <Entry>
            <NodeRef id="158"/>
          </Entry>
          <Entry>
            <NodeRef id="159"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="util.c" line="400" lineEnd="400" colStart="31" colEnd="0" contextId="41" snippet="F75BCC893BA25FCAE57E92D952E63966#util.c:400:400"/>
              <Action type="InCall">malloc(0)</Action>
              <Reason>
                <Rule ruleID="7EF7E5CD-5511-49A5-B57E-87F33F2C6C82"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : malloc</Fact>
                <Fact primary="false" type="TaintFlags">ENVIRONMENT, NULL_TERMINATED, NUMBER, STRING_LENGTH</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>8077403797F5B36B79BD0CFA5F1B6746</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unpack"/>
        <FunctionDeclarationSourceLocation path="unpack.c" line="186" lineEnd="239" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unpack()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="unpack.c"/>
        <Def key="PrimaryLocation.line" value="236"/>
        <LocationDef path="unpack.c" line="236" lineEnd="236" colStart="2" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="236" lineEnd="236" colStart="2" colEnd="0" contextId="18" snippet="B4C71BB8ADCB2DD54141DFA5A2120D3D#unpack.c:236:236"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>82F8E20B34A2D37A8CDEEC0AA59F04F1</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="huft_build"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="278" lineEnd="465" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="huft_build()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="312"/>
        <LocationDef path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="46"/>
          </Entry>
          <Entry>
            <NodeRef id="47"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="46"/>
          </Entry>
          <Entry>
            <NodeRef id="47"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="46"/>
          </Entry>
          <Entry>
            <NodeRef id="47"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="46"/>
          </Entry>
          <Entry>
            <NodeRef id="47"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="51"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Path Manipulation</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>87E561E46CCD5890A3EDBDBCC53EDD1C</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="treat_file"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="705" lineEnd="852" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="open()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="764"/>
        <Def key="SinkFunction" value="open()">
          <SourceLocation path="/usr/include/fcntl.h" line="119" lineEnd="119" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SinkLocation.file" value="gzip.c"/>
        <Def key="SinkLocation.line" value="764"/>
        <Def key="SourceFunction" value="main()">
          <SourceLocation path="gzip.c" line="424" lineEnd="424" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SourceLocation.file" value="gzip.c"/>
        <Def key="SourceLocation.line" value="426"/>
        <LocationDef path="gzip.c" line="764" lineEnd="764" colStart="16" colEnd="0" key="SinkLocation"/>
        <LocationDef path="gzip.c" line="426" lineEnd="426" colStart="0" colEnd="0" key="SourceLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="160"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="764" lineEnd="764" colStart="16" colEnd="0" contextId="9" snippet="BEF0E8C8F816586373615C5A4766848E#gzip.c:764:764"/>
              <SecondaryLocation path="tailor.h" line="319" lineEnd="319" colStart="0" colEnd="0" snippet="232AD5630BC74D988122A85A2A5CF36F#tailor.h:319:319"/>
              <Action type="InCall">open(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : open</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <NodeRef id="160"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="764" lineEnd="764" colStart="16" colEnd="0" contextId="9" snippet="BEF0E8C8F816586373615C5A4766848E#gzip.c:764:764"/>
              <SecondaryLocation path="tailor.h" line="319" lineEnd="319" colStart="0" colEnd="0" snippet="232AD5630BC74D988122A85A2A5CF36F#tailor.h:319:319"/>
              <Action type="InCall">open(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : open</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>89BDEE891BEED1D3CB7CB68DA6116F59</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unlzw"/>
        <FunctionDeclarationSourceLocation path="unlzw.c" line="193" lineEnd="377" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unlzw()"/>
        <Def key="PrimaryCall.name" value="memcpy()"/>
        <Def key="PrimaryLocation.file" value="unlzw.c"/>
        <Def key="PrimaryLocation.line" value="344"/>
        <LocationDef path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="51"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="161"/>
          </Entry>
          <Entry>
            <NodeRef id="162"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="163"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="161"/>
          </Entry>
          <Entry>
            <NodeRef id="162"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="94"/>
          </Entry>
          <Entry>
            <NodeRef id="95"/>
          </Entry>
          <Entry>
            <NodeRef id="96"/>
          </Entry>
          <Entry>
            <NodeRef id="97"/>
          </Entry>
          <Entry>
            <NodeRef id="98"/>
          </Entry>
          <Entry>
            <NodeRef id="99"/>
          </Entry>
          <Entry>
            <NodeRef id="100"/>
          </Entry>
          <Entry>
            <NodeRef id="101"/>
          </Entry>
          <Entry>
            <NodeRef id="102"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="14"/>
          </Entry>
          <Entry>
            <NodeRef id="15"/>
          </Entry>
          <Entry>
            <NodeRef id="16"/>
          </Entry>
          <Entry>
            <NodeRef id="17"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="112"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="114"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>89BDEE891BEED1D3CB7CB68DA6116F5A</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unlzw"/>
        <FunctionDeclarationSourceLocation path="unlzw.c" line="193" lineEnd="377" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unlzw()"/>
        <Def key="PrimaryCall.name" value="memcpy()"/>
        <Def key="PrimaryLocation.file" value="unlzw.c"/>
        <Def key="PrimaryLocation.line" value="357"/>
        <LocationDef path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="51"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="161"/>
          </Entry>
          <Entry>
            <NodeRef id="162"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="163"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="161"/>
          </Entry>
          <Entry>
            <NodeRef id="162"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="94"/>
          </Entry>
          <Entry>
            <NodeRef id="95"/>
          </Entry>
          <Entry>
            <NodeRef id="96"/>
          </Entry>
          <Entry>
            <NodeRef id="97"/>
          </Entry>
          <Entry>
            <NodeRef id="98"/>
          </Entry>
          <Entry>
            <NodeRef id="99"/>
          </Entry>
          <Entry>
            <NodeRef id="100"/>
          </Entry>
          <Entry>
            <NodeRef id="101"/>
          </Entry>
          <Entry>
            <NodeRef id="102"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="14"/>
          </Entry>
          <Entry>
            <NodeRef id="15"/>
          </Entry>
          <Entry>
            <NodeRef id="16"/>
          </Entry>
          <Entry>
            <NodeRef id="17"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="112"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="114"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>95414A7F-C5A3-4E3C-BC41-0630BDED9E36</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Unchecked Return Value</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>8AF1B07C40A2A38D652C0617C2D31B30</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="copy_stat"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1615" lineEnd="1641" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="copy_stat()"/>
        <Def key="PrimaryCall.name" value="chown()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1632"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1632" lineEnd="1632" colStart="5" colEnd="0" contextId="43" snippet="5FFB1586F6F5F617B8E80D42C1694152#gzip.c:1632:1632"/>
              <Action type="InCall">chown()</Action>
              <Reason>
                <Rule ruleID="95414A7F-C5A3-4E3C-BC41-0630BDED9E36"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>9221F1A8E75BDA02C2D343F2D204DC13</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.5376</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="801"/>
        <LocationDef path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="164"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="135"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="137"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="165"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="801" lineEnd="801" colStart="0" colEnd="0" contextId="15" snippet="D52637778487FEFD2E07649D376F6490#inflate.c:801:801"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">LOOP_BOUND, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>9221F1A8E75BDA02C2D343F2D204DC14</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.5376</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="812"/>
        <LocationDef path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="166"/>
          </Entry>
          <Entry>
            <NodeRef id="167"/>
          </Entry>
          <Entry>
            <NodeRef id="168"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="135"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="137"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="165"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="812" lineEnd="812" colStart="0" colEnd="0" contextId="15" snippet="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">LOOP_BOUND, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>9B8AC0D7EED1A95D0B0A77ECE3A52133</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>2.4</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="make_table"/>
        <FunctionDeclarationSourceLocation path="unlzh.c" line="145" lineEnd="199" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="make_table()"/>
        <Def key="PrimaryLocation.file" value="unlzh.c"/>
        <Def key="PrimaryLocation.line" value="151"/>
        <LocationDef path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="161"/>
          </Entry>
          <Entry>
            <NodeRef id="162"/>
          </Entry>
          <Entry>
            <NodeRef id="169"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="170"/>
          </Entry>
          <Entry>
            <NodeRef id="171"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="135"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="114"/>
          </Entry>
          <Entry>
            <NodeRef id="174"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="135"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="114"/>
          </Entry>
          <Entry>
            <NodeRef id="175"/>
          </Entry>
          <Entry>
            <NodeRef id="176"/>
          </Entry>
          <Entry>
            <NodeRef id="177"/>
          </Entry>
          <Entry>
            <NodeRef id="178"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>9BB88ED63C836166CC2A7A8114E63B17</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="huft_build"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="278" lineEnd="465" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="huft_build()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="312"/>
        <LocationDef path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="46"/>
          </Entry>
          <Entry>
            <NodeRef id="47"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="46"/>
          </Entry>
          <Entry>
            <NodeRef id="47"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="51"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Path Manipulation</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>9EAD8514E15816CBAC20290CBA6CA7C2</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="check_ofname"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1521" lineEnd="1584" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="unlink()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1577"/>
        <Def key="SinkFunction" value="unlink()">
          <SourceLocation path="gzip.c" line="831" lineEnd="831" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SinkLocation.file" value="gzip.c"/>
        <Def key="SinkLocation.line" value="1577"/>
        <Def key="SourceFunction" value="main()">
          <SourceLocation path="gzip.c" line="424" lineEnd="424" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SourceLocation.file" value="gzip.c"/>
        <Def key="SourceLocation.line" value="426"/>
        <LocationDef path="gzip.c" line="1577" lineEnd="1577" colStart="16" colEnd="0" key="SinkLocation"/>
        <LocationDef path="gzip.c" line="426" lineEnd="426" colStart="0" colEnd="0" key="SourceLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="179"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1577" lineEnd="1577" colStart="16" colEnd="0" contextId="28" snippet="BE4D87FC376C5EA115B5CACAFDB73D17#gzip.c:1577:1577"/>
              <Action type="InCall">unlink(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : unlink</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="179"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1577" lineEnd="1577" colStart="16" colEnd="0" contextId="28" snippet="BE4D87FC376C5EA115B5CACAFDB73D17#gzip.c:1577:1577"/>
              <Action type="InCall">unlink(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : unlink</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>9F3934880CAB1648942A0F1CDEC21619</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="make_table"/>
        <FunctionDeclarationSourceLocation path="unlzh.c" line="145" lineEnd="199" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="make_table()"/>
        <Def key="PrimaryLocation.file" value="unlzh.c"/>
        <Def key="PrimaryLocation.line" value="151"/>
        <LocationDef path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="51"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="51"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Path Manipulation</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>A1605C34F5A339715D139C1536759E52</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="copy_stat"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1615" lineEnd="1641" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="unlink()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1637"/>
        <Def key="SinkFunction" value="unlink()">
          <SourceLocation path="gzip.c" line="831" lineEnd="831" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SinkLocation.file" value="gzip.c"/>
        <Def key="SinkLocation.line" value="1637"/>
        <Def key="SourceFunction" value="main()">
          <SourceLocation path="gzip.c" line="424" lineEnd="424" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SourceLocation.file" value="gzip.c"/>
        <Def key="SourceLocation.line" value="426"/>
        <LocationDef path="gzip.c" line="1637" lineEnd="1637" colStart="16" colEnd="0" key="SinkLocation"/>
        <LocationDef path="gzip.c" line="426" lineEnd="426" colStart="0" colEnd="0" key="SourceLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="180"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1637" lineEnd="1637" colStart="16" colEnd="0" contextId="43" snippet="9C351CE165DF5B449318990E8EE9E7F9#gzip.c:1637:1637"/>
              <Action type="InCall">unlink(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : unlink</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <NodeRef id="180"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1637" lineEnd="1637" colStart="16" colEnd="0" contextId="43" snippet="9C351CE165DF5B449318990E8EE9E7F9#gzip.c:1637:1637"/>
              <Action type="InCall">unlink(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : unlink</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>A36F8D63B6F963B73C47C6837A718E1B</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unzip"/>
        <FunctionDeclarationSourceLocation path="unzip.c" line="100" lineEnd="199" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unzip()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="unzip.c"/>
        <Def key="PrimaryLocation.line" value="125"/>
        <LocationDef path="unzip.c" line="125" lineEnd="125" colStart="6" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unzip.c" line="125" lineEnd="125" colStart="6" colEnd="0" contextId="2" snippet="2169445FF88E7E4C5247A3F871C22A07#unzip.c:125:125"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>D9CBF365-998C-464B-BF12-92EE7E08939B</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Unchecked Return Value</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>A4C4F6F46CBCFA691D7D3D4D5E4BAB81</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="abort_gzip"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1737" lineEnd="1744" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="abort_gzip()"/>
        <Def key="PrimaryCall.name" value="unlink()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1741"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1741" lineEnd="1741" colStart="8" colEnd="0" contextId="30" snippet="F8C0AA28D05835FB4EC9F3602F6706E9#gzip.c:1741:1741"/>
              <Action type="InCall">unlink()</Action>
              <Reason>
                <Rule ruleID="D9CBF365-998C-464B-BF12-92EE7E08939B"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>AC084DB389B6A544E7763367B7838A3E</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unlzw"/>
        <FunctionDeclarationSourceLocation path="unlzw.c" line="193" lineEnd="377" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unlzw()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="unlzw.c"/>
        <Def key="PrimaryLocation.line" value="287"/>
        <LocationDef path="unlzw.c" line="287" lineEnd="287" colStart="20" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="287" lineEnd="287" colStart="20" colEnd="0" contextId="3" snippet="B250C48EA4F957E0357897DB54FFD4DD#unlzw.c:287:287"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>AD263B58C6F21D6BEE3FF6503E152DF7</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.768</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="782"/>
        <LocationDef path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>AD263B58C6F21D6BEE3FF6503E152DF8</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.768</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="791"/>
        <LocationDef path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BA40B07C-72BC-4732-B24C-9E9C7CFF1089</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Dangerous Function</Type>
    <Subtype>strcpy()</Subtype>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>AD47533EA060894C51EC5FFD378F8D6F</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="make_ofname"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1072" lineEnd="1137" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1097"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1097" lineEnd="1097" colStart="6" colEnd="0" contextId="26" snippet="A7AE0BF7A124B928773DEA13BF4ED56C#gzip.c:1097:1097"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>63E1A29D-E3D7-C1C6-040D-FA1808593DFA</ClassID>
    <Kingdom>Code Quality</Kingdom>
    <Type>Dead Code</Type>
    <AnalyzerName>structural</AnalyzerName>
    <DefaultSeverity>1.5</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>AD69070C927A5A6F5E474ED97ED102EF</InstanceID>
    <InstanceSeverity>1.5</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="scan_tree"/>
        <FunctionDeclarationSourceLocation path="trees.c" line="698" lineEnd="734" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryLocation.file" value="trees.c"/>
        <Def key="PrimaryLocation.line" value="727"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="trees.c" line="727" lineEnd="727" colStart="0" colEnd="0" contextId="44" snippet="EAA58F648B7C05E32F4EF703AD28482A#trees.c:727:727"/>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>AFBB37ADE0F3FD75C529B3B4EF2EE7F0</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="add_envopt"/>
        <FunctionDeclarationSourceLocation path="util.c" line="282" lineEnd="331" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="add_envopt()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="util.c"/>
        <Def key="PrimaryLocation.line" value="312"/>
        <LocationDef path="util.c" line="312" lineEnd="312" colStart="24" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="util.c" line="312" lineEnd="312" colStart="24" colEnd="0" contextId="21" snippet="FB27177FE5B7A5B34A6B078118AEDDD3#util.c:312:312"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>B4C16F2F158180A118E8C88DA66AA8A3</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="build_tree"/>
        <FunctionDeclarationSourceLocation path="unpack.c" line="145" lineEnd="175" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="build_tree()"/>
        <Def key="PrimaryLocation.file" value="unpack.c"/>
        <Def key="PrimaryLocation.line" value="156"/>
        <LocationDef path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="76"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="76"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>B58C379CB5E54EAE578E7710DC9A845B</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="build_tree"/>
        <FunctionDeclarationSourceLocation path="unpack.c" line="145" lineEnd="175" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="build_tree()"/>
        <Def key="PrimaryLocation.file" value="unpack.c"/>
        <Def key="PrimaryLocation.line" value="156"/>
        <LocationDef path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="76"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>B6B100E9CC89CE5878945CDF7B8A2BCE</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>2.4</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="huft_build"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="278" lineEnd="465" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="huft_build()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="312"/>
        <LocationDef path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="46"/>
          </Entry>
          <Entry>
            <NodeRef id="47"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="181"/>
          </Entry>
          <Entry>
            <NodeRef id="182"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="135"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="137"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="183"/>
          </Entry>
          <Entry>
            <NodeRef id="184"/>
          </Entry>
          <Entry>
            <NodeRef id="185"/>
          </Entry>
          <Entry>
            <NodeRef id="187"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="48"/>
          </Entry>
          <Entry>
            <NodeRef id="49"/>
          </Entry>
          <Entry>
            <Node label="Buffer c Declared" isDefault="false">
              <SourceLocation path="inflate.c" line="286" lineEnd="286" colStart="0" colEnd="0" contextId="16" snippet="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="50"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="312" lineEnd="312" colStart="5" colEnd="0" contextId="16" snippet="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312"/>
              <Action type="Assign">Assignment to c[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 68 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 134217728 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] *p: 33554431</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Path Manipulation</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>BBB9649F6214E4F446EC109855C8A6A6</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="create_outfile"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="863" lineEnd="917" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="open()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="879"/>
        <Def key="SinkFunction" value="open()">
          <SourceLocation path="/usr/include/fcntl.h" line="119" lineEnd="119" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SinkLocation.file" value="gzip.c"/>
        <Def key="SinkLocation.line" value="879"/>
        <Def key="SourceFunction" value="main()">
          <SourceLocation path="gzip.c" line="424" lineEnd="424" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SourceLocation.file" value="gzip.c"/>
        <Def key="SourceLocation.line" value="426"/>
        <LocationDef path="gzip.c" line="879" lineEnd="879" colStart="13" colEnd="0" key="SinkLocation"/>
        <LocationDef path="gzip.c" line="426" lineEnd="426" colStart="0" colEnd="0" key="SourceLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="188"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="879" lineEnd="879" colStart="13" colEnd="0" contextId="14" snippet="894C70D7C77B08CC116170E3C7EEB406#gzip.c:879:879"/>
              <SecondaryLocation path="tailor.h" line="319" lineEnd="319" colStart="0" colEnd="0" snippet="232AD5630BC74D988122A85A2A5CF36F#tailor.h:319:319"/>
              <Action type="InCall">open(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : open</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="188"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="879" lineEnd="879" colStart="13" colEnd="0" contextId="14" snippet="894C70D7C77B08CC116170E3C7EEB406#gzip.c:879:879"/>
              <SecondaryLocation path="tailor.h" line="319" lineEnd="319" colStart="0" colEnd="0" snippet="232AD5630BC74D988122A85A2A5CF36F#tailor.h:319:319"/>
              <Action type="InCall">open(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : open</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Path Manipulation</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>BBD603A62BD4E7A6C070394D009B7AC0</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="treat_file"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="705" lineEnd="852" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="unlink()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="831"/>
        <Def key="SinkFunction" value="unlink()">
          <SourceLocation path="gzip.c" line="831" lineEnd="831" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SinkLocation.file" value="gzip.c"/>
        <Def key="SinkLocation.line" value="831"/>
        <Def key="SourceFunction" value="main()">
          <SourceLocation path="gzip.c" line="424" lineEnd="424" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SourceLocation.file" value="gzip.c"/>
        <Def key="SourceLocation.line" value="426"/>
        <LocationDef path="gzip.c" line="831" lineEnd="831" colStart="26" colEnd="0" key="SinkLocation"/>
        <LocationDef path="gzip.c" line="426" lineEnd="426" colStart="0" colEnd="0" key="SourceLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="831" lineEnd="831" colStart="26" colEnd="0" contextId="9" snippet="6F4AD3B4A46273FC804D75B473F361D1#gzip.c:831:831"/>
              <Action type="InCall">unlink(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : unlink</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="831" lineEnd="831" colStart="26" colEnd="0" contextId="9" snippet="6F4AD3B4A46273FC804D75B473F361D1#gzip.c:831:831"/>
              <Action type="InCall">unlink(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : unlink</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BA40B07C-72BC-4732-B24C-9E9C7CFF1089</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Dangerous Function</Type>
    <Subtype>strcpy()</Subtype>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>BEFA7E49914B573C7E0E4E1D0DB6C703</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="get_istat"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="999" lineEnd="1066" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1009"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1009" lineEnd="1009" colStart="5" colEnd="0" contextId="19" snippet="247D202A9301FBF404E24BC02F6D4CB9#gzip.c:1009:1009"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>E34C4271-5E8A-47E8-8943-07B4F10CDE73</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Integer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>C643B3CEF793FBD04F410B279E09B600</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="add_envopt"/>
        <FunctionDeclarationSourceLocation path="util.c" line="282" lineEnd="331" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="add_envopt()"/>
        <Def key="PrimaryLocation.file" value="util.c"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="156"/>
          </Entry>
          <Entry>
            <NodeRef id="157"/>
          </Entry>
          <Entry>
            <NodeRef id="158"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="util.c" line="293" lineEnd="293" colStart="0" colEnd="0" contextId="21" snippet="F9C3D466CCA10E83B80340FDDEB49931#util.c:293:293"/>
              <Action type="InCall">xmalloc(0)</Action>
              <Reason>
                <Rule ruleID="E34C4271-5E8A-47E8-8943-07B4F10CDE73"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : xmalloc</Fact>
                <Fact primary="false" type="TaintFlags">ENVIRONMENT, NULL_TERMINATED, NUMBER, STRING_LENGTH</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>C6F06368DB3BB3837D20E489389F075F</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="build_tree"/>
        <FunctionDeclarationSourceLocation path="unpack.c" line="145" lineEnd="175" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="build_tree()"/>
        <Def key="PrimaryLocation.file" value="unpack.c"/>
        <Def key="PrimaryLocation.line" value="160"/>
        <LocationDef path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="76"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>C74510723CE972492065501DE4D315D3</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.8</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unlzw"/>
        <FunctionDeclarationSourceLocation path="unlzw.c" line="193" lineEnd="377" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unlzw()"/>
        <Def key="PrimaryCall.name" value="memcpy()"/>
        <Def key="PrimaryLocation.file" value="unlzw.c"/>
        <Def key="PrimaryLocation.line" value="344"/>
        <LocationDef path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="161"/>
          </Entry>
          <Entry>
            <NodeRef id="162"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="161"/>
          </Entry>
          <Entry>
            <NodeRef id="162"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="135"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="114"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>C74510723CE972492065501DE4D315D4</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.8</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unlzw"/>
        <FunctionDeclarationSourceLocation path="unlzw.c" line="193" lineEnd="377" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unlzw()"/>
        <Def key="PrimaryCall.name" value="memcpy()"/>
        <Def key="PrimaryLocation.file" value="unlzw.c"/>
        <Def key="PrimaryLocation.line" value="357"/>
        <LocationDef path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="161"/>
          </Entry>
          <Entry>
            <NodeRef id="162"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="161"/>
          </Entry>
          <Entry>
            <NodeRef id="162"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="135"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="114"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>C7D50A451F009F86156A0A260C125D9A</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="make_table"/>
        <FunctionDeclarationSourceLocation path="unlzh.c" line="145" lineEnd="199" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="make_table()"/>
        <Def key="PrimaryLocation.file" value="unlzh.c"/>
        <Def key="PrimaryLocation.line" value="151"/>
        <LocationDef path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="51"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="77"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="163"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="115"/>
          </Entry>
          <Entry>
            <NodeRef id="119"/>
          </Entry>
          <Entry>
            <NodeRef id="120"/>
          </Entry>
          <Entry>
            <Node label="Buffer count Declared" isDefault="false">
              <SourceLocation path="unlzh.c" line="147" lineEnd="147" colStart="0" colEnd="0" contextId="36" snippet="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="151" lineEnd="151" colStart="43" colEnd="0" contextId="36" snippet="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151"/>
              <Action type="Assign">Assignment to count[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 34 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 188 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] bitlen[i]: 93</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>C809513D919F182404B0D3AF00802478</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="shorten_name"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1456" lineEnd="1505" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="shorten_name()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1466"/>
        <LocationDef path="gzip.c" line="1466" lineEnd="1466" colStart="16" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1466" lineEnd="1466" colStart="16" colEnd="0" contextId="20" snippet="B23A3A3860365D76A3E75F5542B87962#gzip.c:1466:1466"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Path Manipulation</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>CC1C30C942B27D87047F3293D49EE6C8</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="create_outfile"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="863" lineEnd="917" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="unlink()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="896"/>
        <Def key="SinkFunction" value="unlink()">
          <SourceLocation path="gzip.c" line="831" lineEnd="831" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SinkLocation.file" value="gzip.c"/>
        <Def key="SinkLocation.line" value="896"/>
        <Def key="SourceFunction" value="main()">
          <SourceLocation path="gzip.c" line="424" lineEnd="424" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SourceLocation.file" value="gzip.c"/>
        <Def key="SourceLocation.line" value="426"/>
        <LocationDef path="gzip.c" line="896" lineEnd="896" colStart="13" colEnd="0" key="SinkLocation"/>
        <LocationDef path="gzip.c" line="426" lineEnd="426" colStart="0" colEnd="0" key="SourceLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="189"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="896" lineEnd="896" colStart="13" colEnd="0" contextId="14" snippet="973DD5AF75F3C035956F73D841336B41#gzip.c:896:896"/>
              <Action type="InCall">unlink(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : unlink</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="189"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="896" lineEnd="896" colStart="13" colEnd="0" contextId="14" snippet="973DD5AF75F3C035956F73D841336B41#gzip.c:896:896"/>
              <Action type="InCall">unlink(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : unlink</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Path Manipulation</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>CC1C30C942B27D87047F3293D49EE6C9</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="create_outfile"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="863" lineEnd="917" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="unlink()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="909"/>
        <Def key="SinkFunction" value="unlink()">
          <SourceLocation path="gzip.c" line="831" lineEnd="831" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SinkLocation.file" value="gzip.c"/>
        <Def key="SinkLocation.line" value="909"/>
        <Def key="SourceFunction" value="main()">
          <SourceLocation path="gzip.c" line="424" lineEnd="424" colStart="0" colEnd="0"/>
        </Def>
        <Def key="SourceLocation.file" value="gzip.c"/>
        <Def key="SourceLocation.line" value="426"/>
        <LocationDef path="gzip.c" line="909" lineEnd="909" colStart="9" colEnd="0" key="SinkLocation"/>
        <LocationDef path="gzip.c" line="426" lineEnd="426" colStart="0" colEnd="0" key="SourceLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="190"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="909" lineEnd="909" colStart="9" colEnd="0" contextId="14" snippet="E6D0C2D5F3B582226B61BEA002C296C2#gzip.c:909:909"/>
              <Action type="InCall">unlink(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : unlink</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <NodeRef id="92"/>
          </Entry>
          <Entry>
            <NodeRef id="190"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="909" lineEnd="909" colStart="9" colEnd="0" contextId="14" snippet="E6D0C2D5F3B582226B61BEA002C296C2#gzip.c:909:909"/>
              <Action type="InCall">unlink(0)</Action>
              <Reason>
                <Rule ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : unlink</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BA40B07C-72BC-4732-B24C-9E9C7CFF1089</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Dangerous Function</Type>
    <Subtype>strcpy()</Subtype>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>CFE4A1B5592E6F1967E32F6EAFB14A6D</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="add_envopt"/>
        <FunctionDeclarationSourceLocation path="util.c" line="282" lineEnd="331" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="util.c"/>
        <Def key="PrimaryLocation.line" value="294"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="util.c" line="294" lineEnd="294" colStart="11" colEnd="0" contextId="21" snippet="48E9BE42F868B43FEBB11D1985CC7ED5#util.c:294:294"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>D088CB3040D3319B4569FB2E4D6B6C85</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="build_tree"/>
        <FunctionDeclarationSourceLocation path="unpack.c" line="145" lineEnd="175" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="build_tree()"/>
        <Def key="PrimaryLocation.file" value="unpack.c"/>
        <Def key="PrimaryLocation.line" value="156"/>
        <LocationDef path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="76"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BA40B07C-72BC-4732-B24C-9E9C7CFF1089</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Dangerous Function</Type>
    <Subtype>strcpy()</Subtype>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>D1B83E74F5E0D3F27D38F626233C32C4</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="treat_stdin"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="608" lineEnd="699" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="639"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="639" lineEnd="639" colStart="5" colEnd="0" contextId="24" snippet="28CF27E41B8C1FE6C0893D73701ACA76#gzip.c:639:639"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>D25E91E2D9A9CE9965B3A0007E14E683</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="shorten_name"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1456" lineEnd="1505" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="shorten_name()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1471"/>
        <LocationDef path="gzip.c" line="1471" lineEnd="1471" colStart="20" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1471" lineEnd="1471" colStart="20" colEnd="0" contextId="20" snippet="ADF6BCC577EC02AF50B9A8E14091F42D#gzip.c:1471:1471"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>D4B67DF2C8F54CBFDA41FFE65C7B5C08</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unzip"/>
        <FunctionDeclarationSourceLocation path="unzip.c" line="100" lineEnd="199" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unzip()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="unzip.c"/>
        <Def key="PrimaryLocation.line" value="123"/>
        <LocationDef path="unzip.c" line="123" lineEnd="123" colStart="6" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unzip.c" line="123" lineEnd="123" colStart="6" colEnd="0" contextId="2" snippet="814DBF38A5AF4C361061784A6D6945B0#unzip.c:123:123"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>1763683B-B7F0-4A25-BF21-6A7233743A8D</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Missing Check against Null</Type>
    <AnalyzerName>controlflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>D789BA1D90F59F778175124B56BE1C17</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="do_list"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1321" lineEnd="1401" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="do_list()"/>
        <Def key="LastTraceLocation.line" value="1381"/>
        <Def key="PrimaryCall.name" value="ctime()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1381"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="1334" lineEnd="1334" colStart="0" colEnd="0" snippet="7605F4C903AB43F82D35FF0075206339#gzip.c:1334:1334"/>
              <Action type="BranchNotTaken">Branch not taken: (first_time == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="1342" lineEnd="1342" colStart="0" colEnd="0" snippet="E66B3D835EEE6B8F470AAD0C7FD07DDA#gzip.c:1342:1342"/>
              <Action type="BranchNotTaken">Branch not taken: (method &gt;= 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="1362" lineEnd="1362" colStart="0" colEnd="0" snippet="285D81FF66F9C5493C8A92A6BAC65E4C#gzip.c:1362:1362"/>
              <Action type="BranchNotTaken">Branch not taken: (method != 8)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1381" lineEnd="1381" colStart="12" colEnd="0" contextId="46" snippet="F621C6CDAE7C9CFDC20445CC9FE1E67D#gzip.c:1381:1381"/>
              <Action type="Assign">ctime(...) : ctime may return NULL</Action>
              <Reason>
                <Rule ruleID="1763683B-B7F0-4A25-BF21-6A7233743A8D"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="gzip.c" line="1381" lineEnd="1381" colStart="12" colEnd="0" contextId="46" snippet="F621C6CDAE7C9CFDC20445CC9FE1E67D#gzip.c:1381:1381"/>
              <Action>ctime((&amp;time_stamp)) : return value used without null check</Action>
              <Reason>
                <Rule ruleID="1763683B-B7F0-4A25-BF21-6A7233743A8D"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>D8228C7478EACE0859183C85FA527F8D</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.5376</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="782"/>
        <LocationDef path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="164"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="135"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="137"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="165"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">LOOP_BOUND, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>D8228C7478EACE0859183C85FA527F8E</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.5376</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="791"/>
        <LocationDef path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="166"/>
          </Entry>
          <Entry>
            <NodeRef id="167"/>
          </Entry>
          <Entry>
            <NodeRef id="168"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="106"/>
          </Entry>
          <Entry>
            <NodeRef id="107"/>
          </Entry>
          <Entry>
            <NodeRef id="108"/>
          </Entry>
          <Entry>
            <NodeRef id="109"/>
          </Entry>
          <Entry>
            <NodeRef id="110"/>
          </Entry>
          <Entry>
            <NodeRef id="111"/>
          </Entry>
          <Entry>
            <NodeRef id="135"/>
          </Entry>
          <Entry>
            <NodeRef id="113"/>
          </Entry>
          <Entry>
            <NodeRef id="137"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="165"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">LOOP_BOUND, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>D9EBB41338EC7BC3A25E428038D7F45C</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unlzw"/>
        <FunctionDeclarationSourceLocation path="unlzw.c" line="193" lineEnd="377" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unlzw()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="unlzw.c"/>
        <Def key="PrimaryLocation.line" value="321"/>
        <LocationDef path="unlzw.c" line="321" lineEnd="321" colStart="7" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="321" lineEnd="321" colStart="7" colEnd="0" contextId="3" snippet="714F93D2B3E62D65197138A525AA9B2F#unlzw.c:321:321"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BA40B07C-72BC-4732-B24C-9E9C7CFF1089</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Dangerous Function</Type>
    <Subtype>strcpy()</Subtype>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>DA63098C24D8B35951C415B0A8388654</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="check_ofname"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1521" lineEnd="1584" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1563"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1563" lineEnd="1563" colStart="2" colEnd="0" contextId="28" snippet="E52F9CF6FD94261D809AC3EF87AE0943#gzip.c:1563:1563"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>57B0CA93-7DF5-4452-9A00-08AC165BA412</ClassID>
    <Kingdom>Time and State</Kingdom>
    <Type>Race Condition</Type>
    <Subtype>File System Access</Subtype>
    <AnalyzerName>controlflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>DAB86CE3D4CA674E7C3CCD2CFA320426</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="create_outfile"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="863" lineEnd="917" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="FirstTraceLocation.file" value="gzip.c"/>
        <Def key="FirstTraceLocation.line" value="879"/>
        <Def key="FirstTransitionFunction" value="open()">
          <SourceLocation path="/usr/include/fcntl.h" line="119" lineEnd="119" colStart="0" colEnd="0"/>
        </Def>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="896"/>
        <Def key="PrimaryTransitionFunction" value="unlink()">
          <SourceLocation path="gzip.c" line="831" lineEnd="831" colStart="0" colEnd="0"/>
        </Def>
        <LocationDef path="gzip.c" line="879" lineEnd="879" colStart="35" colEnd="0" key="FirstTraceLocation"/>
        <LocationDef path="gzip.c" line="896" lineEnd="896" colStart="6" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="873" lineEnd="873" colStart="0" colEnd="0" snippet="11B57864FD904084BC97AFD205F187F0#gzip.c:873:873"/>
              <Action type="BranchNotTaken">Branch not taken: (check_ofname() == 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="gzip.c" line="879" lineEnd="879" colStart="35" colEnd="0" contextId="14" snippet="894C70D7C77B08CC116170E3C7EEB406#gzip.c:879:879"/>
              <SecondaryLocation path="tailor.h" line="319" lineEnd="319" colStart="0" colEnd="0" snippet="232AD5630BC74D988122A85A2A5CF36F#tailor.h:319:319"/>
              <Action type="InCall">open(ofname, ...) : Symbolic filename ofname used to open a file</Action>
              <Reason>
                <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="gzip.c" line="880" lineEnd="880" colStart="0" colEnd="0" snippet="02D45B494B6C7E1DBFBDC54C3072CDCE#gzip.c:880:880"/>
              <Action type="BranchNotTaken">Branch not taken: (ofd != -1)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch taken">
              <SourceLocation path="gzip.c" line="891" lineEnd="891" colStart="0" colEnd="0" snippet="267FD560746EB7EE4AB5FFFC3EE2861A#gzip.c:891:891"/>
              <Action type="BranchTaken">Branch taken: (fstat(ofd, (&amp;ostat)) != 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="896" lineEnd="896" colStart="6" colEnd="0" contextId="14" snippet="973DD5AF75F3C035956F73D841336B41#gzip.c:896:896"/>
              <Action type="InCall">unlink(ofname) : Symbolic filename ofname used to operate on a file</Action>
              <Reason>
                <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>DBFF24D24854A2801D605D6FDAF00AD7</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="get_istat"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="999" lineEnd="1066" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="get_istat()"/>
        <Def key="PrimaryCall.name" value="strcat()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1051"/>
        <LocationDef path="gzip.c" line="1051" lineEnd="1051" colStart="16" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <Node label="Buffer ifname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="233" lineEnd="233" colStart="0" colEnd="0" contextId="19" snippet="6B1F5119B5F077F6759D3766FE085E92#gzip.c:233:233"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1051" lineEnd="1051" colStart="16" colEnd="0" contextId="19" snippet="FDE557C2800213AB8496AA4528BB7300#gzip.c:1051:1051"/>
              <Action type="InCall">strcat(0)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcat</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 430366 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] s.$strlen: 211749</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <Node label="Buffer ifname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="233" lineEnd="233" colStart="0" colEnd="0" contextId="19" snippet="6B1F5119B5F077F6759D3766FE085E92#gzip.c:233:233"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1051" lineEnd="1051" colStart="16" colEnd="0" contextId="19" snippet="FDE557C2800213AB8496AA4528BB7300#gzip.c:1051:1051"/>
              <Action type="InCall">strcat(0)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcat</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 430366 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] s.$strlen: 211749</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <Node label="Buffer ifname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="233" lineEnd="233" colStart="0" colEnd="0" contextId="19" snippet="6B1F5119B5F077F6759D3766FE085E92#gzip.c:233:233"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1051" lineEnd="1051" colStart="16" colEnd="0" contextId="19" snippet="FDE557C2800213AB8496AA4528BB7300#gzip.c:1051:1051"/>
              <Action type="InCall">strcat(0)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcat</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 430366 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] s.$strlen: 211749</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <Node label="Buffer ifname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="233" lineEnd="233" colStart="0" colEnd="0" contextId="19" snippet="6B1F5119B5F077F6759D3766FE085E92#gzip.c:233:233"/>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1051" lineEnd="1051" colStart="16" colEnd="0" contextId="19" snippet="FDE557C2800213AB8496AA4528BB7300#gzip.c:1051:1051"/>
              <Action type="InCall">strcat(0)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcat</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 430366 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] s.$strlen: 211749</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="65"/>
          </Entry>
          <Entry>
            <NodeRef id="66"/>
          </Entry>
          <Entry>
            <Node label="Buffer ifname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="233" lineEnd="233" colStart="0" colEnd="0" contextId="19" snippet="6B1F5119B5F077F6759D3766FE085E92#gzip.c:233:233"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="67"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1051" lineEnd="1051" colStart="16" colEnd="0" contextId="19" snippet="FDE557C2800213AB8496AA4528BB7300#gzip.c:1051:1051"/>
              <Action type="InCall">strcat(0)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : strcat</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 430366 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] s.$strlen: 211749</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>DC4C5444A842BC6216069E25D8EF9FDD</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.7360001</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="decode"/>
        <FunctionDeclarationSourceLocation path="unlzh.c" line="341" lineEnd="379" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="decode()"/>
        <Def key="PrimaryLocation.file" value="unlzh.c"/>
        <Def key="PrimaryLocation.line" value="373"/>
        <LocationDef path="unlzh.c" line="373" lineEnd="373" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="71"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="6"/>
          </Entry>
          <Entry>
            <NodeRef id="7"/>
          </Entry>
          <Entry>
            <NodeRef id="8"/>
          </Entry>
          <Entry>
            <NodeRef id="9"/>
          </Entry>
          <Entry>
            <NodeRef id="10"/>
          </Entry>
          <Entry>
            <NodeRef id="11"/>
          </Entry>
          <Entry>
            <NodeRef id="12"/>
          </Entry>
          <Entry>
            <NodeRef id="13"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="373" lineEnd="373" colStart="0" colEnd="0" contextId="5" snippet="CB766819C39ADCF00C939A3D4DC2D2E9#unlzh.c:373:373"/>
              <Action type="Assign">Assignment to buffer[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">LOOP_BOUND, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BA40B07C-72BC-4732-B24C-9E9C7CFF1089</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Dangerous Function</Type>
    <Subtype>strcpy()</Subtype>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>DECB2D85C8BA9CA8BF07A52C7715EFBB</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="get_suffix"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="949" lineEnd="987" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="972"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="972" lineEnd="972" colStart="9" colEnd="0" contextId="34" snippet="747045B6A0976906FBDC8403725F5533#gzip.c:972:972"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>DF5D8DBF299CC2108478BD0D02DFB052</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="read_tree"/>
        <FunctionDeclarationSourceLocation path="unpack.c" line="94" lineEnd="140" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="read_tree()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="unpack.c"/>
        <Def key="PrimaryLocation.line" value="106"/>
        <LocationDef path="unpack.c" line="106" lineEnd="106" colStart="2" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="106" lineEnd="106" colStart="2" colEnd="0" contextId="17" snippet="E832F2B6F411894ACAC216248F3ADD80#unpack.c:106:106"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BA40B07C-72BC-4732-B24C-9E9C7CFF1089</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Dangerous Function</Type>
    <Subtype>strcpy()</Subtype>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>E244AB9326F6D701F7A751B3D48A4262</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="shorten_name"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1456" lineEnd="1505" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1504"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1504" lineEnd="1504" colStart="5" colEnd="0" contextId="20" snippet="92A8B22588360180D43ADB5A2DA38045#gzip.c:1504:1504"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>E65FA7B786F803C8A45C25E4BC6A7D3C</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>2.4</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="build_tree"/>
        <FunctionDeclarationSourceLocation path="unpack.c" line="145" lineEnd="175" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="build_tree()"/>
        <Def key="PrimaryLocation.file" value="unpack.c"/>
        <Def key="PrimaryLocation.line" value="156"/>
        <LocationDef path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="132"/>
          </Entry>
          <Entry>
            <NodeRef id="133"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer parents Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="47" lineEnd="47" colStart="0" colEnd="0" contextId="22" snippet="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="156" lineEnd="156" colStart="0" colEnd="0" contextId="22" snippet="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156"/>
              <Action type="AssignGlobal">Assignment to parents[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>B530C5D6-3C71-48C5-9512-72A7F4911822</ClassID>
    <Kingdom>Code Quality</Kingdom>
    <Type>Memory Leak</Type>
    <AnalyzerName>controlflow</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>E965C0A70CC3A43A9252EC30986DE063</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="huft_build"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="278" lineEnd="465" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="huft_build()"/>
        <Def key="FirstTraceLocation.file" value="inflate.c"/>
        <Def key="FirstTraceLocation.line" value="403"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="inflate.c" line="315" lineEnd="315" colStart="0" colEnd="0" snippet="8A123D01B4006D44FEB51D0B7DC24A8E#inflate.c:315:315"/>
              <Action type="BranchNotTaken">Branch not taken: (c[0] != n)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="inflate.c" line="344" lineEnd="344" colStart="0" colEnd="0" snippet="2DDEC54763082456C067CC212E3C039F#inflate.c:344:344"/>
              <Action type="BranchNotTaken">Branch not taken: (y &gt;= 0)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch taken">
              <SourceLocation path="inflate.c" line="375" lineEnd="375" colStart="0" colEnd="0" snippet="AA2453B944A16F78012A2A2A359F9294#inflate.c:375:375"/>
              <Action type="BranchTaken">Branch taken: (k &lt;= g)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch taken">
              <SourceLocation path="inflate.c" line="382" lineEnd="382" colStart="0" colEnd="0" snippet="660C509D962DE0C2FC7B180700CB4DCF#inflate.c:382:382"/>
              <Action type="BranchTaken">Branch taken: (k &gt; (w + l))</Action>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="inflate.c" line="389" lineEnd="389" colStart="0" colEnd="0" snippet="02A1327EE082B4641E9E686CF47E55E8#inflate.c:389:389"/>
              <Action type="BranchNotTaken">Branch not taken: (f &lt;= (a + 1))</Action>
            </Node>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="403" lineEnd="403" colStart="0" colEnd="0" contextId="16" snippet="72761513F3DE2BC4B62328E593E2C421#inflate.c:403:403"/>
              <Action type="Assign">q = malloc(...)</Action>
              <Reason>
                <Rule ruleID="B530C5D6-3C71-48C5-9512-72A7F4911822"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="inflate.c" line="403" lineEnd="403" colStart="14" colEnd="0" contextId="16" snippet="72761513F3DE2BC4B62328E593E2C421#inflate.c:403:403"/>
              <Action>q refers to dynamically allocated memory</Action>
              <Reason>
                <Internal text="q refers to dynamically allocated memory"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node detailsOnly="true" label="Branch not taken">
              <SourceLocation path="inflate.c" line="403" lineEnd="403" colStart="0" colEnd="0" snippet="72761513F3DE2BC4B62328E593E2C421#inflate.c:403:403"/>
              <Action type="BranchNotTaken">Branch not taken: (q != NULL)</Action>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="inflate.c" line="413" lineEnd="413" colStart="18" colEnd="0" contextId="16" snippet="8B10E28385E3FEF2327F13F52D8A7838#inflate.c:413:413"/>
              <Action type="EndScope">q no longer refers to dynamically allocated memory</Action>
              <Reason>
                <Internal text="q no longer refers to dynamically allocated memory"/>
              </Reason>
            </Node>
          </Entry>
          <Entry>
            <Node>
              <SourceLocation path="inflate.c" line="413" lineEnd="413" colStart="18" colEnd="0" contextId="16" snippet="8B10E28385E3FEF2327F13F52D8A7838#inflate.c:413:413"/>
              <Action type="EndScope">q end scope : Memory leaked</Action>
              <Reason>
                <Rule ruleID="B530C5D6-3C71-48C5-9512-72A7F4911822"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>EA7F0CD9EA27BF1D4C5056EC1A87BC24</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unzip"/>
        <FunctionDeclarationSourceLocation path="unzip.c" line="100" lineEnd="199" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unzip()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="unzip.c"/>
        <Def key="PrimaryLocation.line" value="178"/>
        <LocationDef path="unzip.c" line="178" lineEnd="178" colStart="2" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unzip.c" line="178" lineEnd="178" colStart="2" colEnd="0" contextId="2" snippet="A0AE0551004F48FEA2BE69A3C9A3EDEC#unzip.c:178:178"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>EBA3A66D55F0CEC90FF5FE252794D8B5</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_codes"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="492" lineEnd="595" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_codes()"/>
        <Def key="PrimaryCall.name" value="memcpy()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="568"/>
        <LocationDef path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="24"/>
          </Entry>
          <Entry>
            <NodeRef id="25"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="24"/>
          </Entry>
          <Entry>
            <NodeRef id="25"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="24"/>
          </Entry>
          <Entry>
            <NodeRef id="25"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="44"/>
          </Entry>
          <Entry>
            <NodeRef id="45"/>
          </Entry>
          <Entry>
            <NodeRef id="36"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="24"/>
          </Entry>
          <Entry>
            <NodeRef id="25"/>
          </Entry>
          <Entry>
            <NodeRef id="26"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <NodeRef id="28"/>
          </Entry>
          <Entry>
            <NodeRef id="29"/>
          </Entry>
          <Entry>
            <NodeRef id="30"/>
          </Entry>
          <Entry>
            <NodeRef id="31"/>
          </Entry>
          <Entry>
            <NodeRef id="32"/>
          </Entry>
          <Entry>
            <NodeRef id="27"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="568" lineEnd="568" colStart="40" colEnd="0" contextId="11" snippet="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>EBF651CF09B55C21EDF014F9A062928B</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="get_istat"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="999" lineEnd="1066" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="get_istat()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1053"/>
        <LocationDef path="gzip.c" line="1053" lineEnd="1053" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="61"/>
          </Entry>
          <Entry>
            <Node label="Buffer ifname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="233" lineEnd="233" colStart="0" colEnd="0" contextId="19" snippet="6B1F5119B5F077F6759D3766FE085E92#gzip.c:233:233"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="191"/>
          </Entry>
          <Entry>
            <NodeRef id="192"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1053" lineEnd="1053" colStart="0" colEnd="0" contextId="19" snippet="22E4E8FB53A467308BAE4FDF9025E460#gzip.c:1053:1053"/>
              <Action type="AssignGlobal">Assignment to ifname[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED, NUMBER, STRING_LENGTH</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 262144 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] ilen: 262143</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="64"/>
          </Entry>
          <Entry>
            <Node label="Buffer ifname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="233" lineEnd="233" colStart="0" colEnd="0" contextId="19" snippet="6B1F5119B5F077F6759D3766FE085E92#gzip.c:233:233"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="191"/>
          </Entry>
          <Entry>
            <NodeRef id="192"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1053" lineEnd="1053" colStart="0" colEnd="0" contextId="19" snippet="22E4E8FB53A467308BAE4FDF9025E460#gzip.c:1053:1053"/>
              <Action type="AssignGlobal">Assignment to ifname[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED, NUMBER, STRING_LENGTH</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 262144 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] ilen: 262143</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="58"/>
          </Entry>
          <Entry>
            <NodeRef id="65"/>
          </Entry>
          <Entry>
            <NodeRef id="66"/>
          </Entry>
          <Entry>
            <Node label="Buffer ifname Declared" isDefault="false">
              <SourceLocation path="gzip.c" line="233" lineEnd="233" colStart="0" colEnd="0" contextId="19" snippet="6B1F5119B5F077F6759D3766FE085E92#gzip.c:233:233"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="67"/>
          </Entry>
          <Entry>
            <NodeRef id="191"/>
          </Entry>
          <Entry>
            <NodeRef id="192"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1053" lineEnd="1053" colStart="0" colEnd="0" contextId="19" snippet="22E4E8FB53A467308BAE4FDF9025E460#gzip.c:1053:1053"/>
              <Action type="AssignGlobal">Assignment to ifname[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">ARGS, NULL_TERMINATED, NUMBER, STRING_LENGTH</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 1024 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 262144 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] ilen: 262143</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>EDD387608CACE0B89587A3113A40748F</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.768</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="782"/>
        <LocationDef path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="51"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="782" lineEnd="782" colStart="0" colEnd="0" contextId="15" snippet="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>EDD387608CACE0B89587A3113A407490</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.768</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="inflate_dynamic"/>
        <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="inflate_dynamic()"/>
        <Def key="PrimaryLocation.file" value="inflate.c"/>
        <Def key="PrimaryLocation.line" value="791"/>
        <LocationDef path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="42"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="34"/>
          </Entry>
          <Entry>
            <NodeRef id="35"/>
          </Entry>
          <Entry>
            <NodeRef id="43"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="51"/>
          </Entry>
          <Entry>
            <NodeRef id="52"/>
          </Entry>
          <Entry>
            <NodeRef id="53"/>
          </Entry>
          <Entry>
            <NodeRef id="54"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="83"/>
          </Entry>
          <Entry>
            <NodeRef id="84"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="55"/>
          </Entry>
          <Entry>
            <NodeRef id="56"/>
          </Entry>
          <Entry>
            <NodeRef id="57"/>
          </Entry>
          <Entry>
            <NodeRef id="85"/>
          </Entry>
          <Entry>
            <NodeRef id="78"/>
          </Entry>
          <Entry>
            <NodeRef id="79"/>
          </Entry>
          <Entry>
            <NodeRef id="80"/>
          </Entry>
          <Entry>
            <NodeRef id="81"/>
          </Entry>
          <Entry>
            <NodeRef id="82"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="inflate.c" line="791" lineEnd="791" colStart="0" colEnd="0" contextId="15" snippet="C26F43D1B8E9705992533189105F807A#inflate.c:791:791"/>
              <Action type="Assign">Assignment to ll[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">COMPARISON, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>EDD96175C10739C1FBD7B180D9ECC128</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>1.7360001</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="decode"/>
        <FunctionDeclarationSourceLocation path="unlzh.c" line="341" lineEnd="379" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="decode()"/>
        <Def key="PrimaryLocation.file" value="unlzh.c"/>
        <Def key="PrimaryLocation.line" value="373"/>
        <LocationDef path="unlzh.c" line="373" lineEnd="373" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="6"/>
          </Entry>
          <Entry>
            <NodeRef id="7"/>
          </Entry>
          <Entry>
            <NodeRef id="8"/>
          </Entry>
          <Entry>
            <NodeRef id="9"/>
          </Entry>
          <Entry>
            <NodeRef id="10"/>
          </Entry>
          <Entry>
            <NodeRef id="11"/>
          </Entry>
          <Entry>
            <NodeRef id="12"/>
          </Entry>
          <Entry>
            <NodeRef id="13"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="373" lineEnd="373" colStart="0" colEnd="0" contextId="5" snippet="CB766819C39ADCF00C939A3D4DC2D2E9#unlzh.c:373:373"/>
              <Action type="Assign">Assignment to buffer[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.20 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">LOOP_BOUND, NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BA40B07C-72BC-4732-B24C-9E9C7CFF1089</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Dangerous Function</Type>
    <Subtype>strcpy()</Subtype>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>EF4CD024D56A6BC4253C03285460051D</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="make_ofname"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="1072" lineEnd="1137" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="1076"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="1076" lineEnd="1076" colStart="5" colEnd="0" contextId="26" snippet="2A75EBA9DC2CE85C805B5DFE5F24D9EC#gzip.c:1076:1076"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>F3DCF1316691D0B4E1BAA5EDB8FCFD66</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="read_tree"/>
        <FunctionDeclarationSourceLocation path="unpack.c" line="94" lineEnd="140" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="read_tree()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="unpack.c"/>
        <Def key="PrimaryLocation.line" value="116"/>
        <LocationDef path="unpack.c" line="116" lineEnd="116" colStart="2" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="116" lineEnd="116" colStart="2" colEnd="0" contextId="17" snippet="F41D42CC331EB151F2DD3DC9EE4F9417#unpack.c:116:116"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>F3FEB549E252DE261A1032F6721D67AA</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unlzw"/>
        <FunctionDeclarationSourceLocation path="unlzw.c" line="193" lineEnd="377" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unlzw()"/>
        <Def key="PrimaryCall.name" value="memcpy()"/>
        <Def key="PrimaryLocation.file" value="unlzw.c"/>
        <Def key="PrimaryLocation.line" value="344"/>
        <LocationDef path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="14"/>
          </Entry>
          <Entry>
            <NodeRef id="15"/>
          </Entry>
          <Entry>
            <NodeRef id="16"/>
          </Entry>
          <Entry>
            <NodeRef id="17"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="14"/>
          </Entry>
          <Entry>
            <NodeRef id="15"/>
          </Entry>
          <Entry>
            <NodeRef id="16"/>
          </Entry>
          <Entry>
            <NodeRef id="17"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="14"/>
          </Entry>
          <Entry>
            <NodeRef id="15"/>
          </Entry>
          <Entry>
            <NodeRef id="16"/>
          </Entry>
          <Entry>
            <NodeRef id="17"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="94"/>
          </Entry>
          <Entry>
            <NodeRef id="95"/>
          </Entry>
          <Entry>
            <NodeRef id="96"/>
          </Entry>
          <Entry>
            <NodeRef id="97"/>
          </Entry>
          <Entry>
            <NodeRef id="98"/>
          </Entry>
          <Entry>
            <NodeRef id="99"/>
          </Entry>
          <Entry>
            <NodeRef id="100"/>
          </Entry>
          <Entry>
            <NodeRef id="101"/>
          </Entry>
          <Entry>
            <NodeRef id="102"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="170"/>
          </Entry>
          <Entry>
            <NodeRef id="171"/>
          </Entry>
          <Entry>
            <NodeRef id="151"/>
          </Entry>
          <Entry>
            <NodeRef id="97"/>
          </Entry>
          <Entry>
            <NodeRef id="98"/>
          </Entry>
          <Entry>
            <NodeRef id="99"/>
          </Entry>
          <Entry>
            <NodeRef id="100"/>
          </Entry>
          <Entry>
            <NodeRef id="101"/>
          </Entry>
          <Entry>
            <NodeRef id="102"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="344" lineEnd="344" colStart="38" colEnd="0" contextId="3" snippet="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>F3FEB549E252DE261A1032F6721D67AB</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="unlzw"/>
        <FunctionDeclarationSourceLocation path="unlzw.c" line="193" lineEnd="377" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="unlzw()"/>
        <Def key="PrimaryCall.name" value="memcpy()"/>
        <Def key="PrimaryLocation.file" value="unlzw.c"/>
        <Def key="PrimaryLocation.line" value="357"/>
        <LocationDef path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="14"/>
          </Entry>
          <Entry>
            <NodeRef id="15"/>
          </Entry>
          <Entry>
            <NodeRef id="16"/>
          </Entry>
          <Entry>
            <NodeRef id="17"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="14"/>
          </Entry>
          <Entry>
            <NodeRef id="15"/>
          </Entry>
          <Entry>
            <NodeRef id="16"/>
          </Entry>
          <Entry>
            <NodeRef id="17"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="5"/>
          </Entry>
          <Entry>
            <NodeRef id="14"/>
          </Entry>
          <Entry>
            <NodeRef id="15"/>
          </Entry>
          <Entry>
            <NodeRef id="16"/>
          </Entry>
          <Entry>
            <NodeRef id="17"/>
          </Entry>
          <Entry>
            <NodeRef id="20"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="94"/>
          </Entry>
          <Entry>
            <NodeRef id="95"/>
          </Entry>
          <Entry>
            <NodeRef id="96"/>
          </Entry>
          <Entry>
            <NodeRef id="97"/>
          </Entry>
          <Entry>
            <NodeRef id="98"/>
          </Entry>
          <Entry>
            <NodeRef id="99"/>
          </Entry>
          <Entry>
            <NodeRef id="100"/>
          </Entry>
          <Entry>
            <NodeRef id="101"/>
          </Entry>
          <Entry>
            <NodeRef id="102"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="0"/>
          </Entry>
          <Entry>
            <NodeRef id="1"/>
          </Entry>
          <Entry>
            <NodeRef id="2"/>
          </Entry>
          <Entry>
            <NodeRef id="3"/>
          </Entry>
          <Entry>
            <NodeRef id="4"/>
          </Entry>
          <Entry>
            <NodeRef id="170"/>
          </Entry>
          <Entry>
            <NodeRef id="171"/>
          </Entry>
          <Entry>
            <NodeRef id="151"/>
          </Entry>
          <Entry>
            <NodeRef id="97"/>
          </Entry>
          <Entry>
            <NodeRef id="98"/>
          </Entry>
          <Entry>
            <NodeRef id="99"/>
          </Entry>
          <Entry>
            <NodeRef id="100"/>
          </Entry>
          <Entry>
            <NodeRef id="101"/>
          </Entry>
          <Entry>
            <NodeRef id="102"/>
          </Entry>
          <Entry>
            <NodeRef id="103"/>
          </Entry>
          <Entry>
            <NodeRef id="104"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="37" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
              <Action type="InCall">memcpy(2)</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Call">Direct : memcpy</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BA40B07C-72BC-4732-B24C-9E9C7CFF1089</ClassID>
    <Kingdom>API Abuse</Kingdom>
    <Type>Dangerous Function</Type>
    <Subtype>strcpy()</Subtype>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>2.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>F9E6A4C158778FE91987E4163CB314FF</InstanceID>
    <InstanceSeverity>2.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="get_suffix"/>
        <FunctionDeclarationSourceLocation path="gzip.c" line="949" lineEnd="987" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="PrimaryCall.name" value="strcpy()"/>
        <Def key="PrimaryLocation.file" value="gzip.c"/>
        <Def key="PrimaryLocation.line" value="974"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="gzip.c" line="974" lineEnd="974" colStart="9" colEnd="0" contextId="34" snippet="73C2EE4425709A2505352A239DE91BEF#gzip.c:974:974"/>
              <Action type="InCall">strcpy()</Action>
              <Reason>
                <Rule ruleID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>86C7916D-A73B-4EBE-A235-9E570095EE66</ClassID>
    <Kingdom>Input Validation and Representation</Kingdom>
    <Type>Buffer Overflow</Type>
    <AnalyzerName>dataflow</AnalyzerName>
    <DefaultSeverity>4.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>FD38738B7183ED0BC2E87F7006F88402</InstanceID>
    <InstanceSeverity>4.0</InstanceSeverity>
    <Confidence>3.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="build_tree"/>
        <FunctionDeclarationSourceLocation path="unpack.c" line="145" lineEnd="175" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="build_tree()"/>
        <Def key="PrimaryLocation.file" value="unpack.c"/>
        <Def key="PrimaryLocation.line" value="160"/>
        <LocationDef path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="33"/>
          </Entry>
          <Entry>
            <NodeRef id="76"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="23"/>
          </Entry>
          <Entry>
            <NodeRef id="37"/>
          </Entry>
          <Entry>
            <NodeRef id="38"/>
          </Entry>
          <Entry>
            <NodeRef id="39"/>
          </Entry>
          <Entry>
            <NodeRef id="41"/>
          </Entry>
          <Entry>
            <NodeRef id="72"/>
          </Entry>
          <Entry>
            <NodeRef id="73"/>
          </Entry>
          <Entry>
            <Node label="Buffer lit_base Declared" isDefault="false">
              <SourceLocation path="unpack.c" line="40" lineEnd="40" colStart="0" colEnd="0" contextId="22" snippet="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40"/>
            </Node>
          </Entry>
          <Entry>
            <NodeRef id="74"/>
          </Entry>
          <Entry>
            <NodeRef id="75"/>
          </Entry>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unpack.c" line="160" lineEnd="160" colStart="0" colEnd="0" contextId="22" snippet="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160"/>
              <Action type="AssignGlobal">Assignment to lit_base[]</Action>
              <Reason>
                <Rule ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66"/>
              </Reason>
              <Knowledge>
                <Fact primary="false" type="Confidence">Confidence: 0.50 (Buffer Analysis)</Fact>
                <Fact primary="false" type="TaintFlags">NOT_NULL_TERMINATED, STREAM</Fact>
                <Fact primary="true" type="Buffer">Buffer Size: 104 bytes</Fact>
                <Fact primary="true" type="Buffer">Write Length: 67108864 bytes</Fact>
                <Fact primary="true" type="Buffer">[var 0] len: 16777215</Fact>
              </Knowledge>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
<Vulnerability>
  <ClassInfo>
    <ClassID>BF90AB50-4D35-4249-A679-57C93827CC46</ClassID>
    <Kingdom>Encapsulation</Kingdom>
    <Type>System Information Leak</Type>
    <AnalyzerName>semantic</AnalyzerName>
    <DefaultSeverity>3.0</DefaultSeverity>
  </ClassInfo>
  <InstanceInfo>
    <InstanceID>FF9E4F4B50E5A426FE4F39D92998A199</InstanceID>
    <InstanceSeverity>3.0</InstanceSeverity>
    <Confidence>5.0</Confidence>
  </InstanceInfo>
  <AnalysisInfo>
    <Unified>
      <Context>
        <Function name="make_table"/>
        <FunctionDeclarationSourceLocation path="unlzh.c" line="145" lineEnd="199" colStart="0" colEnd="0"/>
      </Context>
      <ReplacementDefinitions>
        <Def key="EnclosingFunction.name" value="make_table()"/>
        <Def key="PrimaryCall.name" value="error()"/>
        <Def key="PrimaryLocation.file" value="unlzh.c"/>
        <Def key="PrimaryLocation.line" value="157"/>
        <LocationDef path="unlzh.c" line="157" lineEnd="157" colStart="2" colEnd="0" key="PrimaryLocation"/>
      </ReplacementDefinitions>
      <Trace>
        <Primary>
          <Entry>
            <Node isDefault="true">
              <SourceLocation path="unlzh.c" line="157" lineEnd="157" colStart="2" colEnd="0" contextId="36" snippet="2C4EF7A3CDD788FFD8A2977784B163D0#unlzh.c:157:157"/>
              <Action type="InCall">error()</Action>
              <Reason>
                <Rule ruleID="BF90AB50-4D35-4249-A679-57C93827CC46"/>
              </Reason>
            </Node>
          </Entry>
        </Primary>
      </Trace>
    </Unified>
  </AnalysisInfo>
</Vulnerability>
</Vulnerabilities>
<ContextPool>
  <Context id="1">
    <Function name="main"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="426" lineEnd="603" colStart="0" colEnd="0"/>
  </Context>
  <Context id="2">
    <Function name="unzip"/>
    <FunctionDeclarationSourceLocation path="unzip.c" line="100" lineEnd="199" colStart="0" colEnd="0"/>
  </Context>
  <Context id="3">
    <Function name="unlzw"/>
    <FunctionDeclarationSourceLocation path="unlzw.c" line="193" lineEnd="377" colStart="0" colEnd="0"/>
  </Context>
  <Context id="4">
    <Function name="decode_c"/>
    <FunctionDeclarationSourceLocation path="unlzh.c" line="273" lineEnd="298" colStart="0" colEnd="0"/>
  </Context>
  <Context id="5">
    <Function name="decode"/>
    <FunctionDeclarationSourceLocation path="unlzh.c" line="341" lineEnd="379" colStart="0" colEnd="0"/>
  </Context>
  <Context id="6">
    <Function name="longest_match"/>
    <FunctionDeclarationSourceLocation path="deflate.c" line="358" lineEnd="480" colStart="0" colEnd="0"/>
  </Context>
  <Context id="7">
    <Function name="deflate_fast"/>
    <FunctionDeclarationSourceLocation path="deflate.c" line="580" lineEnd="654" colStart="0" colEnd="0"/>
  </Context>
  <Context id="8">
    <Function name="ct_tally"/>
    <FunctionDeclarationSourceLocation path="trees.c" line="960" lineEnd="1006" colStart="0" colEnd="0"/>
  </Context>
  <Context id="9">
    <Function name="treat_file"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="705" lineEnd="852" colStart="0" colEnd="0"/>
  </Context>
  <Context id="10">
    <Function name="copy"/>
    <FunctionDeclarationSourceLocation path="util.c" line="40" lineEnd="53" colStart="0" colEnd="0"/>
  </Context>
  <Context id="11">
    <Function name="inflate_codes"/>
    <FunctionDeclarationSourceLocation path="inflate.c" line="492" lineEnd="595" colStart="0" colEnd="0"/>
  </Context>
  <Context id="12">
    <Function name="fill_inbuf"/>
    <FunctionDeclarationSourceLocation path="util.c" line="94" lineEnd="114" colStart="0" colEnd="0"/>
  </Context>
  <Context id="13">
    <Function name="get_method"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="1152" lineEnd="1312" colStart="0" colEnd="0"/>
  </Context>
  <Context id="14">
    <Function name="create_outfile"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="863" lineEnd="917" colStart="0" colEnd="0"/>
  </Context>
  <Context id="15">
    <Function name="inflate_dynamic"/>
    <FunctionDeclarationSourceLocation path="inflate.c" line="703" lineEnd="863" colStart="0" colEnd="0"/>
  </Context>
  <Context id="16">
    <Function name="huft_build"/>
    <FunctionDeclarationSourceLocation path="inflate.c" line="278" lineEnd="465" colStart="0" colEnd="0"/>
  </Context>
  <Context id="17">
    <Function name="read_tree"/>
    <FunctionDeclarationSourceLocation path="unpack.c" line="94" lineEnd="140" colStart="0" colEnd="0"/>
  </Context>
  <Context id="18">
    <Function name="unpack"/>
    <FunctionDeclarationSourceLocation path="unpack.c" line="186" lineEnd="239" colStart="0" colEnd="0"/>
  </Context>
  <Context id="19">
    <Function name="get_istat"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="999" lineEnd="1066" colStart="0" colEnd="0"/>
  </Context>
  <Context id="20">
    <Function name="shorten_name"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="1456" lineEnd="1505" colStart="0" colEnd="0"/>
  </Context>
  <Context id="21">
    <Function name="add_envopt"/>
    <FunctionDeclarationSourceLocation path="util.c" line="282" lineEnd="331" colStart="0" colEnd="0"/>
  </Context>
  <Context id="22">
    <Function name="build_tree"/>
    <FunctionDeclarationSourceLocation path="unpack.c" line="145" lineEnd="175" colStart="0" colEnd="0"/>
  </Context>
  <Context id="23">
    <Function name="lm_init"/>
    <FunctionDeclarationSourceLocation path="deflate.c" line="288" lineEnd="342" colStart="0" colEnd="0"/>
  </Context>
  <Context id="24">
    <Function name="treat_stdin"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="608" lineEnd="699" colStart="0" colEnd="0"/>
  </Context>
  <Context id="25">
    <Function name="basename"/>
    <FunctionDeclarationSourceLocation path="util.c" line="182" lineEnd="198" colStart="0" colEnd="0"/>
  </Context>
  <Context id="26">
    <Function name="make_ofname"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="1072" lineEnd="1137" colStart="0" colEnd="0"/>
  </Context>
  <Context id="27">
    <Function name="flush_block"/>
    <FunctionDeclarationSourceLocation path="trees.c" line="856" lineEnd="952" colStart="0" colEnd="0"/>
  </Context>
  <Context id="28">
    <Function name="check_ofname"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="1521" lineEnd="1584" colStart="0" colEnd="0"/>
  </Context>
  <Context id="29">
    <Function name="name_too_long"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="1431" lineEnd="1444" colStart="0" colEnd="0"/>
  </Context>
  <Context id="30">
    <Function name="abort_gzip"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="1737" lineEnd="1744" colStart="0" colEnd="0"/>
  </Context>
  <Context id="31">
    <Function name="fillbuf"/>
    <FunctionDeclarationSourceLocation path="unlzh.c" line="110" lineEnd="120" colStart="0" colEnd="0"/>
  </Context>
  <Context id="32">
    <Function name="getbits"/>
    <FunctionDeclarationSourceLocation path="unlzh.c" line="123" lineEnd="129" colStart="0" colEnd="0"/>
  </Context>
  <Context id="33">
    <Function name="read_c_len"/>
    <FunctionDeclarationSourceLocation path="unlzh.c" line="238" lineEnd="271" colStart="0" colEnd="0"/>
  </Context>
  <Context id="34">
    <Function name="get_suffix"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="949" lineEnd="987" colStart="0" colEnd="0"/>
  </Context>
  <Context id="35">
    <Function name="copy_block"/>
    <FunctionDeclarationSourceLocation path="bits.c" line="184" lineEnd="205" colStart="0" colEnd="0"/>
  </Context>
  <Context id="36">
    <Function name="make_table"/>
    <FunctionDeclarationSourceLocation path="unlzh.c" line="145" lineEnd="199" colStart="0" colEnd="0"/>
  </Context>
  <Context id="37">
    <Function name="zip"/>
    <FunctionDeclarationSourceLocation path="zip.c" line="34" lineEnd="95" colStart="0" colEnd="0"/>
  </Context>
  <Context id="38">
    <Function name="inflate_stored"/>
    <FunctionDeclarationSourceLocation path="inflate.c" line="599" lineEnd="648" colStart="0" colEnd="0"/>
  </Context>
  <Context id="39">
    <Function name="file_read"/>
    <FunctionDeclarationSourceLocation path="zip.c" line="105" lineEnd="117" colStart="0" colEnd="0"/>
  </Context>
  <Context id="40">
    <Function name="fill_window"/>
    <FunctionDeclarationSourceLocation path="deflate.c" line="516" lineEnd="564" colStart="0" colEnd="0"/>
  </Context>
  <Context id="41">
    <Function name="xmalloc"/>
    <FunctionDeclarationSourceLocation path="util.c" line="398" lineEnd="404" colStart="0" colEnd="0"/>
  </Context>
  <Context id="42">
    <Function name="read_pt_len"/>
    <FunctionDeclarationSourceLocation path="unlzh.c" line="208" lineEnd="236" colStart="0" colEnd="0"/>
  </Context>
  <Context id="43">
    <Function name="copy_stat"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="1615" lineEnd="1641" colStart="0" colEnd="0"/>
  </Context>
  <Context id="44">
    <Function name="scan_tree"/>
    <FunctionDeclarationSourceLocation path="trees.c" line="698" lineEnd="734" colStart="0" colEnd="0"/>
  </Context>
  <Context id="45">
    <Function name="deflate"/>
    <FunctionDeclarationSourceLocation path="deflate.c" line="661" lineEnd="763" colStart="0" colEnd="0"/>
  </Context>
  <Context id="46">
    <Function name="do_list"/>
    <FunctionDeclarationSourceLocation path="gzip.c" line="1321" lineEnd="1401" colStart="0" colEnd="0"/>
  </Context>
</ContextPool>
<UnifiedNodePool>
  <Node id="0">
    <SourceLocation path="unlzw.c" line="261" lineEnd="261" colStart="0" colEnd="0" contextId="3" snippet="FFDA64ED16C447A04767F62DEC40274A#unlzw.c:261:261"/>
    <Action type="OutCall">read(1)</Action>
    <Reason>
      <Rule ruleID="39DDF4FD-5A7A-4BFF-AEC4-05A8232615B1"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : read</Fact>
    </Knowledge>
  </Node>
  <Node id="1">
    <SourceLocation path="unlzw.c" line="255" lineEnd="255" colStart="0" colEnd="0" contextId="3" snippet="5BCB9A3BC0A1E8E72FE49AE058A0BD7A#unlzw.c:255:255"/>
    <Action type="AssignGlobal">Assignment to inbuf[]</Action>
  </Node>
  <Node id="2">
    <SourceLocation path="unlzw.c" line="283" lineEnd="283" colStart="0" colEnd="0" contextId="3" snippet="764D7C5D867511BC75472CD95DF718FA#unlzw.c:283:283"/>
    <SecondaryLocation path="unlzw.c" line="158" lineEnd="158" colStart="0" colEnd="0" snippet="FAB1732A6B6AC4E5CFCC880DEFB1C5AC#unlzw.c:158:158"/>
    <Action type="Alias">p Aliases inbuf[]</Action>
  </Node>
  <Node id="3">
    <SourceLocation path="unlzw.c" line="283" lineEnd="283" colStart="0" colEnd="0" contextId="3" snippet="764D7C5D867511BC75472CD95DF718FA#unlzw.c:283:283"/>
    <SecondaryLocation path="unlzw.c" line="283" lineEnd="283" colStart="0" colEnd="0" snippet="764D7C5D867511BC75472CD95DF718FA#unlzw.c:283:283"/>
    <Action type="Assign">Assignment to code</Action>
  </Node>
  <Node id="4">
    <SourceLocation path="unlzw.c" line="288" lineEnd="288" colStart="0" colEnd="0" contextId="3" snippet="F3D02752260FF3D27E323EAE9E2F31CC#unlzw.c:288:288"/>
    <Action type="Assign">Assignment to oldcode</Action>
  </Node>
  <Node id="5">
    <SourceLocation path="unlzw.c" line="364" lineEnd="364" colStart="0" colEnd="0" contextId="3" snippet="9E1C54009A87FA70DDE5A39A2045B4CE#unlzw.c:364:364"/>
    <SecondaryLocation path="unlzw.c" line="364" lineEnd="364" colStart="0" colEnd="0" snippet="9E1C54009A87FA70DDE5A39A2045B4CE#unlzw.c:364:364"/>
    <Action type="AssignGlobal">Assignment to prev[]</Action>
  </Node>
  <Node id="6">
    <SourceLocation path="unlzh.c" line="292" lineEnd="292" colStart="15" colEnd="0" contextId="4" snippet="39E2D7097A73C1446EB8629292F10903#unlzh.c:292:292"/>
    <Action type="ReadGlobal">Read prev[]</Action>
  </Node>
  <Node id="7">
    <SourceLocation path="unlzh.c" line="292" lineEnd="292" colStart="0" colEnd="0" contextId="4" snippet="39E2D7097A73C1446EB8629292F10903#unlzh.c:292:292"/>
    <Action type="Assign">Assignment to j</Action>
  </Node>
  <Node id="8">
    <SourceLocation path="unlzh.c" line="297" lineEnd="297" colStart="0" colEnd="0" contextId="4" snippet="E4E0DD93CFFAC3B9FE76011BB5F679B3#unlzh.c:297:297"/>
    <Action type="Return">Return j</Action>
  </Node>
  <Node id="9">
    <SourceLocation path="unlzh.c" line="361" lineEnd="361" colStart="6" colEnd="0" contextId="5" snippet="F3DC05CA701EAF05D86E5357DDEEBEAF#unlzh.c:361:361"/>
    <Action type="OutCall">decode_c(return)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : decode_c</Fact>
    </Knowledge>
  </Node>
  <Node id="10">
    <SourceLocation path="unlzh.c" line="361" lineEnd="361" colStart="0" colEnd="0" contextId="5" snippet="F3DC05CA701EAF05D86E5357DDEEBEAF#unlzh.c:361:361"/>
    <Action type="Assign">Assignment to c</Action>
  </Node>
  <Node id="11">
    <SourceLocation path="unlzh.c" line="370" lineEnd="370" colStart="0" colEnd="0" contextId="5" snippet="7BEC808D97888314E892B15D44447964#unlzh.c:370:370"/>
    <Action type="AssignGlobal">Assignment to j</Action>
  </Node>
  <Node id="12">
    <SourceLocation path="unlzh.c" line="372" lineEnd="372" colStart="15" colEnd="0" contextId="5" snippet="86C7BBD52BB70BA18B4CCED065F3AB6B#unlzh.c:372:372"/>
    <Action type="AssignGlobal">Assignment to j</Action>
  </Node>
  <Node id="13">
    <SourceLocation path="unlzh.c" line="372" lineEnd="372" colStart="0" colEnd="0" contextId="5" snippet="86C7BBD52BB70BA18B4CCED065F3AB6B#unlzh.c:372:372"/>
    <Action type="Compare">r &gt;= j</Action>
    <Knowledge>
      <Fact primary="false" type="Confidence">Confidence: 0.92 (Tainted loop increment)</Fact>
    </Knowledge>
  </Node>
  <Node id="14">
    <SourceLocation path="deflate.c" line="476" lineEnd="476" colStart="27" colEnd="0" contextId="6" snippet="3289865A3A876EE7569619A7DB4594FC#deflate.c:476:476"/>
    <Action type="ReadGlobal">Read prev[]</Action>
  </Node>
  <Node id="15">
    <SourceLocation path="deflate.c" line="476" lineEnd="476" colStart="0" colEnd="0" contextId="6" snippet="3289865A3A876EE7569619A7DB4594FC#deflate.c:476:476"/>
    <Action type="Assign">Assignment to cur_match</Action>
  </Node>
  <Node id="16">
    <SourceLocation path="deflate.c" line="466" lineEnd="466" colStart="0" colEnd="0" contextId="6" snippet="A6445E61A2D5FB461FE24B06C53B8165#deflate.c:466:466"/>
    <Action type="AssignGlobal">Assignment to match_start</Action>
  </Node>
  <Node id="17">
    <SourceLocation path="deflate.c" line="608" lineEnd="608" colStart="39" colEnd="0" contextId="7" snippet="134FACB005E8C0B26C52D2114A3641A1#deflate.c:608:608"/>
    <Action type="ReadGlobal">Read match_start</Action>
  </Node>
  <Node id="18">
    <SourceLocation path="trees.c" line="968" lineEnd="968" colStart="9" colEnd="0" contextId="8" snippet="7EF28B7F5AB5CD13BCCBF79772DC7B74#trees.c:968:968"/>
    <Action type="Assign">Assignment to dist</Action>
  </Node>
  <Node id="19">
    <SourceLocation path="trees.c" line="976" lineEnd="976" colStart="0" colEnd="0" contextId="8" snippet="B479CC9D0ADC8C846E0030A4180A98C1#trees.c:976:976"/>
    <Action type="AssignGlobal">Assignment to d_buf[]</Action>
  </Node>
  <Node id="20">
    <SourceLocation path="deflate.c" line="608" lineEnd="608" colStart="0" colEnd="0" contextId="7" snippet="134FACB005E8C0B26C52D2114A3641A1#deflate.c:608:608"/>
    <Action type="InOutCall">ct_tally(0 : {d_buf}[])</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="18"/>
          </Entry>
          <Entry>
            <NodeRef id="19"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : ct_tally</Fact>
    </Knowledge>
  </Node>
  <Node id="21">
    <SourceLocation path="unlzh.c" line="287" lineEnd="287" colStart="17" colEnd="0" contextId="4" snippet="3CCDE778A8454C8F6D5BAFCC95817CCA#unlzh.c:287:287"/>
    <Action type="ReadGlobal">Read d_buf[]</Action>
  </Node>
  <Node id="22">
    <SourceLocation path="unlzh.c" line="287" lineEnd="287" colStart="0" colEnd="0" contextId="4" snippet="3CCDE778A8454C8F6D5BAFCC95817CCA#unlzh.c:287:287"/>
    <Action type="Assign">Assignment to j</Action>
  </Node>
  <Node id="23">
    <SourceLocation path="util.c" line="46" lineEnd="46" colStart="27" colEnd="0" contextId="10" snippet="67F52C7786819138A6C2039ECFF9646F#util.c:46:46"/>
    <Action type="OutCall">read(1)</Action>
    <Reason>
      <Rule ruleID="39DDF4FD-5A7A-4BFF-AEC4-05A8232615B1"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : read</Fact>
    </Knowledge>
  </Node>
  <Node id="24">
    <SourceLocation path="inflate.c" line="542" lineEnd="542" colStart="39" colEnd="0" contextId="11" snippet="801D2C79036E67DD9319765CE21C62C6#inflate.c:542:542"/>
    <Action type="ReadGlobal">Read inbuf[]</Action>
  </Node>
  <Node id="25">
    <SourceLocation path="inflate.c" line="542" lineEnd="542" colStart="0" colEnd="0" contextId="11" snippet="801D2C79036E67DD9319765CE21C62C6#inflate.c:542:542"/>
    <SecondaryLocation path="inflate.c" line="222" lineEnd="222" colStart="0" colEnd="0" snippet="67552D0DFA435800DF0E3E425B8E7904#inflate.c:222:222"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="26">
    <SourceLocation path="inflate.c" line="543" lineEnd="543" colStart="0" colEnd="0" contextId="11" snippet="87BB470F33E4E400E3DCD28B4991A60E#inflate.c:543:543"/>
    <Action type="Assign">Assignment to n</Action>
  </Node>
  <Node id="27">
    <SourceLocation path="inflate.c" line="564" lineEnd="564" colStart="0" colEnd="0" contextId="11" snippet="12FF976BECBA96C2B7D43A023C36BF2B#inflate.c:564:564"/>
    <Action type="Assign">Assignment to e</Action>
  </Node>
  <Node id="28">
    <SourceLocation path="inflate.c" line="569" lineEnd="569" colStart="0" colEnd="0" contextId="11" snippet="EABA43F74A782F6EDAF96B84518C006E#inflate.c:569:569"/>
    <Action type="Assign">Assignment to w</Action>
  </Node>
  <Node id="29">
    <SourceLocation path="inflate.c" line="580" lineEnd="580" colStart="0" colEnd="0" contextId="11" snippet="6FD1B3B2BB7CCFFCB86E20D08FF32F20#inflate.c:580:580"/>
    <SecondaryLocation path="inflate.c" line="152" lineEnd="152" colStart="0" colEnd="0" snippet="F3499FB2EBC0C6EAEC7C9767D4486B00#inflate.c:152:152"/>
    <Action type="AssignGlobal">Assignment to outcnt</Action>
  </Node>
  <Node id="30">
    <SourceLocation path="inflate.c" line="508" lineEnd="508" colStart="12" colEnd="0" contextId="11" snippet="FAC95991E0E26232ABD25E5C1F912498#inflate.c:508:508"/>
    <SecondaryLocation path="inflate.c" line="152" lineEnd="152" colStart="0" colEnd="0" snippet="F3499FB2EBC0C6EAEC7C9767D4486B00#inflate.c:152:152"/>
    <Action type="ReadGlobal">Read outcnt</Action>
  </Node>
  <Node id="31">
    <SourceLocation path="inflate.c" line="508" lineEnd="508" colStart="0" colEnd="0" contextId="11" snippet="FAC95991E0E26232ABD25E5C1F912498#inflate.c:508:508"/>
    <Action type="Assign">Assignment to w</Action>
  </Node>
  <Node id="32">
    <SourceLocation path="inflate.c" line="564" lineEnd="564" colStart="0" colEnd="0" contextId="11" snippet="12FF976BECBA96C2B7D43A023C36BF2B#inflate.c:564:564"/>
    <Action type="Assign">Assignment to e</Action>
  </Node>
  <Node id="33">
    <SourceLocation path="util.c" line="113" lineEnd="113" colStart="0" colEnd="0" contextId="12" snippet="74C7D7EF55F13D54210C0CA28CC6E8D8#util.c:113:113"/>
    <Action type="Return">Return inbuf[0]</Action>
  </Node>
  <Node id="34">
    <SourceLocation path="inflate.c" line="515" lineEnd="515" colStart="56" colEnd="0" contextId="11" snippet="A59EFF8664AD3E3424DF4B224B31F67C#inflate.c:515:515"/>
    <SecondaryLocation path="gzip.h" line="202" lineEnd="202" colStart="0" colEnd="0" snippet="58EF9C6B58B8B3F3D1EE1AA7000F4EE8#gzip.h:202:202"/>
    <Action type="OutCall">fill_inbuf(return)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : fill_inbuf</Fact>
    </Knowledge>
  </Node>
  <Node id="35">
    <SourceLocation path="inflate.c" line="515" lineEnd="515" colStart="0" colEnd="0" contextId="11" snippet="A59EFF8664AD3E3424DF4B224B31F67C#inflate.c:515:515"/>
    <SecondaryLocation path="inflate.c" line="222" lineEnd="222" colStart="0" colEnd="0" snippet="67552D0DFA435800DF0E3E425B8E7904#inflate.c:222:222"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="36">
    <SourceLocation path="inflate.c" line="524" lineEnd="524" colStart="0" colEnd="0" contextId="11" snippet="5856C40F97BDC03DB9706913A19A38A7#inflate.c:524:524"/>
    <SecondaryLocation path="inflate.c" line="223" lineEnd="223" colStart="0" colEnd="0" snippet="F1E4B30627F4B41DB3A01704F454F203#inflate.c:223:223"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="37">
    <SourceLocation path="unzip.c" line="138" lineEnd="138" colStart="39" colEnd="0" contextId="2" snippet="8FCDFFB3593F1F3CAC51B583B0132C73#unzip.c:138:138"/>
    <Action type="ReadGlobal">Read inbuf[]</Action>
  </Node>
  <Node id="38">
    <SourceLocation path="unzip.c" line="138" lineEnd="138" colStart="0" colEnd="0" contextId="2" snippet="8FCDFFB3593F1F3CAC51B583B0132C73#unzip.c:138:138"/>
    <SecondaryLocation path="gzip.h" line="202" lineEnd="202" colStart="0" colEnd="0" snippet="58EF9C6B58B8B3F3D1EE1AA7000F4EE8#gzip.h:202:202"/>
    <Action type="Assign">Assignment to c</Action>
  </Node>
  <Node id="39">
    <SourceLocation path="unzip.c" line="142" lineEnd="142" colStart="0" colEnd="0" contextId="2" snippet="C02F9CAE26DA80F6F1AC622F549B3301#unzip.c:142:142"/>
    <SecondaryLocation path="gzip.h" line="212" lineEnd="212" colStart="0" colEnd="0" snippet="B690ECC2F9FB89F67C92691F2012D986#gzip.h:212:212"/>
    <Action type="AssignGlobal">Assignment to window[]</Action>
  </Node>
  <Node id="40">
    <SourceLocation path="trees.c" line="962" lineEnd="962" colStart="0" colEnd="0" contextId="8" snippet="3080959CCCA9DF1666A66A38E24F0507#trees.c:962:962"/>
    <SecondaryLocation path="trees.c" line="251" lineEnd="251" colStart="0" colEnd="0" snippet="E28BE80A061554B03FF295E5469F528D#trees.c:251:251"/>
    <Action type="AssignGlobal">Assignment to inbuf[]</Action>
  </Node>
  <Node id="41">
    <SourceLocation path="deflate.c" line="639" lineEnd="639" colStart="34" colEnd="0" contextId="7" snippet="3FD43B8A8CD84E28EA983D1D11C86F5D#deflate.c:639:639"/>
    <Action type="InOutCall">ct_tally(1 : {inbuf}[])</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="40"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : ct_tally</Fact>
    </Knowledge>
  </Node>
  <Node id="42">
    <SourceLocation path="inflate.c" line="515" lineEnd="515" colStart="39" colEnd="0" contextId="11" snippet="A59EFF8664AD3E3424DF4B224B31F67C#inflate.c:515:515"/>
    <Action type="ReadGlobal">Read inbuf[]</Action>
  </Node>
  <Node id="43">
    <SourceLocation path="inflate.c" line="590" lineEnd="590" colStart="0" colEnd="0" contextId="11" snippet="12C187018DA52E97D4C7B3C76A78F956#inflate.c:590:590"/>
    <Action type="AssignGlobal">Assignment to bb</Action>
  </Node>
  <Node id="44">
    <SourceLocation path="inflate.c" line="506" lineEnd="506" colStart="7" colEnd="0" contextId="11" snippet="944C337FFD6F13D9195DE236FBEBF0D7#inflate.c:506:506"/>
    <Action type="ReadGlobal">Read bb</Action>
  </Node>
  <Node id="45">
    <SourceLocation path="inflate.c" line="506" lineEnd="506" colStart="0" colEnd="0" contextId="11" snippet="944C337FFD6F13D9195DE236FBEBF0D7#inflate.c:506:506"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="46">
    <SourceLocation path="inflate.c" line="753" lineEnd="753" colStart="56" colEnd="0" contextId="15" snippet="33575AAAEB8E8B2B3BA12D0F501D015A#inflate.c:753:753"/>
    <SecondaryLocation path="gzip.h" line="202" lineEnd="202" colStart="0" colEnd="0" snippet="58EF9C6B58B8B3F3D1EE1AA7000F4EE8#gzip.h:202:202"/>
    <Action type="OutCall">fill_inbuf(return)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : fill_inbuf</Fact>
    </Knowledge>
  </Node>
  <Node id="47">
    <SourceLocation path="inflate.c" line="753" lineEnd="753" colStart="0" colEnd="0" contextId="15" snippet="33575AAAEB8E8B2B3BA12D0F501D015A#inflate.c:753:753"/>
    <SecondaryLocation path="inflate.c" line="222" lineEnd="222" colStart="0" colEnd="0" snippet="67552D0DFA435800DF0E3E425B8E7904#inflate.c:222:222"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="48">
    <SourceLocation path="inflate.c" line="754" lineEnd="754" colStart="0" colEnd="0" contextId="15" snippet="2389E37C497D638BD9A58280FE1C4090#inflate.c:754:754"/>
    <Action type="Assign">Assignment to ll[]</Action>
  </Node>
  <Node id="49">
    <SourceLocation path="inflate.c" line="763" lineEnd="763" colStart="23" colEnd="0" contextId="15" snippet="6B79C04DC950CF6CFE57E55463EA1CDC#inflate.c:763:763"/>
    <Action type="InCall">huft_build(0)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : huft_build</Fact>
    </Knowledge>
  </Node>
  <Node id="50">
    <SourceLocation path="inflate.c" line="308" lineEnd="308" colStart="0" colEnd="0" contextId="16" snippet="A385EBD1DC62E918FBE6428102243D40#inflate.c:308:308"/>
    <Action type="Assign">Assignment to p</Action>
  </Node>
  <Node id="51">
    <SourceLocation path="unpack.c" line="136" lineEnd="136" colStart="39" colEnd="0" contextId="17" snippet="D712FA26B0B4A75C535C509E551A683B#unpack.c:136:136"/>
    <Action type="ReadGlobal">Read inbuf[]</Action>
  </Node>
  <Node id="52">
    <SourceLocation path="unpack.c" line="136" lineEnd="136" colStart="0" colEnd="0" contextId="17" snippet="D712FA26B0B4A75C535C509E551A683B#unpack.c:136:136"/>
    <SecondaryLocation path="gzip.h" line="202" lineEnd="202" colStart="0" colEnd="0" snippet="58EF9C6B58B8B3F3D1EE1AA7000F4EE8#gzip.h:202:202"/>
    <Action type="AssignGlobal">Assignment to literal[]</Action>
  </Node>
  <Node id="53">
    <SourceLocation path="unpack.c" line="227" lineEnd="227" colStart="12" colEnd="0" contextId="18" snippet="B2CB3F14CE942079B0CFD3603F52071C#unpack.c:227:227"/>
    <Action type="ReadGlobal">Read literal[]</Action>
  </Node>
  <Node id="54">
    <SourceLocation path="unpack.c" line="227" lineEnd="227" colStart="0" colEnd="0" contextId="18" snippet="B2CB3F14CE942079B0CFD3603F52071C#unpack.c:227:227"/>
    <SecondaryLocation path="gzip.h" line="212" lineEnd="212" colStart="0" colEnd="0" snippet="B690ECC2F9FB89F67C92691F2012D986#gzip.h:212:212"/>
    <Action type="AssignGlobal">Assignment to window[]</Action>
  </Node>
  <Node id="55">
    <SourceLocation path="inflate.c" line="739" lineEnd="739" colStart="39" colEnd="0" contextId="15" snippet="EB7B6FECCEB0ED667DD87C5E48AEA93E#inflate.c:739:739"/>
    <Action type="ReadGlobal">Read inbuf[]</Action>
  </Node>
  <Node id="56">
    <SourceLocation path="inflate.c" line="739" lineEnd="739" colStart="0" colEnd="0" contextId="15" snippet="EB7B6FECCEB0ED667DD87C5E48AEA93E#inflate.c:739:739"/>
    <SecondaryLocation path="inflate.c" line="222" lineEnd="222" colStart="0" colEnd="0" snippet="67552D0DFA435800DF0E3E425B8E7904#inflate.c:222:222"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="57">
    <SourceLocation path="inflate.c" line="741" lineEnd="741" colStart="0" colEnd="0" contextId="15" snippet="F619AD6CB6A771EE64EF2D284D3A2446#inflate.c:741:741"/>
    <SecondaryLocation path="inflate.c" line="223" lineEnd="223" colStart="0" colEnd="0" snippet="F1E4B30627F4B41DB3A01704F454F203#inflate.c:223:223"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="58">
    <SourceLocation path="gzip.c" line="426" lineEnd="426" colStart="0" colEnd="0" contextId="1" snippet="092496749C5E81624F99E7B750A5F2B0#gzip.c:426:426"/>
    <Action type="InCall">main(1)</Action>
    <Reason>
      <Rule ruleID="054DFA59-0195-4AB2-B12C-C89C8650F4A5"/>
    </Reason>
  </Node>
  <Node id="59">
    <SourceLocation path="gzip.c" line="1009" lineEnd="1009" colStart="20" colEnd="0" contextId="19" snippet="247D202A9301FBF404E24BC02F6D4CB9#gzip.c:1009:1009"/>
    <Action type="InOutCall">strcpy(1 : 0)</Action>
    <Reason>
      <Rule ruleID="C95F10BD-09EF-4014-9E1A-59B6274A7ACF"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : strcpy</Fact>
    </Knowledge>
  </Node>
  <Node id="60">
    <SourceLocation path="gzip.c" line="716" lineEnd="716" colStart="19" colEnd="0" contextId="9" snippet="72AED47F20AED93914A18B0FBD34DDDB#gzip.c:716:716"/>
    <Action type="InOutCall">get_istat(0 : {ifname})</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="59"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : get_istat</Fact>
    </Knowledge>
  </Node>
  <Node id="61">
    <SourceLocation path="gzip.c" line="593" lineEnd="593" colStart="17" colEnd="0" contextId="1" snippet="2D7834BB154CFFD592413AEFA5F4514E#gzip.c:593:593"/>
    <Action type="InOutCall">treat_file(0 : {ifname})</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="60"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : treat_file</Fact>
    </Knowledge>
  </Node>
  <Node id="62">
    <SourceLocation path="gzip.c" line="1009" lineEnd="1009" colStart="20" colEnd="0" contextId="19" snippet="247D202A9301FBF404E24BC02F6D4CB9#gzip.c:1009:1009"/>
    <Action type="InOutCall">strcpy(1 : 0)</Action>
    <Reason>
      <Rule ruleID="C95F10BD-09EF-4014-9E1A-59B6274A7ACF"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : strcpy</Fact>
    </Knowledge>
  </Node>
  <Node id="63">
    <SourceLocation path="gzip.c" line="716" lineEnd="716" colStart="19" colEnd="0" contextId="9" snippet="72AED47F20AED93914A18B0FBD34DDDB#gzip.c:716:716"/>
    <Action type="InOutCall">get_istat(0 : {ifname})</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="62"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : get_istat</Fact>
    </Knowledge>
  </Node>
  <Node id="64">
    <SourceLocation path="gzip.c" line="593" lineEnd="593" colStart="17" colEnd="0" contextId="1" snippet="2D7834BB154CFFD592413AEFA5F4514E#gzip.c:593:593"/>
    <Action type="InOutCall">treat_file(0 : {ifname})</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="63"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : treat_file</Fact>
    </Knowledge>
  </Node>
  <Node id="65">
    <SourceLocation path="gzip.c" line="593" lineEnd="593" colStart="17" colEnd="0" contextId="1" snippet="2D7834BB154CFFD592413AEFA5F4514E#gzip.c:593:593"/>
    <Action type="InCall">treat_file(0)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : treat_file</Fact>
    </Knowledge>
  </Node>
  <Node id="66">
    <SourceLocation path="gzip.c" line="716" lineEnd="716" colStart="19" colEnd="0" contextId="9" snippet="72AED47F20AED93914A18B0FBD34DDDB#gzip.c:716:716"/>
    <Action type="InCall">get_istat(0)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : get_istat</Fact>
    </Knowledge>
  </Node>
  <Node id="67">
    <SourceLocation path="gzip.c" line="1009" lineEnd="1009" colStart="20" colEnd="0" contextId="19" snippet="247D202A9301FBF404E24BC02F6D4CB9#gzip.c:1009:1009"/>
    <Action type="InOutCall">strcpy(1 : 0)</Action>
    <Reason>
      <Rule ruleID="C95F10BD-09EF-4014-9E1A-59B6274A7ACF"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : strcpy</Fact>
    </Knowledge>
  </Node>
  <Node id="68">
    <SourceLocation path="gzip.c" line="425" lineEnd="425" colStart="0" colEnd="0" contextId="1" snippet="CEB6188EE24D2D3B5F34D7F787E6AD49#gzip.c:425:425"/>
    <Action type="InCall">main(0)</Action>
    <Reason>
      <Rule ruleID="054DFA59-0195-4AB2-B12C-C89C8650F4A5"/>
    </Reason>
  </Node>
  <Node id="69">
    <SourceLocation path="gzip.c" line="443" lineEnd="443" colStart="0" colEnd="0" contextId="1" snippet="0F9AA80AA8BFDB9E7F2978134A238101#gzip.c:443:443"/>
    <Action type="InCall">add_envopt(0)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : add_envopt</Fact>
    </Knowledge>
  </Node>
  <Node id="70">
    <SourceLocation path="util.c" line="307" lineEnd="307" colStart="0" colEnd="0" contextId="21" snippet="82BB6BEE501297E7DFBCC9A2B0CD04A4#util.c:307:307"/>
    <Action type="Assign">Assignment to argcp</Action>
  </Node>
  <Node id="71">
    <SourceLocation path="util.c" line="102" lineEnd="102" colStart="0" colEnd="0" contextId="12" snippet="1BAF7F06F879AC4BCD4ECDDDE1990502#util.c:102:102"/>
    <Action type="OutCall">read(1)</Action>
    <Reason>
      <Rule ruleID="39DDF4FD-5A7A-4BFF-AEC4-05A8232615B1"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : read</Fact>
    </Knowledge>
  </Node>
  <Node id="72">
    <SourceLocation path="unpack.c" line="104" lineEnd="104" colStart="39" colEnd="0" contextId="17" snippet="428E391857936D7EB93DC55E45837DDC#unpack.c:104:104"/>
    <Action type="ReadGlobal">Read inbuf[]</Action>
  </Node>
  <Node id="73">
    <SourceLocation path="unpack.c" line="104" lineEnd="104" colStart="0" colEnd="0" contextId="17" snippet="428E391857936D7EB93DC55E45837DDC#unpack.c:104:104"/>
    <SecondaryLocation path="gzip.h" line="202" lineEnd="202" colStart="0" colEnd="0" snippet="58EF9C6B58B8B3F3D1EE1AA7000F4EE8#gzip.h:202:202"/>
    <Action type="AssignGlobal">Assignment to max_len</Action>
  </Node>
  <Node id="74">
    <SourceLocation path="unpack.c" line="151" lineEnd="151" colStart="16" colEnd="0" contextId="22" snippet="94FB3DEC26E1A58B14071039AABEEECB#unpack.c:151:151"/>
    <Action type="ReadGlobal">Read max_len</Action>
  </Node>
  <Node id="75">
    <SourceLocation path="unpack.c" line="151" lineEnd="151" colStart="0" colEnd="0" contextId="22" snippet="94FB3DEC26E1A58B14071039AABEEECB#unpack.c:151:151"/>
    <Action type="Assign">Assignment to len</Action>
  </Node>
  <Node id="76">
    <SourceLocation path="unpack.c" line="104" lineEnd="104" colStart="56" colEnd="0" contextId="17" snippet="428E391857936D7EB93DC55E45837DDC#unpack.c:104:104"/>
    <SecondaryLocation path="gzip.h" line="202" lineEnd="202" colStart="0" colEnd="0" snippet="58EF9C6B58B8B3F3D1EE1AA7000F4EE8#gzip.h:202:202"/>
    <Action type="OutCall">fill_inbuf(return)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : fill_inbuf</Fact>
    </Knowledge>
  </Node>
  <Node id="77">
    <SourceLocation path="unzip.c" line="138" lineEnd="138" colStart="56" colEnd="0" contextId="2" snippet="8FCDFFB3593F1F3CAC51B583B0132C73#unzip.c:138:138"/>
    <SecondaryLocation path="gzip.h" line="202" lineEnd="202" colStart="0" colEnd="0" snippet="58EF9C6B58B8B3F3D1EE1AA7000F4EE8#gzip.h:202:202"/>
    <Action type="OutCall">fill_inbuf(return)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : fill_inbuf</Fact>
    </Knowledge>
  </Node>
  <Node id="78">
    <SourceLocation path="inflate.c" line="728" lineEnd="728" colStart="7" colEnd="0" contextId="15" snippet="8A24B0BB8656308AD1DAEA084885D7FB#inflate.c:728:728"/>
    <Action type="ReadGlobal">Read bb</Action>
  </Node>
  <Node id="79">
    <SourceLocation path="inflate.c" line="728" lineEnd="728" colStart="0" colEnd="0" contextId="15" snippet="8A24B0BB8656308AD1DAEA084885D7FB#inflate.c:728:728"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="80">
    <SourceLocation path="inflate.c" line="734" lineEnd="734" colStart="0" colEnd="0" contextId="15" snippet="C18647CFB2E3B2E3AF30C162E1CAF1D3#inflate.c:734:734"/>
    <Action type="Assign">Assignment to nl</Action>
  </Node>
  <Node id="81">
    <SourceLocation path="inflate.c" line="772" lineEnd="772" colStart="0" colEnd="0" contextId="15" snippet="A9A9BA83F8A87217640C1B98BFBF4BA4#inflate.c:772:772"/>
    <Action type="Assign">Assignment to n</Action>
  </Node>
  <Node id="82">
    <SourceLocation path="inflate.c" line="775" lineEnd="775" colStart="0" colEnd="0" contextId="15" snippet="7A10BEE8BFFB61EEDB89ED8B0AC3C47A#inflate.c:775:775"/>
    <Action type="Compare">i &lt; n</Action>
    <Knowledge>
      <Fact primary="false" type="Confidence">Confidence: 0.96 (Tainted comparison)</Fact>
    </Knowledge>
  </Node>
  <Node id="83">
    <SourceLocation path="inflate.c" line="733" lineEnd="733" colStart="39" colEnd="0" contextId="15" snippet="D5E1CA6A6AC37A75E468669D65D8A98E#inflate.c:733:733"/>
    <Action type="ReadGlobal">Read inbuf[]</Action>
  </Node>
  <Node id="84">
    <SourceLocation path="inflate.c" line="733" lineEnd="733" colStart="0" colEnd="0" contextId="15" snippet="D5E1CA6A6AC37A75E468669D65D8A98E#inflate.c:733:733"/>
    <SecondaryLocation path="inflate.c" line="222" lineEnd="222" colStart="0" colEnd="0" snippet="67552D0DFA435800DF0E3E425B8E7904#inflate.c:222:222"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="85">
    <SourceLocation path="inflate.c" line="823" lineEnd="823" colStart="0" colEnd="0" contextId="15" snippet="AF4D1DEF3C42D8F691F747B5355FF712#inflate.c:823:823"/>
    <Action type="AssignGlobal">Assignment to bb</Action>
  </Node>
  <Node id="86">
    <SourceLocation path="gzip.c" line="434" lineEnd="434" colStart="25" colEnd="0" contextId="1" snippet="F5B9753E56701001E0EDFDFC25DE116C#gzip.c:434:434"/>
    <Action type="InOutCall">basename(0 : return)</Action>
    <Reason>
      <Rule ruleID="089BDDA6-B9B3-4081-8FF7-A5D158DAD5E6"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : basename</Fact>
    </Knowledge>
  </Node>
  <Node id="87">
    <SourceLocation path="gzip.c" line="434" lineEnd="434" colStart="0" colEnd="0" contextId="1" snippet="F5B9753E56701001E0EDFDFC25DE116C#gzip.c:434:434"/>
    <Action type="AssignGlobal">Assignment to progname</Action>
  </Node>
  <Node id="88">
    <SourceLocation path="gzip.c" line="435" lineEnd="435" colStart="22" colEnd="0" contextId="1" snippet="AAFE23A360626EAC7352D8AF6DC183E3#gzip.c:435:435"/>
    <Action type="InOutCall">strlen(0 : return)</Action>
    <Reason>
      <Rule ruleID="6000D6CE-7BDC-431F-8AEC-B2747B188471"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : strlen</Fact>
    </Knowledge>
  </Node>
  <Node id="89">
    <SourceLocation path="gzip.c" line="435" lineEnd="435" colStart="0" colEnd="0" contextId="1" snippet="AAFE23A360626EAC7352D8AF6DC183E3#gzip.c:435:435"/>
    <Action type="Assign">Assignment to proglen</Action>
  </Node>
  <Node id="90">
    <SourceLocation path="util.c" line="197" lineEnd="197" colStart="0" colEnd="0" contextId="25" snippet="CEFAAED028B42B2655CD4016E58B6565#util.c:197:197"/>
    <Action type="Return">Return fname</Action>
  </Node>
  <Node id="91">
    <SourceLocation path="gzip.c" line="434" lineEnd="434" colStart="25" colEnd="0" contextId="1" snippet="F5B9753E56701001E0EDFDFC25DE116C#gzip.c:434:434"/>
    <Action type="InOutCall">basename(0 : return)</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="90"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : basename</Fact>
    </Knowledge>
  </Node>
  <Node id="92">
    <SourceLocation path="gzip.c" line="1076" lineEnd="1076" colStart="20" colEnd="0" contextId="26" snippet="2A75EBA9DC2CE85C805B5DFE5F24D9EC#gzip.c:1076:1076"/>
    <Action type="InOutCall">strcpy(1 : 0)</Action>
    <Reason>
      <Rule ruleID="C95F10BD-09EF-4014-9E1A-59B6274A7ACF"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : strcpy</Fact>
    </Knowledge>
  </Node>
  <Node id="93">
    <SourceLocation path="gzip.c" line="1741" lineEnd="1741" colStart="16" colEnd="0" contextId="30" snippet="F8C0AA28D05835FB4EC9F3602F6706E9#gzip.c:1741:1741"/>
    <Action type="ReadGlobal">Read ofname</Action>
  </Node>
  <Node id="94">
    <SourceLocation path="unlzh.c" line="115" lineEnd="115" colStart="39" colEnd="0" contextId="31" snippet="A0C39C2890F1C9235A3F3156112FBD6A#unlzh.c:115:115"/>
    <Action type="ReadGlobal">Read inbuf[]</Action>
  </Node>
  <Node id="95">
    <SourceLocation path="unlzh.c" line="115" lineEnd="115" colStart="0" colEnd="0" contextId="31" snippet="A0C39C2890F1C9235A3F3156112FBD6A#unlzh.c:115:115"/>
    <SecondaryLocation path="gzip.h" line="203" lineEnd="203" colStart="0" colEnd="0" snippet="0383123F3B555E215878E2FB63448FFF#gzip.h:203:203"/>
    <Action type="AssignGlobal">Assignment to subbitbuf</Action>
  </Node>
  <Node id="96">
    <SourceLocation path="unlzh.c" line="119" lineEnd="119" colStart="0" colEnd="0" contextId="31" snippet="19E6CB511726E654A4D4CE5CB336868F#unlzh.c:119:119"/>
    <Action type="AssignGlobal">Assignment to bitbuf</Action>
  </Node>
  <Node id="97">
    <SourceLocation path="unlzh.c" line="127" lineEnd="127" colStart="9" colEnd="0" contextId="32" snippet="14435B8E1F37CC24EA2EB27F51758FE9#unlzh.c:127:127"/>
    <Action type="ReadGlobal">Read bitbuf</Action>
  </Node>
  <Node id="98">
    <SourceLocation path="unlzh.c" line="127" lineEnd="127" colStart="0" colEnd="0" contextId="32" snippet="14435B8E1F37CC24EA2EB27F51758FE9#unlzh.c:127:127"/>
    <Action type="Assign">Assignment to x</Action>
  </Node>
  <Node id="99">
    <SourceLocation path="unlzh.c" line="128" lineEnd="128" colStart="0" colEnd="0" contextId="32" snippet="074B91C1FDACAC4A1AFFBEE5B9CA668F#unlzh.c:128:128"/>
    <Action type="Return">Return x</Action>
  </Node>
  <Node id="100">
    <SourceLocation path="unlzh.c" line="245" lineEnd="245" colStart="6" colEnd="0" contextId="33" snippet="34D1DC65B72F97B4A73C38B704A10750#unlzh.c:245:245"/>
    <Action type="OutCall">getbits(return)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : getbits</Fact>
    </Knowledge>
  </Node>
  <Node id="101">
    <SourceLocation path="unlzh.c" line="245" lineEnd="245" colStart="0" colEnd="0" contextId="33" snippet="34D1DC65B72F97B4A73C38B704A10750#unlzh.c:245:245"/>
    <Action type="Assign">Assignment to c</Action>
  </Node>
  <Node id="102">
    <SourceLocation path="unlzh.c" line="247" lineEnd="247" colStart="0" colEnd="0" contextId="33" snippet="1CF69A0A817A292343AFA008F8307FF5#unlzh.c:247:247"/>
    <SecondaryLocation path="unlzh.c" line="96" lineEnd="96" colStart="0" colEnd="0" snippet="C7E3889561099738FA5EF6BD00241FF0#unlzh.c:96:96"/>
    <Action type="AssignGlobal">Assignment to d_buf[]</Action>
  </Node>
  <Node id="103">
    <SourceLocation path="unlzw.c" line="339" lineEnd="339" colStart="41" colEnd="0" contextId="3" snippet="38AB09C51A5B086FB37BB8BC6DD42ECE#unlzw.c:339:339"/>
    <Action type="ReadGlobal">Read d_buf[32767]</Action>
  </Node>
  <Node id="104">
    <SourceLocation path="unlzw.c" line="339" lineEnd="339" colStart="0" colEnd="0" contextId="3" snippet="38AB09C51A5B086FB37BB8BC6DD42ECE#unlzw.c:339:339"/>
    <Action type="Assign">Assignment to i</Action>
  </Node>
  <Node id="105">
    <SourceLocation path="unlzh.c" line="115" lineEnd="115" colStart="56" colEnd="0" contextId="31" snippet="A0C39C2890F1C9235A3F3156112FBD6A#unlzh.c:115:115"/>
    <SecondaryLocation path="gzip.h" line="203" lineEnd="203" colStart="0" colEnd="0" snippet="0383123F3B555E215878E2FB63448FFF#gzip.h:203:203"/>
    <Action type="OutCall">fill_inbuf(return)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : fill_inbuf</Fact>
    </Knowledge>
  </Node>
  <Node id="106">
    <SourceLocation path="deflate.c" line="361" lineEnd="361" colStart="0" colEnd="0" contextId="6" snippet="E8777A1BC0045D0D660C3366F07DFEA5#deflate.c:361:361"/>
    <Action type="Alias">scan Aliases window[]</Action>
  </Node>
  <Node id="107">
    <SourceLocation path="deflate.c" line="448" lineEnd="448" colStart="0" colEnd="0" contextId="6" snippet="3091A88C3383C5CCC87CB8D75B6EA890#deflate.c:448:448"/>
    <Action type="Assign">Assignment to scan</Action>
  </Node>
  <Node id="108">
    <SourceLocation path="deflate.c" line="454" lineEnd="454" colStart="21" colEnd="0" contextId="6" snippet="784682FF6A79276FFCA51471B92BF47B#deflate.c:454:454"/>
    <Action type="Assign">Assignment to scan</Action>
  </Node>
  <Node id="109">
    <SourceLocation path="deflate.c" line="460" lineEnd="460" colStart="0" colEnd="0" contextId="6" snippet="9D26A63295BA4069A47810489D234F6D#deflate.c:460:460"/>
    <Action type="Assign">Assignment to len</Action>
  </Node>
  <Node id="110">
    <SourceLocation path="deflate.c" line="467" lineEnd="467" colStart="0" colEnd="0" contextId="6" snippet="549B93605D81748E346715A795C6121C#deflate.c:467:467"/>
    <Action type="Assign">Assignment to best_len</Action>
  </Node>
  <Node id="111">
    <SourceLocation path="deflate.c" line="479" lineEnd="479" colStart="0" colEnd="0" contextId="6" snippet="6D1E8016F88963074C95522D41F4D8E4#deflate.c:479:479"/>
    <Action type="Return">Return best_len</Action>
  </Node>
  <Node id="112">
    <SourceLocation path="deflate.c" line="601" lineEnd="601" colStart="28" colEnd="0" contextId="7" snippet="D0C06D30584F04189F8CA845A88AB344#deflate.c:601:601"/>
    <Action type="OutCall">longest_match(return[])</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : longest_match</Fact>
    </Knowledge>
  </Node>
  <Node id="113">
    <SourceLocation path="deflate.c" line="601" lineEnd="601" colStart="0" colEnd="0" contextId="7" snippet="D0C06D30584F04189F8CA845A88AB344#deflate.c:601:601"/>
    <Action type="Assign">Assignment to match_length</Action>
  </Node>
  <Node id="114">
    <SourceLocation path="deflate.c" line="628" lineEnd="628" colStart="0" colEnd="0" contextId="7" snippet="D2BCF56080A6620C82E000E2868863FA#deflate.c:628:628"/>
    <Action type="AssignGlobal">Assignment to strstart</Action>
  </Node>
  <Node id="115">
    <SourceLocation path="deflate.c" line="643" lineEnd="643" colStart="44" colEnd="0" contextId="7" snippet="199F314BE320250F2ADE26F29BDE2BCA#deflate.c:643:643"/>
    <Action type="ReadGlobal">Read window[]</Action>
  </Node>
  <Node id="116">
    <SourceLocation path="bits.c" line="203" lineEnd="203" colStart="12" colEnd="0" contextId="35" snippet="ADD47D4BB6F080770262F7282604E847#bits.c:203:203"/>
    <Action type="Assign">Assignment to buf</Action>
  </Node>
  <Node id="117">
    <SourceLocation path="bits.c" line="203" lineEnd="203" colStart="0" colEnd="0" contextId="35" snippet="ADD47D4BB6F080770262F7282604E847#bits.c:203:203"/>
    <SecondaryLocation path="gzip.h" line="210" lineEnd="210" colStart="0" colEnd="0" snippet="15866AA459509FB6DFBB259168C34604#gzip.h:210:210"/>
    <Action type="AssignGlobal">Assignment to outbuf[]</Action>
  </Node>
  <Node id="118">
    <SourceLocation path="trees.c" line="924" lineEnd="924" colStart="20" colEnd="0" contextId="27" snippet="7A9CC450DC8A5CCD5FC2005D4046E1FA#trees.c:924:924"/>
    <Action type="InOutCall">copy_block(0 : {outbuf}[])</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="116"/>
          </Entry>
          <Entry>
            <NodeRef id="117"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : copy_block</Fact>
    </Knowledge>
  </Node>
  <Node id="119">
    <SourceLocation path="deflate.c" line="643" lineEnd="643" colStart="0" colEnd="0" contextId="7" snippet="199F314BE320250F2ADE26F29BDE2BCA#deflate.c:643:643"/>
    <SecondaryLocation path="deflate.c" line="571" lineEnd="571" colStart="0" colEnd="0" snippet="DA11576AA227DAA0BACFFE4D02B328D6#deflate.c:571:571"/>
    <Action type="InOutCall">flush_block(0 : {outbuf}[])</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="118"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : flush_block</Fact>
    </Knowledge>
  </Node>
  <Node id="120">
    <SourceLocation path="unlzh.c" line="269" lineEnd="269" colStart="15" colEnd="0" contextId="33" snippet="AD04094B8B91F98C68326252869A493B#unlzh.c:269:269"/>
    <Action type="InCall">make_table(1[])</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : make_table</Fact>
    </Knowledge>
  </Node>
  <Node id="121">
    <SourceLocation path="gzip.c" line="1213" lineEnd="1213" colStart="39" colEnd="0" contextId="13" snippet="619C1F6477DFE183A0A63DD2EEC415C9#gzip.c:1213:1213"/>
    <Action type="ReadGlobal">Read inbuf[]</Action>
  </Node>
  <Node id="122">
    <SourceLocation path="gzip.c" line="1213" lineEnd="1213" colStart="0" colEnd="0" contextId="13" snippet="619C1F6477DFE183A0A63DD2EEC415C9#gzip.c:1213:1213"/>
    <SecondaryLocation path="gzip.h" line="202" lineEnd="202" colStart="0" colEnd="0" snippet="58EF9C6B58B8B3F3D1EE1AA7000F4EE8#gzip.h:202:202"/>
    <Action type="Assign">Assignment to stamp</Action>
  </Node>
  <Node id="123">
    <SourceLocation path="gzip.c" line="1214" lineEnd="1214" colStart="0" colEnd="0" contextId="13" snippet="E264747A049291BB6D8E2570C762D469#gzip.c:1214:1214"/>
    <Action type="AssignGlobal">Assignment to time_stamp</Action>
  </Node>
  <Node id="124">
    <SourceLocation path="zip.c" line="55" lineEnd="55" colStart="21" colEnd="0" contextId="37" snippet="91A598AFD54B3542ACA92CEFF2FE552E#zip.c:55:55"/>
    <SecondaryLocation path="gzip.h" line="229" lineEnd="229" colStart="0" colEnd="0" snippet="5D51A6F3A6E81EE1277E96C38194097E#gzip.h:229:229"/>
    <Action type="ReadGlobal">Read time_stamp</Action>
  </Node>
  <Node id="125">
    <SourceLocation path="zip.c" line="55" lineEnd="55" colStart="0" colEnd="0" contextId="37" snippet="91A598AFD54B3542ACA92CEFF2FE552E#zip.c:55:55"/>
    <SecondaryLocation path="gzip.h" line="210" lineEnd="210" colStart="0" colEnd="0" snippet="15866AA459509FB6DFBB259168C34604#gzip.h:210:210"/>
    <Action type="AssignGlobal">Assignment to outbuf[]</Action>
  </Node>
  <Node id="126">
    <SourceLocation path="inflate.c" line="609" lineEnd="609" colStart="7" colEnd="0" contextId="38" snippet="944C337FFD6F13D9195DE236FBEBF0D7#inflate.c:609:609"/>
    <Action type="ReadGlobal">Read bb</Action>
  </Node>
  <Node id="127">
    <SourceLocation path="inflate.c" line="609" lineEnd="609" colStart="0" colEnd="0" contextId="38" snippet="944C337FFD6F13D9195DE236FBEBF0D7#inflate.c:609:609"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="128">
    <SourceLocation path="inflate.c" line="616" lineEnd="616" colStart="0" colEnd="0" contextId="38" snippet="D73C76154428AF0472705F7E3AFC6F85#inflate.c:616:616"/>
    <SecondaryLocation path="inflate.c" line="223" lineEnd="223" colStart="0" colEnd="0" snippet="F1E4B30627F4B41DB3A01704F454F203#inflate.c:223:223"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="129">
    <SourceLocation path="inflate.c" line="622" lineEnd="622" colStart="0" colEnd="0" contextId="38" snippet="01D06F7F8167D11DF2121421B6A0E1F8#inflate.c:622:622"/>
    <SecondaryLocation path="inflate.c" line="223" lineEnd="223" colStart="0" colEnd="0" snippet="F1E4B30627F4B41DB3A01704F454F203#inflate.c:223:223"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="130">
    <SourceLocation path="inflate.c" line="626" lineEnd="626" colStart="0" colEnd="0" contextId="38" snippet="F9133957657E6A6DC674E1793D06BCE1#inflate.c:626:626"/>
    <SecondaryLocation path="inflate.c" line="223" lineEnd="223" colStart="0" colEnd="0" snippet="F1E4B30627F4B41DB3A01704F454F203#inflate.c:223:223"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="131">
    <SourceLocation path="inflate.c" line="633" lineEnd="633" colStart="0" colEnd="0" contextId="38" snippet="D22C7B0BF52A0E833C37889508CDEDD8#inflate.c:633:633"/>
    <SecondaryLocation path="inflate.c" line="112" lineEnd="112" colStart="0" colEnd="0" snippet="C46EA7FA0FD8FFEB0DAFB0FE0B25B99F#inflate.c:112:112"/>
    <Action type="AssignGlobal">Assignment to window[]</Action>
  </Node>
  <Node id="132">
    <SourceLocation path="zip.c" line="111" lineEnd="111" colStart="21" colEnd="0" contextId="39" snippet="148E1BD9052A35E09DA3B3CD11824344#zip.c:111:111"/>
    <Action type="OutCall">read(1)</Action>
    <Reason>
      <Rule ruleID="39DDF4FD-5A7A-4BFF-AEC4-05A8232615B1"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : read</Fact>
    </Knowledge>
  </Node>
  <Node id="133">
    <SourceLocation path="deflate.c" line="557" lineEnd="557" colStart="0" colEnd="0" contextId="40" snippet="3943A5BA3A752B8091E7161F2985CDD4#deflate.c:557:557"/>
    <Action type="OutCall">file_read(0)</Action>
    <Knowledge>
      <Fact primary="false" type="Confidence">Confidence: 0.70 (Function pointer call)</Fact>
      <Fact primary="false" type="Call">Pointer Invocation : file_read</Fact>
    </Knowledge>
  </Node>
  <Node id="134">
    <SourceLocation path="inflate.c" line="542" lineEnd="542" colStart="56" colEnd="0" contextId="11" snippet="801D2C79036E67DD9319765CE21C62C6#inflate.c:542:542"/>
    <SecondaryLocation path="gzip.h" line="202" lineEnd="202" colStart="0" colEnd="0" snippet="58EF9C6B58B8B3F3D1EE1AA7000F4EE8#gzip.h:202:202"/>
    <Action type="OutCall">fill_inbuf(return)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : fill_inbuf</Fact>
    </Knowledge>
  </Node>
  <Node id="135">
    <SourceLocation path="deflate.c" line="601" lineEnd="601" colStart="28" colEnd="0" contextId="7" snippet="D0C06D30584F04189F8CA845A88AB344#deflate.c:601:601"/>
    <Action type="OutCall">longest_match(return)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : longest_match</Fact>
    </Knowledge>
  </Node>
  <Node id="136">
    <SourceLocation path="trees.c" line="962" lineEnd="962" colStart="0" colEnd="0" contextId="8" snippet="3080959CCCA9DF1666A66A38E24F0507#trees.c:962:962"/>
    <SecondaryLocation path="trees.c" line="251" lineEnd="251" colStart="0" colEnd="0" snippet="E28BE80A061554B03FF295E5469F528D#trees.c:251:251"/>
    <Action type="AssignGlobal">Assignment to inbuf[]</Action>
  </Node>
  <Node id="137">
    <SourceLocation path="deflate.c" line="608" lineEnd="608" colStart="0" colEnd="0" contextId="7" snippet="134FACB005E8C0B26C52D2114A3641A1#deflate.c:608:608"/>
    <Action type="InOutCall">ct_tally(1 : {inbuf}[])</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="136"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : ct_tally</Fact>
    </Knowledge>
  </Node>
  <Node id="138">
    <SourceLocation path="gzip.c" line="1022" lineEnd="1022" colStart="20" colEnd="0" contextId="19" snippet="A8845BD04C9E6718519C37EA30E2BE1D#gzip.c:1022:1022"/>
    <Action type="InCall">get_suffix(0)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : get_suffix</Fact>
    </Knowledge>
  </Node>
  <Node id="139">
    <SourceLocation path="gzip.c" line="1532" lineEnd="1532" colStart="15" colEnd="0" contextId="28" snippet="AA321A5BF490A39C21E1EA4615C7D3E6#gzip.c:1532:1532"/>
    <Action type="ReadGlobal">Read ofname</Action>
  </Node>
  <Node id="140">
    <SourceLocation path="gzip.c" line="1532" lineEnd="1532" colStart="15" colEnd="0" contextId="28" snippet="AA321A5BF490A39C21E1EA4615C7D3E6#gzip.c:1532:1532"/>
    <Action type="InCall">shorten_name(0)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : shorten_name</Fact>
    </Knowledge>
  </Node>
  <Node id="141">
    <SourceLocation path="gzip.c" line="1470" lineEnd="1470" colStart="20" colEnd="0" contextId="20" snippet="7035B3E6B1B08EAA7CEA2F6C0C193D33#gzip.c:1470:1470"/>
    <Action type="InCall">get_suffix(0)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : get_suffix</Fact>
    </Knowledge>
  </Node>
  <Node id="142">
    <SourceLocation path="gzip.c" line="915" lineEnd="915" colStart="15" colEnd="0" contextId="14" snippet="36B66DA266349BC4812785506887DE58#gzip.c:915:915"/>
    <Action type="ReadGlobal">Read ofname</Action>
  </Node>
  <Node id="143">
    <SourceLocation path="gzip.c" line="915" lineEnd="915" colStart="15" colEnd="0" contextId="14" snippet="36B66DA266349BC4812785506887DE58#gzip.c:915:915"/>
    <Action type="InCall">shorten_name(0)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : shorten_name</Fact>
    </Knowledge>
  </Node>
  <Node id="144">
    <SourceLocation path="zip.c" line="68" lineEnd="68" colStart="21" colEnd="0" contextId="37" snippet="B9E82D20447550CDC06E921B974663B7#zip.c:68:68"/>
    <Action type="InOutCall">basename(0 : return)</Action>
    <Reason>
      <Rule ruleID="089BDDA6-B9B3-4081-8FF7-A5D158DAD5E6"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : basename</Fact>
    </Knowledge>
  </Node>
  <Node id="145">
    <SourceLocation path="zip.c" line="68" lineEnd="68" colStart="0" colEnd="0" contextId="37" snippet="B9E82D20447550CDC06E921B974663B7#zip.c:68:68"/>
    <Action type="Assign">Assignment to p</Action>
  </Node>
  <Node id="146">
    <SourceLocation path="zip.c" line="70" lineEnd="70" colStart="0" colEnd="0" contextId="37" snippet="53453F703393045F211F8EB9A6707172#zip.c:70:70"/>
    <SecondaryLocation path="gzip.h" line="210" lineEnd="210" colStart="0" colEnd="0" snippet="15866AA459509FB6DFBB259168C34604#gzip.h:210:210"/>
    <Action type="AssignGlobal">Assignment to outbuf[]</Action>
  </Node>
  <Node id="147">
    <SourceLocation path="util.c" line="197" lineEnd="197" colStart="0" colEnd="0" contextId="25" snippet="CEFAAED028B42B2655CD4016E58B6565#util.c:197:197"/>
    <Action type="Return">Return fname</Action>
  </Node>
  <Node id="148">
    <SourceLocation path="zip.c" line="68" lineEnd="68" colStart="21" colEnd="0" contextId="37" snippet="B9E82D20447550CDC06E921B974663B7#zip.c:68:68"/>
    <Action type="InOutCall">basename(0 : return)</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="147"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : basename</Fact>
    </Knowledge>
  </Node>
  <Node id="149">
    <SourceLocation path="unlzh.c" line="112" lineEnd="112" colStart="0" colEnd="0" contextId="31" snippet="6CC20786D00036955A348DF36E82EB0C#unlzh.c:112:112"/>
    <Action type="AssignGlobal">Assignment to bitbuf</Action>
  </Node>
  <Node id="150">
    <SourceLocation path="unlzh.c" line="119" lineEnd="119" colStart="0" colEnd="0" contextId="31" snippet="19E6CB511726E654A4D4CE5CB336868F#unlzh.c:119:119"/>
    <Action type="AssignGlobal">Assignment to bitbuf</Action>
  </Node>
  <Node id="151">
    <SourceLocation path="unlzh.c" line="296" lineEnd="296" colStart="15" colEnd="0" contextId="4" snippet="5561FE50B72268D6733265FE4ED273BE#unlzh.c:296:296"/>
    <Action type="InOutCall">fillbuf(0 : {bitbuf})</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="149"/>
          </Entry>
          <Entry>
            <NodeRef id="150"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : fillbuf</Fact>
    </Knowledge>
  </Node>
  <Node id="152">
    <SourceLocation path="unlzh.c" line="221" lineEnd="221" colStart="10" colEnd="0" contextId="42" snippet="F9AB640BC95CD96484F08BCADD520B99#unlzh.c:221:221"/>
    <Action type="ReadGlobal">Read bitbuf</Action>
  </Node>
  <Node id="153">
    <SourceLocation path="unlzh.c" line="221" lineEnd="221" colStart="0" colEnd="0" contextId="42" snippet="F9AB640BC95CD96484F08BCADD520B99#unlzh.c:221:221"/>
    <Action type="Assign">Assignment to c</Action>
  </Node>
  <Node id="154">
    <SourceLocation path="unlzh.c" line="227" lineEnd="227" colStart="0" colEnd="0" contextId="42" snippet="17A2C09D06FDEB2650167B73232C4B7E#unlzh.c:227:227"/>
    <Action type="AssignGlobal">Assignment to pt_len[]</Action>
  </Node>
  <Node id="155">
    <SourceLocation path="unlzh.c" line="234" lineEnd="234" colStart="17" colEnd="0" contextId="42" snippet="6EF3BE8657A17B847953B7B4CADBD789#unlzh.c:234:234"/>
    <Action type="InCall">make_table(1[])</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : make_table</Fact>
    </Knowledge>
  </Node>
  <Node id="156">
    <SourceLocation path="util.c" line="290" lineEnd="290" colStart="11" colEnd="0" contextId="21" snippet="2F4791F4250AD22C3772A1C879B33033#util.c:290:290"/>
    <Action type="OutCall">getenv(return)</Action>
    <Reason>
      <Rule ruleID="ACEDD018-EA76-47B9-A765-21CB8C6701DA"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : getenv</Fact>
    </Knowledge>
  </Node>
  <Node id="157">
    <SourceLocation path="util.c" line="290" lineEnd="290" colStart="0" colEnd="0" contextId="21" snippet="2F4791F4250AD22C3772A1C879B33033#util.c:290:290"/>
    <Action type="Assign">Assignment to env</Action>
  </Node>
  <Node id="158">
    <SourceLocation path="util.c" line="293" lineEnd="293" colStart="31" colEnd="0" contextId="21" snippet="F9C3D466CCA10E83B80340FDDEB49931#util.c:293:293"/>
    <Action type="InOutCall">strlen(0 : return)</Action>
    <Reason>
      <Rule ruleID="6000D6CE-7BDC-431F-8AEC-B2747B188471"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : strlen</Fact>
    </Knowledge>
  </Node>
  <Node id="159">
    <SourceLocation path="util.c" line="293" lineEnd="293" colStart="0" colEnd="0" contextId="21" snippet="F9C3D466CCA10E83B80340FDDEB49931#util.c:293:293"/>
    <Action type="InCall">xmalloc(0)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : xmalloc</Fact>
    </Knowledge>
  </Node>
  <Node id="160">
    <SourceLocation path="gzip.c" line="764" lineEnd="764" colStart="16" colEnd="0" contextId="9" snippet="BEF0E8C8F816586373615C5A4766848E#gzip.c:764:764"/>
    <SecondaryLocation path="gzip.c" line="764" lineEnd="764" colStart="0" colEnd="0" snippet="BEF0E8C8F816586373615C5A4766848E#gzip.c:764:764"/>
    <Action type="ReadGlobal">Read ifname</Action>
  </Node>
  <Node id="161">
    <SourceLocation path="unlzw.c" line="333" lineEnd="333" colStart="0" colEnd="0" contextId="3" snippet="689ECBB77B2633FA4B8895BC7F71A150#unlzw.c:333:333"/>
    <Action type="Assign">Assignment to finchar</Action>
  </Node>
  <Node id="162">
    <SourceLocation path="unlzw.c" line="333" lineEnd="333" colStart="0" colEnd="0" contextId="3" snippet="689ECBB77B2633FA4B8895BC7F71A150#unlzw.c:333:333"/>
    <SecondaryLocation path="unlzw.c" line="333" lineEnd="333" colStart="0" colEnd="0" snippet="689ECBB77B2633FA4B8895BC7F71A150#unlzw.c:333:333"/>
    <Action type="Assign">Assignment to stackp</Action>
  </Node>
  <Node id="163">
    <SourceLocation path="unpack.c" line="136" lineEnd="136" colStart="56" colEnd="0" contextId="17" snippet="D712FA26B0B4A75C535C509E551A683B#unpack.c:136:136"/>
    <SecondaryLocation path="gzip.h" line="202" lineEnd="202" colStart="0" colEnd="0" snippet="58EF9C6B58B8B3F3D1EE1AA7000F4EE8#gzip.h:202:202"/>
    <Action type="OutCall">fill_inbuf(return)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : fill_inbuf</Fact>
    </Knowledge>
  </Node>
  <Node id="164">
    <SourceLocation path="inflate.c" line="733" lineEnd="733" colStart="56" colEnd="0" contextId="15" snippet="D5E1CA6A6AC37A75E468669D65D8A98E#inflate.c:733:733"/>
    <SecondaryLocation path="gzip.h" line="202" lineEnd="202" colStart="0" colEnd="0" snippet="58EF9C6B58B8B3F3D1EE1AA7000F4EE8#gzip.h:202:202"/>
    <Action type="OutCall">fill_inbuf(return)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : fill_inbuf</Fact>
    </Knowledge>
  </Node>
  <Node id="165">
    <SourceLocation path="inflate.c" line="775" lineEnd="775" colStart="0" colEnd="0" contextId="15" snippet="7A10BEE8BFFB61EEDB89ED8B0AC3C47A#inflate.c:775:775"/>
    <Action type="Compare">i &lt; n</Action>
    <Knowledge>
      <Fact primary="false" type="Confidence">Confidence: 0.92 (Tainted loop increment)</Fact>
    </Knowledge>
  </Node>
  <Node id="166">
    <SourceLocation path="inflate.c" line="736" lineEnd="736" colStart="56" colEnd="0" contextId="15" snippet="384F05AC996699EEF75FD10BE5961AE7#inflate.c:736:736"/>
    <SecondaryLocation path="gzip.h" line="202" lineEnd="202" colStart="0" colEnd="0" snippet="58EF9C6B58B8B3F3D1EE1AA7000F4EE8#gzip.h:202:202"/>
    <Action type="OutCall">fill_inbuf(return)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : fill_inbuf</Fact>
    </Knowledge>
  </Node>
  <Node id="167">
    <SourceLocation path="inflate.c" line="736" lineEnd="736" colStart="0" colEnd="0" contextId="15" snippet="384F05AC996699EEF75FD10BE5961AE7#inflate.c:736:736"/>
    <SecondaryLocation path="inflate.c" line="222" lineEnd="222" colStart="0" colEnd="0" snippet="67552D0DFA435800DF0E3E425B8E7904#inflate.c:222:222"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="168">
    <SourceLocation path="inflate.c" line="737" lineEnd="737" colStart="0" colEnd="0" contextId="15" snippet="88409911F650EFA343E5FEC6FADCC0D7#inflate.c:737:737"/>
    <Action type="Assign">Assignment to nd</Action>
  </Node>
  <Node id="169">
    <SourceLocation path="unlzw.c" line="357" lineEnd="357" colStart="29" colEnd="0" contextId="3" snippet="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357"/>
    <Action type="InOutCall">memcpy(1 : 0)</Action>
    <Reason>
      <Rule ruleID="B1784A6B-7486-40F9-A869-06770C6D7BF4"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : memcpy</Fact>
    </Knowledge>
  </Node>
  <Node id="170">
    <SourceLocation path="unlzw.c" line="288" lineEnd="288" colStart="0" colEnd="0" contextId="3" snippet="F3D02752260FF3D27E323EAE9E2F31CC#unlzw.c:288:288"/>
    <Action type="Assign">Assignment to finchar</Action>
  </Node>
  <Node id="171">
    <SourceLocation path="unlzw.c" line="288" lineEnd="288" colStart="0" colEnd="0" contextId="3" snippet="F3D02752260FF3D27E323EAE9E2F31CC#unlzw.c:288:288"/>
    <Action type="AssignGlobal">Assignment to outbuf[]</Action>
  </Node>
  <Node id="172">
    <SourceLocation path="bits.c" line="190" lineEnd="190" colStart="0" colEnd="0" contextId="35" snippet="038DE4668DECB3FEE321CFA253254F5C#bits.c:190:190"/>
    <SecondaryLocation path="gzip.h" line="210" lineEnd="210" colStart="0" colEnd="0" snippet="15866AA459509FB6DFBB259168C34604#gzip.h:210:210"/>
    <Action type="AssignGlobal">Assignment to outbuf[]</Action>
  </Node>
  <Node id="173">
    <SourceLocation path="trees.c" line="924" lineEnd="924" colStart="35" colEnd="0" contextId="27" snippet="7A9CC450DC8A5CCD5FC2005D4046E1FA#trees.c:924:924"/>
    <Action type="InOutCall">copy_block(1 : {outbuf}[])</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="172"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : copy_block</Fact>
    </Knowledge>
  </Node>
  <Node id="174">
    <SourceLocation path="deflate.c" line="643" lineEnd="643" colStart="0" colEnd="0" contextId="7" snippet="199F314BE320250F2ADE26F29BDE2BCA#deflate.c:643:643"/>
    <SecondaryLocation path="deflate.c" line="571" lineEnd="571" colStart="0" colEnd="0" snippet="DA11576AA227DAA0BACFFE4D02B328D6#deflate.c:571:571"/>
    <Action type="InOutCall">flush_block(1 : {outbuf}[])</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="173"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : flush_block</Fact>
    </Knowledge>
  </Node>
  <Node id="175">
    <SourceLocation path="deflate.c" line="591" lineEnd="591" colStart="0" colEnd="0" contextId="7" snippet="8D117EE7ED2CE4CF35DBA68483A7F03C#deflate.c:591:591"/>
    <SecondaryLocation path="deflate.c" line="281" lineEnd="281" colStart="0" colEnd="0" snippet="5A5A81EFEF3461B0B3298E24C1FFDFEF#deflate.c:281:281"/>
    <Action type="AssignGlobal">Assignment to prev[32768][]</Action>
  </Node>
  <Node id="176">
    <SourceLocation path="unlzh.c" line="256" lineEnd="256" colStart="15" colEnd="0" contextId="33" snippet="C1852035D3F969F268FBE95D4A1AE06D#unlzh.c:256:256"/>
    <Action type="ReadGlobal">Read prev[]</Action>
  </Node>
  <Node id="177">
    <SourceLocation path="unlzh.c" line="256" lineEnd="256" colStart="0" colEnd="0" contextId="33" snippet="C1852035D3F969F268FBE95D4A1AE06D#unlzh.c:256:256"/>
    <Action type="Assign">Assignment to c</Action>
  </Node>
  <Node id="178">
    <SourceLocation path="unlzh.c" line="266" lineEnd="266" colStart="0" colEnd="0" contextId="33" snippet="F9552660999083A69554B9C685A5EECD#unlzh.c:266:266"/>
    <SecondaryLocation path="unlzh.c" line="86" lineEnd="86" colStart="0" colEnd="0" snippet="26AEE6355AF4599A86571D2063AD8AE3#unlzh.c:86:86"/>
    <Action type="AssignGlobal">Assignment to outbuf[]</Action>
  </Node>
  <Node id="179">
    <SourceLocation path="gzip.c" line="1577" lineEnd="1577" colStart="16" colEnd="0" contextId="28" snippet="BE4D87FC376C5EA115B5CACAFDB73D17#gzip.c:1577:1577"/>
    <Action type="ReadGlobal">Read ofname</Action>
  </Node>
  <Node id="180">
    <SourceLocation path="gzip.c" line="1637" lineEnd="1637" colStart="16" colEnd="0" contextId="43" snippet="9C351CE165DF5B449318990E8EE9E7F9#gzip.c:1637:1637"/>
    <Action type="ReadGlobal">Read ifname</Action>
  </Node>
  <Node id="181">
    <SourceLocation path="inflate.c" line="735" lineEnd="735" colStart="0" colEnd="0" contextId="15" snippet="61871EDAB7285C352958E0D376DA3336#inflate.c:735:735"/>
    <SecondaryLocation path="inflate.c" line="223" lineEnd="223" colStart="0" colEnd="0" snippet="F1E4B30627F4B41DB3A01704F454F203#inflate.c:223:223"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="182">
    <SourceLocation path="inflate.c" line="738" lineEnd="738" colStart="0" colEnd="0" contextId="15" snippet="DE913ACCDCD12EC9E0604B23253087A7#inflate.c:738:738"/>
    <SecondaryLocation path="inflate.c" line="223" lineEnd="223" colStart="0" colEnd="0" snippet="F1E4B30627F4B41DB3A01704F454F203#inflate.c:223:223"/>
    <Action type="Assign">Assignment to b</Action>
  </Node>
  <Node id="183">
    <SourceLocation path="deflate.c" line="692" lineEnd="692" colStart="28" colEnd="0" contextId="45" snippet="CAB4D4864666BC1210F59BF833D3C8F8#deflate.c:692:692"/>
    <Action type="OutCall">longest_match(return)</Action>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : longest_match</Fact>
    </Knowledge>
  </Node>
  <Node id="184">
    <SourceLocation path="deflate.c" line="692" lineEnd="692" colStart="0" colEnd="0" contextId="45" snippet="CAB4D4864666BC1210F59BF833D3C8F8#deflate.c:692:692"/>
    <Action type="Assign">Assignment to match_length</Action>
  </Node>
  <Node id="185">
    <SourceLocation path="deflate.c" line="707" lineEnd="707" colStart="0" colEnd="0" contextId="45" snippet="3E4A7C9713847B537A898F19CD02D6E7#deflate.c:707:707"/>
    <Action type="Compare">prev_length &lt;= match_length</Action>
    <Knowledge>
      <Fact primary="false" type="Confidence">Confidence: 0.96 (Tainted comparison)</Fact>
    </Knowledge>
  </Node>
  <Node id="186">
    <SourceLocation path="trees.c" line="962" lineEnd="962" colStart="0" colEnd="0" contextId="8" snippet="3080959CCCA9DF1666A66A38E24F0507#trees.c:962:962"/>
    <SecondaryLocation path="trees.c" line="251" lineEnd="251" colStart="0" colEnd="0" snippet="E28BE80A061554B03FF295E5469F528D#trees.c:251:251"/>
    <Action type="AssignGlobal">Assignment to inbuf[]</Action>
  </Node>
  <Node id="187">
    <SourceLocation path="deflate.c" line="711" lineEnd="711" colStart="0" colEnd="0" contextId="45" snippet="0F1D28E44B0024E32FDC04E3681ED0AB#deflate.c:711:711"/>
    <Action type="InOutCall">ct_tally(1 : {inbuf}[])</Action>
    <Reason>
      <Trace>
        <Primary>
          <Entry>
            <NodeRef id="186"/>
          </Entry>
        </Primary>
      </Trace>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : ct_tally</Fact>
    </Knowledge>
  </Node>
  <Node id="188">
    <SourceLocation path="gzip.c" line="879" lineEnd="879" colStart="13" colEnd="0" contextId="14" snippet="894C70D7C77B08CC116170E3C7EEB406#gzip.c:879:879"/>
    <SecondaryLocation path="gzip.c" line="879" lineEnd="879" colStart="0" colEnd="0" snippet="894C70D7C77B08CC116170E3C7EEB406#gzip.c:879:879"/>
    <Action type="ReadGlobal">Read ofname</Action>
  </Node>
  <Node id="189">
    <SourceLocation path="gzip.c" line="896" lineEnd="896" colStart="13" colEnd="0" contextId="14" snippet="973DD5AF75F3C035956F73D841336B41#gzip.c:896:896"/>
    <Action type="ReadGlobal">Read ofname</Action>
  </Node>
  <Node id="190">
    <SourceLocation path="gzip.c" line="909" lineEnd="909" colStart="9" colEnd="0" contextId="14" snippet="E6D0C2D5F3B582226B61BEA002C296C2#gzip.c:909:909"/>
    <Action type="ReadGlobal">Read ofname</Action>
  </Node>
  <Node id="191">
    <SourceLocation path="gzip.c" line="1035" lineEnd="1035" colStart="19" colEnd="0" contextId="19" snippet="1DAE8A263829185A0BCCBCEC64EFFAE8#gzip.c:1035:1035"/>
    <Action type="InOutCall">strlen(0 : return)</Action>
    <Reason>
      <Rule ruleID="6000D6CE-7BDC-431F-8AEC-B2747B188471"/>
    </Reason>
    <Knowledge>
      <Fact primary="false" type="Call">Direct : strlen</Fact>
    </Knowledge>
  </Node>
  <Node id="192">
    <SourceLocation path="gzip.c" line="1035" lineEnd="1035" colStart="0" colEnd="0" contextId="19" snippet="1DAE8A263829185A0BCCBCEC64EFFAE8#gzip.c:1035:1035"/>
    <Action type="Assign">Assignment to ilen</Action>
  </Node>
</UnifiedNodePool>
<UnifiedTracePool>
  <Trace id="0">
    <Primary>
      <Entry>
        <Node>
          <SourceLocation path="gzip.c" line="1440" lineEnd="1440" colStart="11" colEnd="0" contextId="29" snippet="48745284594B072EE563033313AA2AE8#gzip.c:1440:1440"/>
          <Action type="InCall">stat(name, &amp;(tstat))</Action>
          <Reason>
            <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
          </Reason>
        </Node>
      </Entry>
      <Entry>
        <Node>
          <SourceLocation path="gzip.c" line="1440" lineEnd="1440" colStart="22" colEnd="0" contextId="29" snippet="48745284594B072EE563033313AA2AE8#gzip.c:1440:1440"/>
          <Action>tstat refers to the stat structure for name</Action>
          <Reason>
            <Internal text="tstat refers to the stat structure for name"/>
          </Reason>
        </Node>
      </Entry>
      <Entry>
        <Node detailsOnly="true" label="Branch taken">
          <SourceLocation path="gzip.c" line="1440" lineEnd="1440" colStart="0" colEnd="0" snippet="48745284594B072EE563033313AA2AE8#gzip.c:1440:1440"/>
          <Action type="BranchTaken">Branch taken: (stat(name, (&amp;tstat)) == 0)</Action>
        </Node>
      </Entry>
      <Entry>
        <Node>
          <SourceLocation path="gzip.c" line="1440" lineEnd="1440" colStart="55" colEnd="0" contextId="29" snippet="48745284594B072EE563033313AA2AE8#gzip.c:1440:1440"/>
          <Action>tstat : Symbolic filename name used to check some file property</Action>
          <Reason>
            <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
          </Reason>
        </Node>
      </Entry>
      <Entry>
        <Node>
          <SourceLocation path="gzip.c" line="1443" lineEnd="1443" colStart="0" colEnd="0" contextId="29" snippet="6C4EB899EEA9BDC432109F31BC45A283#gzip.c:1443:1443"/>
          <Action type="Return">return</Action>
          <Reason>
            <Internal text="return"/>
          </Reason>
        </Node>
      </Entry>
    </Primary>
  </Trace>
  <Trace id="1">
    <Primary>
      <Entry>
        <Node>
          <SourceLocation path="gzip.c" line="1440" lineEnd="1440" colStart="11" colEnd="0" contextId="29" snippet="48745284594B072EE563033313AA2AE8#gzip.c:1440:1440"/>
          <Action type="InCall">stat(name, &amp;(tstat))</Action>
          <Reason>
            <Rule ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412"/>
          </Reason>
        </Node>
      </Entry>
      <Entry>
        <Node>
          <SourceLocation path="gzip.c" line="1440" lineEnd="1440" colStart="22" colEnd="0" contextId="29" snippet="48745284594B072EE563033313AA2AE8#gzip.c:1440:1440"/>
          <Action>tstat refers to the stat structure for name</Action>
          <Reason>
            <Internal text="tstat refers to the stat structure for name"/>
          </Reason>
        </Node>
      </Entry>
      <Entry>
        <Node detailsOnly="true" label="Branch not taken">
          <SourceLocation path="gzip.c" line="1440" lineEnd="1440" colStart="0" colEnd="0" snippet="48745284594B072EE563033313AA2AE8#gzip.c:1440:1440"/>
          <Action type="BranchNotTaken">Branch not taken: (stat(name, (&amp;tstat)) != 0)</Action>
        </Node>
      </Entry>
      <Entry>
        <Node>
          <SourceLocation path="gzip.c" line="1443" lineEnd="1443" colStart="0" colEnd="0" contextId="29" snippet="6C4EB899EEA9BDC432109F31BC45A283#gzip.c:1443:1443"/>
          <Action type="Return">return</Action>
          <Reason>
            <Internal text="return"/>
          </Reason>
        </Node>
      </Entry>
    </Primary>
  </Trace>
</UnifiedTracePool>
<Description contentType="preformatted" classID="B530C5D6-3C71-48C5-9512-72A7F4911822">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The function &lt;Replace key="EnclosingFunction.name"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; allocates memory on line &lt;Replace key="FirstTraceLocation.line"/&gt; and fails to free it.&lt;AltParagraph&gt;Memory is allocated but never freed.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;Memory leaks have two common and sometimes overlapping causes:

- Error conditions and other exceptional circumstances.

- Confusion over which part of the program is responsible for freeing the memory.
&lt;Paragraph&gt;
In this case the memory allocated in &lt;Replace key="FirstTraceLocation.file"/&gt; at line &lt;Replace key="FirstTraceLocation.line"/&gt; is not always freed or returned by the function.
&lt;/Paragraph&gt;
Most memory leaks result in general software reliability problems, but if an attacker can intentionally trigger a memory leak, the attacker might be able to launch a denial of service attack (by crashing the program) or take advantage of other unexpected program behavior resulting from a low memory condition [1].

&lt;b&gt;Example 1:&lt;/b&gt; The following C function leaks a block of allocated memory if the call to &lt;code&gt;read()&lt;/code&gt; fails to return the expected number of bytes:

&lt;pre&gt;
  char* getBlock(int fd) {
  char* buf = (char*) malloc(BLOCK_SIZE);
  if (!buf) {
    return NULL;
  }
  if (read(fd, buf, BLOCK_SIZE) != BLOCK_SIZE) {
    return NULL;
  }
  return buf;
}
&lt;/pre&gt;&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;Because memory leaks can be difficult to track down, you should establish a set of memory management patterns and idioms for your software. Do not tolerate deviations from your conventions.

One good pattern for addressing the error handling mistake in the example is to use forward-reaching &lt;code&gt;goto&lt;/code&gt; statements so that the function has a single well-defined region for handling errors, as follows:

&lt;pre&gt;
  char* getBlock(int fd) {
  char* buf = (char*) malloc(BLOCK_SIZE);
  if (!buf) {
    goto ERR;
  }
  if (read(fd, buf, BLOCK_SIZE) != BLOCK_SIZE) {
    goto ERR;
  }
  return buf;

  ERR:
  if (buf) {
    free(buf);
  }
  return NULL;
}
&lt;/pre&gt;&lt;/Content&gt;</Recommendations>
  <Tips>
    <Tip>Managed pointer objects, such as C++ auto_ptr and Boost smart pointers, are used to ensure that referenced memory allocations are freed. However, memory leaks can still occur when auto_ptrs or certain types of Boost smart pointers are used to reference arrays, Boost array pointers reference individual objects, and the auto_ptr release method is used.</Tip>
  </Tips>
  <References>
    <Reference>
      <Title>A9 Application Denial of Service</Title>
      <Author>Standards Mapping - OWASP Top 10 2004 - (OWASP 2004)</Author>
    </Reference>
    <Reference>
      <Title>APP6080 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP6080 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>CWE ID 401</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>How to Break Software Security</Title>
      <Author>J. Whittaker and H. Thompson</Author>
      <Publisher>Addison Wesley</Publisher>
      <PublishedDate>2003</PublishedDate>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.9</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 - (PCI 1.1)</Author>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="E34C4271-5E8A-47E8-8943-07B4F10CDE73">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The function &lt;Replace key="EnclosingFunction.name"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; does not account for integer overflow, which can result in a logic error or a buffer overflow.&lt;AltParagraph&gt;Not accounting for integer overflow can result in logic errors or buffer overflow.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;Integer overflow errors occur when a program fails to account for the fact that an arithmetic operation can result in a quantity either greater than a data type's maximum value or less than its minimum value. These errors often cause problems in memory allocation functions, where user input intersects with an implicit conversion between signed and unsigned values. If an attacker can cause the program to under-allocate memory or interpret a signed value as an unsigned value in a memory operation, the program may be vulnerable to a buffer overflow.

&lt;b&gt;Example 1:&lt;/b&gt; The following code excerpt from OpenSSH 3.3 demonstrates a classic case of integer overflow:

&lt;pre&gt;
nresp = packet_get_int();
if (nresp &amp;gt; 0) {
 response = xmalloc(nresp*sizeof(char*));
 for (i = 0; i &amp;lt; nresp; i++)
  response[i] = packet_get_string(NULL);
}
&lt;/pre&gt;

If &lt;code&gt;nresp&lt;/code&gt; has the value &lt;code&gt;1073741824&lt;/code&gt; and &lt;code&gt;sizeof(char*)&lt;/code&gt; has its typical value of &lt;code&gt;4&lt;/code&gt;, then the result of the operation &lt;code&gt;nresp*sizeof(char*)&lt;/code&gt; overflows, and the argument to &lt;code&gt;xmalloc()&lt;/code&gt; will be &lt;code&gt;0&lt;/code&gt;. Most &lt;code&gt;malloc()&lt;/code&gt; implementations will happily allocate a 0-byte buffer, causing the subsequent loop iterations to overflow the heap buffer &lt;code&gt;response&lt;/code&gt;.

&lt;b&gt;Example 2:&lt;/b&gt; This example processes user input comprised of a series of variable-length structures. The first 2 bytes of input dictate the size of the structure to be processed.

&lt;pre&gt;
 char* processNext(char* strm) {
 char buf[512];
 short len = *(short*) strm;
 strm += sizeof(len);
 if (len &amp;lt;= 512) {
  memcpy(buf, strm, len);
  process(buf);
  return strm + len;
 } else {
  return -1;
 }
}
&lt;/pre&gt;

The programmer has set an upper bound on the structure size: if it is larger than &lt;code&gt;512&lt;/code&gt;, the input will not be processed. The problem is that &lt;code&gt;len&lt;/code&gt; is a signed integer, so the check against the maximum structure length is done with signed integers, but &lt;code&gt;len&lt;/code&gt; is converted to an unsigned integer for the call to &lt;code&gt;memcpy()&lt;/code&gt;. If &lt;code&gt;len&lt;/code&gt; is negative, then it will appear that the structure has an appropriate size (the &lt;code&gt;if&lt;/code&gt; branch will be taken), but the amount of memory copied by &lt;code&gt;memcpy()&lt;/code&gt; will be quite large, and the attacker will be able to overflow the stack with data in &lt;code&gt;strm&lt;/code&gt;.&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;There are no simple guidelines that allow you to avoid every integer overflow problem, but these recommendations will help prevent the most egregious cases:

- Pay attention to compiler warnings related to signed/unsigned conversions. Some programmers may believe that these warnings are innocuous, but they sometimes point out potential integer overflow problems.

- Be vigilant about checking reasonable upper and lower bounds for all program input. Even if the program should only be dealing with positive integers, check to be sure that the values you are processing are not less than zero. (You can eliminate the need for a lower bounds check by using unsigned data types.)

- Be conservative about the range of values you allow.

- Be cognizant of the implicit typecasting that takes place when you call functions, 
perform arithmetic operations or compare values of different types. 

&lt;b&gt;Example 3:&lt;/b&gt;  The code below implements a wrapper function designed to allocate memory for an array safely by performing an appropriate check on its arguments prior to making a call to &lt;code&gt;malloc()&lt;/code&gt;.

&lt;pre&gt;
void* arrmalloc(uint sz, uint nelem) {
	void *p;
	if(sz &amp;gt; 0 &amp;amp;&amp;amp; nelem &amp;gt;= UINT_MAX / sz)
		return 0;
	return malloc(sz * nelem);
}
&lt;/pre&gt;&lt;/Content&gt;</Recommendations>
  <Tips>
    <Tip>Consider whether or not the integer that might overflow has been derived from the length of a string. If it has, it is safe to assume that the string fits inside the process's address space, which puts an upper bound on the string's length. This fact alone does not make integer overflow impossible, but it does put additional constraints on the arithmetic that must be performed in order to cause an overflow.</Tip>
  </Tips>
  <References>
    <Reference>
      <Title>A1 Unvalidated Input</Title>
      <Author>Standards Mapping - OWASP Top 10 2004 - (OWASP 2004)</Author>
    </Reference>
    <Reference>
      <Title>APP3510 CAT I, APP3550 CAT I</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP3510 CAT I, APP3550 CAT I</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>Basic Integer Overflows</Title>
      <Author>blexim</Author>
      <Publisher>Phrack</Publisher>
      <Source>http://www.phrack.org/phrack/60/p60-0x0a.txt</Source>
    </Reference>
    <Reference>
      <Title>Coding Flaws That Lead to Security Failures</Title>
      <Author>D. Plakosh</Author>
      <Source>http://iasymposium.tamucc.edu/Plakosh_CodingFlaws.ppt</Source>
    </Reference>
    <Reference>
      <Title>CWE ID 190</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.3.1.1</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 - (PCI 1.2)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.1, Requirement 6.5.5</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 - (PCI 1.1)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.2</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 - (PCI 2.0)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 190</Title>
      <Author>Standards Mapping - SANS Top 25 2010 - (SANS 2010)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 190</Title>
      <Author>Standards Mapping - SANS Top 25 2011 - (SANS Top 25 2011)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 682</Title>
      <Author>Standards Mapping - SANS Top 25 2009 - (SANS 2009)</Author>
    </Reference>
    <Reference>
      <Title>SI</Title>
      <Author>Standards Mapping - FIPS200 - (FISMA)</Author>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;Attackers can control the filesystem path argument to &lt;Replace key="PrimaryCall.name"/&gt; at &lt;Replace key="PrimaryLocation.file"/&gt; line &lt;Replace key="PrimaryLocation.line"/&gt;, which allows them to access or modify otherwise protected files.&lt;AltParagraph&gt;Allowing user input to control paths used in filesystem operations could enable an attacker to access or modify otherwise protected system resources.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;Path manipulation errors occur when the following two conditions are met:

1. An attacker can specify a path used in an operation on the filesystem. 

2. By specifying the resource, the attacker gains a capability that would not otherwise be permitted.

For example, the program may give the attacker the ability to overwrite the specified file or run with a configuration controlled by the attacker. 
&lt;Paragraph&gt;
In this case, the attacker can specify the value that enters the program at &lt;Replace key="SourceFunction" link="SourceLocation"/&gt; in &lt;Replace key="SourceLocation.file"/&gt; at line &lt;Replace key="SourceLocation.line"/&gt;, and this value is used to access a filesystem resource at &lt;Replace key="SinkFunction" link="SinkLocation"/&gt; in &lt;Replace key="SinkLocation.file"/&gt; at line &lt;Replace key="SinkLocation.line"/&gt;.
&lt;/Paragraph&gt;
&lt;b&gt;Example 1:&lt;/b&gt; The following code uses input from a CGI request to create a file name. The programmer has not considered the possibility that an attacker could provide a file name such as "&lt;code&gt;../../apache/conf/httpd.conf&lt;/code&gt;", which will cause the application to delete the specified configuration file. 

&lt;pre&gt;
char* rName = getenv("reportName"); 
...
unlink(rName);
&lt;/pre&gt;

&lt;b&gt;Example 2:&lt;/b&gt; The following code uses input from the command line to determine which file to open and echo back to the user. If the program runs with privileges and malicious users can create soft links to the file, they can use the program to read the first part of any file on the system. 

&lt;pre&gt;
ifstream ifs(argv[0]);
string s;
ifs &amp;gt;&amp;gt; s;
cout &amp;lt;&amp;lt; s;
&lt;/pre&gt;&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;The best way to prevent path manipulation is with a level of indirection: create a list of legitimate resource names that a user is allowed to specify, and only allow the user to select from the list. With this approach the input provided by the user is never used directly to specify the resource name. 

In some situations this approach is impractical because the set of legitimate resource names is too large or too hard to keep track of. Programmers often resort to blacklisting in these situations. Blacklisting selectively rejects or escapes potentially dangerous characters before using the input. However, any such list of unsafe characters is likely to be incomplete and will almost certainly become out of date. A better approach is to create a white list of characters that are allowed to appear in the resource name and accept input composed exclusively of characters in the approved set.&lt;/Content&gt;</Recommendations>
  <Tips>
    <Tip>If the program is performing input validation, satisfy yourself that the validation is correct, and use the Custom Rules Editor to create a cleanse rule for the validation routine.</Tip>
    <Tip>It is notoriously difficult to correctly implement a blacklist. If the validation logic relies on blacklisting, be skeptical. Consider different types of input encoding and different sets of meta-characters that might have special meaning when interpreted by different operating systems, databases, or other resources. Determine whether or not the blacklist can be updated easily, correctly, and completely if these requirements ever change.</Tip>
  </Tips>
  <References>
    <Reference>
      <Title>A1 Unvalidated Input</Title>
      <Author>Standards Mapping - OWASP Top 10 2004 - (OWASP 2004)</Author>
    </Reference>
    <Reference>
      <Title>A4 Insecure Direct Object Reference</Title>
      <Author>Standards Mapping - OWASP Top 10 2007 - (OWASP 2007)</Author>
    </Reference>
    <Reference>
      <Title>A4 Insecure Direct Object References</Title>
      <Author>Standards Mapping - OWASP Top 10 2010 - (OWASP 2010)</Author>
    </Reference>
    <Reference>
      <Title>APP3510 CAT I, APP3600 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP3510 CAT I, APP3600 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>CWE ID 22, CWE ID 73</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>Exploiting Software</Title>
      <Author>G. Hoglund, G. McGraw</Author>
      <Publisher>Addison-Wesley</Publisher>
      <PublishedDate>2004</PublishedDate>
    </Reference>
    <Reference>
      <Title>Path Traversal</Title>
      <Author>Standards Mapping - Web Application Security Consortium 24 + 2 - (WASC 24 + 2)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.3.1.1, Requirement 6.5.4</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 - (PCI 1.2)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.1</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 - (PCI 1.1)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.8</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 - (PCI 2.0)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 022</Title>
      <Author>Standards Mapping - SANS Top 25 2010 - (SANS 2010)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 022</Title>
      <Author>Standards Mapping - SANS Top 25 2011 - (SANS Top 25 2011)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 426</Title>
      <Author>Standards Mapping - SANS Top 25 2009 - (SANS 2009)</Author>
    </Reference>
    <Reference>
      <Title>SI</Title>
      <Author>Standards Mapping - FIPS200 - (FISMA)</Author>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="1763683B-B7F0-4A25-BF21-6A7233743A8D">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The function &lt;Replace key="EnclosingFunction.name"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; can dereference a null pointer on line &lt;Replace key="LastTraceLocation.line"/&gt; because it does not check the return value of &lt;Replace key="PrimaryCall.name"/&gt;, which might return null.&lt;AltParagraph&gt;The program can dereference a null pointer because it does not check the return value of a function that might return null.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;Just about every serious attack on a software system begins with the violation of a programmer's assumptions. After the attack, the programmer's assumptions seem flimsy and poorly founded, but before an attack many programmers would defend their assumptions well past the end of their lunch break.

Two dubious assumptions that are easy to spot in code are "this function call can never fail" and "it doesn't matter if this function call fails". When a programmer ignores the return value from a function, they implicitly state that they are operating under one of these assumptions.
&lt;Paragraph&gt;
In this case, an earlier return value is used without being checked in &lt;Replace key="PrimaryLocation.file"/&gt; at line &lt;Replace key="PrimaryLocation.line"/&gt;.
&lt;/Paragraph&gt;
&lt;b&gt;Example 1:&lt;/b&gt;  The following code does not check to see if memory allocation succeeded before attempting to use the pointer returned by &lt;code&gt;malloc()&lt;/code&gt;.

&lt;pre&gt;
    buf = (char*) malloc(req_size);
    strncpy(buf, xfer, req_size);
&lt;/pre&gt;

The traditional defense of this coding error is: 

"If my program runs out of memory, it will fail. It doesn't matter whether I handle the error or simply allow the program to die with a segmentation fault when it tries to dereference the null pointer."

This argument ignores three important considerations:

- Depending upon the type and size of the application, it may be possible to free memory that is being used elsewhere so that execution can continue. 

- It is impossible for the program to perform a graceful exit if required. If the program is performing an atomic operation, it can leave the system in an inconsistent state.

- The programmer has lost the opportunity to record diagnostic information. Did the call to &lt;code&gt;malloc()&lt;/code&gt; fail because &lt;code&gt;req_size&lt;/code&gt; was too large or because there were too many requests being handled at the same time? Or was it caused by a memory leak that has built up over time? Without handling the error, there is no way to know.&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;If a function can return an error code or any other evidence of its success or failure, always check for the error condition, even if there is no obvious way for it to occur. In addition to preventing security errors, many initially mysterious bugs have eventually led back to a failed system call with an ignored return value.

Create an easy to use and standard way for dealing with failure in your application. If error handling is straightforward, programmers will be less inclined to omit it. One approach to standardized error handling is to write wrappers around commonly-used functions that check and handle error conditions without additional programmer intervention. When wrappers are implemented and adopted, the use of non-wrapped equivalents can be prohibited and enforced by using custom rules. 

&lt;b&gt;Example 2:&lt;/b&gt; The following code implements a wrapper around &lt;code&gt;malloc()&lt;/code&gt; that checks the return value of &lt;code&gt;malloc()&lt;/code&gt; against &lt;code&gt;NULL&lt;/code&gt; and exits if the memory allocation failed. 

&lt;pre&gt;
void *checked_malloc (size_t size) {
void *ptr;
ptr= malloc(size);
if (ptr == NULL) {
fprintf (stderr, "Out of memory: %s:%d",  
         __FILE__,__LINE__);
exit(-1);
}
return ptr;
}
&lt;/pre&gt;

The example above uses the simplest error handling mechanism available in low memory conditions: it kills the application. Based on the context in which the failure occurs, other behavior may be appropriate. For example, consider whether the application is using memory elsewhere for less important operations that could be freed to make the current allocation succeed. Depending on the application and the system it runs on, waiting for more memory to become available might also be a practical option. Regardless, in most cases the most important piece of error handling to execute in low memory situations are log entries so that the problem can be accurately diagnosed and possibly prevented in the future.&lt;/Content&gt;</Recommendations>
  <Tips>
    <Tip>Watch out for programmers who want to explain away this type of issue by saying "that can never happen because ...".  Chances are good that they have developed their intuition about the way the system works by using their development workstation. If your software will eventually run under different operating systems, operating system versions, hardware configurations, or runtime environments, their intuition may not apply.</Tip>
  </Tips>
  <References>
    <Reference>
      <Title>A9 Application Denial of Service</Title>
      <Author>Standards Mapping - OWASP Top 10 2004 - (OWASP 2004)</Author>
    </Reference>
    <Reference>
      <Title>APP3120 CAT II, APP6080 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP3120 CAT II, APP6080 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>Building Secure Software</Title>
      <Author>J. Viega, G. McGraw</Author>
      <Publisher>Addison-Wesley</Publisher>
      <PublishedDate>2002</PublishedDate>
    </Reference>
    <Reference>
      <Title>CWE ID 253, CWE ID 690</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.9</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 - (PCI 1.1)</Author>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="86C7916D-A73B-4EBE-A235-9E570095EE66">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The function &lt;Replace key="EnclosingFunction.name"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; might be able to write outside the bounds of allocated memory on line &lt;Replace key="PrimaryLocation.line"/&gt;, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.&lt;AltParagraph&gt;Writing outside the bounds of a block of allocated memory can corrupt data, crash the program, or cause the execution of malicious code.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;Buffer overflow is probably the best known form of software security vulnerability. Most software developers know what a buffer overflow vulnerability is, but buffer overflow attacks against both legacy and newly-developed applications are still quite common. Part of the problem is due to the wide variety of ways buffer overflows can occur, and part is due to the error-prone techniques often used to prevent them.

In a classic buffer overflow exploit, the attacker sends data to a program, which it stores in an undersized stack buffer. The result is that information on the call stack is overwritten, including the function's return pointer. The data sets the value of the return pointer so that when the function returns, it transfers control to malicious code contained in the attacker's data.

Although this type of stack buffer overflow is still common on some platforms and in some development communities, there are a variety of other types of buffer overflow, including heap buffer overflows and off-by-one errors among others. There are a number of excellent books that provide detailed information on how buffer overflow attacks work, including Building Secure Software [1], Writing Secure Code [2], and The Shellcoder's Handbook [3]. 

At the code level, buffer overflow vulnerabilities usually involve the violation of a programmer's assumptions. Many memory manipulation functions in C and C++ do not perform bounds checking and can easily overwrite the allocated bounds of the buffers they operate upon. Even bounded functions, such as &lt;code&gt;strncpy()&lt;/code&gt;, can cause vulnerabilities when used incorrectly. The combination of memory manipulation and mistaken assumptions about the size or makeup of a piece of data is the root cause of most buffer overflows.

Buffer overflow vulnerabilities typically occur in code that:

- Relies on external data to control its behavior.

- Depends upon properties of the data that are enforced outside of the immediate scope of the code.

- Is so complex that a programmer cannot accurately predict its behavior.

&lt;Paragraph&gt;
In this case we are primarily concerned with the second case, because we cannot verify the safety of the operation performed by &lt;Replace key="PrimaryCall.name" link="PrimaryLocation"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; at line &lt;Replace key="PrimaryLocation.line"/&gt;.
&lt;/Paragraph&gt;

The following examples demonstrate all three of the scenarios.

&lt;b&gt;Example 1:&lt;/b&gt; This is an example of the second scenario in which the code depends on properties of the data that are not verified locally. In this example a function named &lt;code&gt;lccopy()&lt;/code&gt; takes a string as its argument and returns a heap-allocated copy of the string with all uppercase letters converted to lowercase. The function performs no bounds checking on its input because it expects &lt;code&gt;str&lt;/code&gt; to always be smaller than &lt;code&gt;BUFSIZE&lt;/code&gt;. If an attacker bypasses checks in the code that calls &lt;code&gt;lccopy()&lt;/code&gt;, or if a change in that code makes the assumption about the size of &lt;code&gt;str&lt;/code&gt; untrue, then &lt;code&gt;lccopy()&lt;/code&gt; will overflow &lt;code&gt;buf&lt;/code&gt; with the unbounded call to &lt;code&gt;strcpy()&lt;/code&gt;.

&lt;pre&gt;
char *lccopy(const char *str) {
	char buf[BUFSIZE];
	char *p;

	strcpy(buf, str);
	for (p = buf; *p; p++) {
		if (isupper(*p)) {
			*p = tolower(*p);
		}
	}	
	return strdup(buf);
}
&lt;/pre&gt;

&lt;b&gt;Example 2.a:&lt;/b&gt; The following sample code demonstrates a simple buffer overflow that is often caused by the first scenario in which the code  relies on external data to control its behavior. The code uses the &lt;code&gt;gets()&lt;/code&gt; function to read an arbitrary amount of data into a stack buffer. Because there is no way to limit the amount of data read by this function, the safety of the code depends on the user to always enter fewer than &lt;code&gt;BUFSIZE&lt;/code&gt; characters.

&lt;pre&gt;
	...
	char buf[BUFSIZE]; 
	gets(buf);
	...
&lt;/pre&gt;

&lt;b&gt;Example 2.b:&lt;/b&gt; This example shows how easy it is to mimic the unsafe behavior of the &lt;code&gt;gets()&lt;/code&gt; function in C++ by using the &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; operator to read input into a &lt;code&gt;char[]&lt;/code&gt; string. 

&lt;pre&gt;
	...
	char buf[BUFSIZE]; 
	cin &amp;gt;&amp;gt; (buf);
	...
&lt;/pre&gt;

&lt;b&gt;Example 3:&lt;/b&gt; The code in this example also relies on user input to control its behavior, but it adds a level of indirection with the use of the bounded memory copy function &lt;code&gt;memcpy()&lt;/code&gt;. This function accepts a destination buffer, a source buffer, and the number of bytes to copy. The input buffer is filled by a bounded call to &lt;code&gt;read()&lt;/code&gt;, but the user specifies the number of bytes that &lt;code&gt;memcpy()&lt;/code&gt; copies.

&lt;pre&gt;
	...
char buf[64], in[MAX_SIZE];
printf("Enter buffer contents:\n");
read(0, in, MAX_SIZE-1);
printf("Bytes to copy:\n");
scanf("%d", &amp;amp;bytes);
memcpy(buf, in, bytes);
	... 
&lt;/pre&gt;

Note: This type of buffer overflow vulnerability (where a program reads data and then trusts a value from the data in subsequent memory operations on the remaining data) has turned up with some frequency in image, audio, and other file processing libraries. 

&lt;b&gt;Example 4:&lt;/b&gt; The following code demonstrates the third scenario in which the code is so complex its behavior cannot be easily predicted. This code is from the popular libPNG image decoder, which is used by a wide array of applications, including Mozilla and some versions of Internet Explorer. 

The code appears to safely perform bounds checking because it checks the size of the variable length, which it later uses to control the amount of data copied by &lt;code&gt;png_crc_read()&lt;/code&gt;. However, immediately before it tests length, the code performs a check on &lt;code&gt;png_ptr-&amp;gt;mode&lt;/code&gt;, and if this check fails a warning is issued and processing continues. Because &lt;code&gt;length&lt;/code&gt; is tested in an &lt;code&gt;else if&lt;/code&gt; block, &lt;code&gt;length&lt;/code&gt; would not be tested if the first check fails, and is used blindly in the call to &lt;code&gt;png_crc_read()&lt;/code&gt;, potentially allowing a stack buffer overflow. 

Although the code in this example is not the most complex we have seen, it demonstrates why complexity should be minimized in code that performs memory operations. 

&lt;pre&gt;
if (!(png_ptr-&amp;gt;mode &amp;amp; PNG_HAVE_PLTE)) {
	/* Should be an error, but we can cope with it */
png_warning(png_ptr, "Missing PLTE before tRNS");
}
else if (length &amp;gt; (png_uint_32)png_ptr-&amp;gt;num_palette) {
png_warning(png_ptr, "Incorrect tRNS chunk length");
png_crc_finish(png_ptr, length);
return;
}
...
png_crc_read(png_ptr, readbuf, (png_size_t)length);
&lt;/pre&gt;

&lt;b&gt;Example 5:&lt;/b&gt; This example also demonstrates the third scenario in which the program's complexity exposes it to buffer overflows. In this case, the exposure is due to the ambiguous interface of one of the functions rather than the structure of the code (as was the case in the previous example).

The &lt;code&gt;getUserInfo()&lt;/code&gt; function takes a username specified as a multibyte string and a pointer to a structure for user information, and populates the structure with information about the user. Since Windows authentication uses Unicode for usernames, the &lt;code&gt;username&lt;/code&gt; argument is first converted from a multibyte string to a Unicode string. This function then incorrectly passes the size of &lt;code&gt;unicodeUser&lt;/code&gt; in bytes rather than characters. The call to &lt;code&gt;MultiByteToWideChar()&lt;/code&gt; may therefore write up to &lt;code&gt;(UNLEN+1)*sizeof(WCHAR)&lt;/code&gt; wide characters, or
&lt;code&gt;(UNLEN+1)*sizeof(WCHAR)*sizeof(WCHAR)&lt;/code&gt; bytes, to the &lt;code&gt;unicodeUser&lt;/code&gt; array, which has only &lt;code&gt;(UNLEN+1)*sizeof(WCHAR)&lt;/code&gt; bytes allocated. If the &lt;code&gt;username&lt;/code&gt; string contains more than &lt;code&gt;UNLEN&lt;/code&gt; characters, the call to &lt;code&gt;MultiByteToWideChar()&lt;/code&gt; will overflow the buffer &lt;code&gt;unicodeUser&lt;/code&gt;. 

&lt;pre&gt;
void getUserInfo(char *username, struct _USER_INFO_2 info){
WCHAR unicodeUser[UNLEN+1];
	MultiByteToWideChar(CP_ACP, 0, username, -1,
    	      			unicodeUser, sizeof(unicodeUser));
NetUserGetInfo(NULL, unicodeUser, 2, (LPBYTE *)&amp;amp;info);
}
&lt;/pre&gt;&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;Never use inherently unsafe functions, such as &lt;code&gt;gets()&lt;/code&gt;, and avoid the use of functions that are difficult to use safely such as &lt;code&gt;strcpy()&lt;/code&gt;. Replace unbounded functions like &lt;code&gt;strcpy()&lt;/code&gt; with their bounded equivalents, such as &lt;code&gt;strncpy()&lt;/code&gt; or the WinAPI functions defined in &lt;code&gt;strsafe.h &lt;/code&gt;[4]. 

Although the careful use of bounded functions can greatly reduce the risk of buffer overflow, this migration cannot be done blindly and does not go far enough on its own to ensure security. Whenever you manipulate memory, especially strings, remember that buffer overflow vulnerabilities typically occur in code that:

- Relies on external data to control its behavior

- Depends upon properties of the data that are enforced outside of the immediate scope of the code

- Is so complex that a programmer cannot accurately predict its behavior.

Additionally, consider the following principles:

- Never trust an external source to provide correct control information to a memory operation. 

- Never trust that properties about the data your program is manipulating will be maintained throughout the program. Sanity check data before you operate on it.

- Limit the complexity of memory manipulation and bounds-checking code. Keep it simple and clearly document the checks you perform, the assumptions that you test, and what the expected behavior of the program is in the case that input validation fails.

- When input data is too large, be leery of truncating the data and continuing to process it. Truncation can change the meaning of the input.

- Do not rely on tools, such as StackGuard, or non-executable stacks to prevent buffer overflow vulnerabilities. These approaches do not address heap buffer overflows and the more subtle stack overflows that can change the contents of variables that control the program. Additionally, many of these approaches are easily defeated, and even when they are working properly, they address the symptom of the problem and not its cause.&lt;/Content&gt;</Recommendations>
  <Tips>
    <Tip>Replacing less secure functions like &lt;code&gt;memcpy()&lt;/code&gt; with their more secure versions, such as &lt;code&gt;memcpy_s()&lt;/code&gt;, still needs to be done with caution. Because parameter validation provided by the &lt;code&gt;_s&lt;/code&gt; family of functions varies, relying on it can lead to unexpected behavior. Furthermore, incorrectly specifying the size of the destination buffer can still result in buffer overflows.</Tip>
  </Tips>
  <References>
    <Reference>
      <Title>A5 Buffer Overflow</Title>
      <Author>Standards Mapping - OWASP Top 10 2004 - (OWASP 2004)</Author>
    </Reference>
    <Reference>
      <Title>APP3510 CAT I, APP3590.1 CAT I</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP3510 CAT I, APP3590.1 CAT I</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>Buffer Overflow</Title>
      <Author>Standards Mapping - Web Application Security Consortium 24 + 2 - (WASC 24 + 2)</Author>
    </Reference>
    <Reference>
      <Title>Building Secure Software</Title>
      <Author>J. Viega, G. McGraw</Author>
      <Publisher>Addison-Wesley</Publisher>
      <PublishedDate>2002</PublishedDate>
    </Reference>
    <Reference>
      <Title>CWE ID 787, CWE ID 120, CWE ID 129, CWE ID 131</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.3.1.1</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 - (PCI 1.2)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.2</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 - (PCI 2.0)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.5</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 - (PCI 1.1)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 119</Title>
      <Author>Standards Mapping - SANS Top 25 2009 - (SANS 2009)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 120, Risky Resource Management - CWE ID 129, Risky Resource Management - CWE ID 131</Title>
      <Author>Standards Mapping - SANS Top 25 2010 - (SANS 2010)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 120, Risky Resource Management - CWE ID 131</Title>
      <Author>Standards Mapping - SANS Top 25 2011 - (SANS Top 25 2011)</Author>
    </Reference>
    <Reference>
      <Title>Strsafe.h Functions</Title>
      <Publisher>Microsoft</Publisher>
      <Source>http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/resources/strings/usingstrsafefunctions.asp</Source>
    </Reference>
    <Reference>
      <Title>The Shellcoder's Handbook: Discovering and Exploiting Security Holes</Title>
      <Author>J. Koziol et al.</Author>
      <Publisher>John Wiley &amp; Sons</Publisher>
      <PublishedDate>2004</PublishedDate>
    </Reference>
    <Reference>
      <Title>Writing Secure Code, Second Edition</Title>
      <Author>M. Howard, D. LeBlanc</Author>
      <Publisher>Microsoft Press</Publisher>
      <PublishedDate>2003</PublishedDate>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="D9CBF365-998C-464B-BF12-92EE7E08939B">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The function &lt;Replace key="EnclosingFunction.name"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; ignores the value returned by &lt;Replace key="PrimaryCall.name"/&gt; on line &lt;Replace key="PrimaryLocation.line"/&gt;, which might cause the program to overlook unexpected states and conditions.&lt;AltParagraph&gt;Ignoring a method's return value can cause the program to overlook unexpected states and conditions.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;Just about every serious attack on a software system begins with the violation of a programmer's assumptions. After the attack, the programmer's assumptions seem flimsy and poorly founded, but before an attack many programmers would defend their assumptions well past the end of their lunch break.

Two dubious assumptions that are easy to spot in code are "this function call can never fail" and "it doesn't matter if this function call fails". When a programmer ignores the return value from a function, they implicitly state that they are operating under one of these assumptions.
&lt;Paragraph&gt;
In this case, a return code goes unchecked in &lt;Replace key="PrimaryLocation.file"/&gt; at line &lt;Replace key="PrimaryLocation.line"/&gt;.
&lt;/Paragraph&gt;
&lt;b&gt;Example:&lt;/b&gt; Consider the following code:

&lt;pre&gt;
char buf[10], cp_buf[10];
fgets(buf, 10, stdin);
strcpy(cp_buf, buf);
&lt;/pre&gt;

The programmer expects that when &lt;code&gt;fgets()&lt;/code&gt; returns, &lt;code&gt;buf&lt;/code&gt; will contain a null-terminated string of length 9 or less. But if an I/O error occurs, &lt;code&gt;fgets()&lt;/code&gt; will not null-terminate &lt;code&gt;buf&lt;/code&gt;. Furthermore, if the end of the file is reached before any characters are read, &lt;code&gt;fgets()&lt;/code&gt; returns without writing anything to &lt;code&gt;buf&lt;/code&gt;. In both of these situations, &lt;code&gt;fgets()&lt;/code&gt; signals that something unusual has happened by returning &lt;code&gt;NULL&lt;/code&gt;, but in this code, the warning will not be noticed. The lack of a null terminator in &lt;code&gt;buf&lt;/code&gt; can result in a buffer overflow in the subsequent call to &lt;code&gt;strcpy()&lt;/code&gt;.&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;If a function can return an error code or any other evidence of its success or failure, always check for the error condition, even if there is no obvious way for it to occur. In addition to preventing security errors, many initially mysterious bugs have eventually led back to a failed system call with an ignored return value.

Create an easy to use and standard way for dealing with failure in your application. If error handling is straightforward, programmers will be less inclined to omit it. One approach to standardized error handling is to write wrappers around commonly-used functions that check and handle error conditions without additional programmer intervention. When wrappers are implemented and adopted, the use of non-wrapped equivalents can be prohibited and enforced by using custom rules.&lt;/Content&gt;</Recommendations>
  <Tips>
    <Tip>Watch out for programmers who want to explain away this type of issue by saying "that can never happen because ...".  Chances are good that they have developed their intuition about the way the system works by using their development workstation. If your software will eventually run under different operating systems, operating system versions, hardware configurations, or runtime environments, their intuition may not apply.</Tip>
  </Tips>
  <References>
    <Reference>
      <Title>A6 Information Leakage and Improper Error Handling</Title>
      <Author>Standards Mapping - OWASP Top 10 2007 - (OWASP 2007)</Author>
    </Reference>
    <Reference>
      <Title>A7 Improper Error Handling</Title>
      <Author>Standards Mapping - OWASP Top 10 2004 - (OWASP 2004)</Author>
    </Reference>
    <Reference>
      <Title>APP3120 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP3120 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>Building Secure Software</Title>
      <Author>J. Viega, G. McGraw</Author>
      <Publisher>Addison-Wesley</Publisher>
      <PublishedDate>2002</PublishedDate>
    </Reference>
    <Reference>
      <Title>CWE ID 252, CWE ID 754</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.3.1.2, Requirement 6.5.6</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 - (PCI 1.2)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.5</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 - (PCI 2.0)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.7</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 - (PCI 1.1)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 754</Title>
      <Author>Standards Mapping - SANS Top 25 2010 - (SANS 2010)</Author>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="0B138A51-FDDD-4FA6-A615-70B8C0EC87DA">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The function &lt;Replace key="EnclosingFunction.name"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; does not account for integer overflow, which can result in a logic error or a buffer overflow.&lt;AltParagraph&gt;Not accounting for integer overflow can result in logic errors or buffer overflow.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;Integer overflow errors occur when a program fails to account for the fact that an arithmetic operation can result in a quantity either greater than a data type's maximum value or less than its minimum value. These errors often cause problems in memory allocation functions, where user input intersects with an implicit conversion between signed and unsigned values. If an attacker can cause the program to under-allocate memory or interpret a signed value as an unsigned value in a memory operation, the program may be vulnerable to a buffer overflow.

&lt;b&gt;Example 1:&lt;/b&gt; The following code excerpt from OpenSSH 3.3 demonstrates a classic case of integer overflow:

&lt;pre&gt;
nresp = packet_get_int();
if (nresp &amp;gt; 0) {
 response = xmalloc(nresp*sizeof(char*));
 for (i = 0; i &amp;lt; nresp; i++)
  response[i] = packet_get_string(NULL);
}
&lt;/pre&gt;

If &lt;code&gt;nresp&lt;/code&gt; has the value &lt;code&gt;1073741824&lt;/code&gt; and &lt;code&gt;sizeof(char*)&lt;/code&gt; has its typical value of &lt;code&gt;4&lt;/code&gt;, then the result of the operation &lt;code&gt;nresp*sizeof(char*)&lt;/code&gt; overflows, and the argument to &lt;code&gt;xmalloc()&lt;/code&gt; will be &lt;code&gt;0&lt;/code&gt;. Most &lt;code&gt;malloc()&lt;/code&gt; implementations will happily allocate a 0-byte buffer, causing the subsequent loop iterations to overflow the heap buffer &lt;code&gt;response&lt;/code&gt;.

&lt;b&gt;Example 2:&lt;/b&gt; This example processes user input comprised of a series of variable-length structures. The first 2 bytes of input dictate the size of the structure to be processed.

&lt;pre&gt;
 char* processNext(char* strm) {
 char buf[512];
 short len = *(short*) strm;
 strm += sizeof(len);
 if (len &amp;lt;= 512) {
  memcpy(buf, strm, len);
  process(buf);
  return strm + len;
 } else {
  return -1;
 }
}
&lt;/pre&gt;

The programmer has set an upper bound on the structure size: if it is larger than &lt;code&gt;512&lt;/code&gt;, the input will not be processed. The problem is that &lt;code&gt;len&lt;/code&gt; is a signed integer, so the check against the maximum structure length is done with signed integers, but &lt;code&gt;len&lt;/code&gt; is converted to an unsigned integer for the call to &lt;code&gt;memcpy()&lt;/code&gt;. If &lt;code&gt;len&lt;/code&gt; is negative, then it will appear that the structure has an appropriate size (the &lt;code&gt;if&lt;/code&gt; branch will be taken), but the amount of memory copied by &lt;code&gt;memcpy()&lt;/code&gt; will be quite large, and the attacker will be able to overflow the stack with data in &lt;code&gt;strm&lt;/code&gt;.&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;There are no simple guidelines that allow you to avoid every integer overflow problem, but these recommendations will help prevent the most egregious cases:

- Pay attention to compiler warnings related to signed/unsigned conversions. Some programmers may believe that these warnings are innocuous, but they sometimes point out potential integer overflow problems.

- Be vigilant about checking reasonable upper and lower bounds for all program input. Even if the program should only be dealing with positive integers, check to be sure that the values you are processing are not less than zero. (You can eliminate the need for a lower bounds check by using unsigned data types.)

- Be conservative about the range of values you allow.

- Be cognizant of the implicit typecasting that takes place when you call functions, 
perform arithmetic operations or compare values of different types. 

&lt;b&gt;Example 3:&lt;/b&gt;  The code below implements a wrapper function designed to allocate memory for an array safely by performing an appropriate check on its arguments prior to making a call to &lt;code&gt;malloc()&lt;/code&gt;.

&lt;pre&gt;
void* arrmalloc(uint sz, uint nelem) {
	void *p;
	if(sz &amp;gt; 0 &amp;amp;&amp;amp; nelem &amp;gt;= UINT_MAX / sz)
		return 0;
	return malloc(sz * nelem);
}
&lt;/pre&gt;&lt;/Content&gt;</Recommendations>
  <Tips>
    <Tip>Consider whether or not the integer that might overflow has been derived from the length of a string. If it has, it is safe to assume that the string fits inside the process's address space, which puts an upper bound on the string's length. This fact alone does not make integer overflow impossible, but it does put additional constraints on the arithmetic that must be performed in order to cause an overflow.</Tip>
  </Tips>
  <References>
    <Reference>
      <Title>A1 Unvalidated Input</Title>
      <Author>Standards Mapping - OWASP Top 10 2004 - (OWASP 2004)</Author>
    </Reference>
    <Reference>
      <Title>APP3510 CAT I, APP3550 CAT I</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP3510 CAT I, APP3550 CAT I</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>Basic Integer Overflows</Title>
      <Author>blexim</Author>
      <Publisher>Phrack</Publisher>
      <Source>http://www.phrack.org/phrack/60/p60-0x0a.txt</Source>
    </Reference>
    <Reference>
      <Title>Coding Flaws That Lead to Security Failures</Title>
      <Author>D. Plakosh</Author>
      <Source>http://iasymposium.tamucc.edu/Plakosh_CodingFlaws.ppt</Source>
    </Reference>
    <Reference>
      <Title>CWE ID 190</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.3.1.1</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 - (PCI 1.2)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.1, Requirement 6.5.5</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 - (PCI 1.1)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.2</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 - (PCI 2.0)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 190</Title>
      <Author>Standards Mapping - SANS Top 25 2010 - (SANS 2010)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 190</Title>
      <Author>Standards Mapping - SANS Top 25 2011 - (SANS Top 25 2011)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 682</Title>
      <Author>Standards Mapping - SANS Top 25 2009 - (SANS 2009)</Author>
    </Reference>
    <Reference>
      <Title>SI</Title>
      <Author>Standards Mapping - FIPS200 - (FISMA)</Author>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The function &lt;Replace key="EnclosingFunction.name"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; writes outside the bounds of &lt;Replace key="Buffer.name"/&gt; on line &lt;Replace key="PrimaryLocation.line"/&gt;, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.&lt;AltParagraph&gt;The program writes outside the bounds of allocated memory, which could corrupt data, crash the program, or lead to the execution of malicious code.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;Buffer overflow is probably the best known form of software security vulnerability. Most software developers know what a buffer overflow vulnerability is, but buffer overflow attacks against both legacy and newly-developed applications are still quite common. Part of the problem is due to the wide variety of ways buffer overflows can occur, and part is due to the error-prone techniques often used to prevent them.

In a classic buffer overflow exploit, the attacker sends data to a program, which it stores in an undersized stack buffer. The result is that information on the call stack is overwritten, including the function's return pointer. The data sets the value of the return pointer so that when the function returns, it transfers control to malicious code contained in the attacker's data.

Although this type of stack buffer overflow is still common on some platforms and in some development communities, there are a variety of other types of buffer overflow, including heap buffer overflows and off-by-one errors among others. There are a number of excellent books that provide detailed information on how buffer overflow attacks work, including Building Secure Software [1], Writing Secure Code [2], and The Shellcoder's Handbook [3]. 

At the code level, buffer overflow vulnerabilities usually involve the violation of a programmer's assumptions. Many memory manipulation functions in C and C++ do not perform bounds checking and can easily overwrite the allocated bounds of the buffers they operate upon. Even bounded functions, such as &lt;code&gt;strncpy()&lt;/code&gt;, can cause vulnerabilities when used incorrectly. The combination of memory manipulation and mistaken assumptions about the size or makeup of a piece of data is the root cause of most buffer overflows.

Buffer overflow vulnerabilities typically occur in code that:

- Relies on external data to control its behavior.

- Depends upon properties of the data that are enforced outside of the immediate scope of the code.

- Is so complex that a programmer cannot accurately predict its behavior.

&lt;Paragraph&gt;
In this case we are primarily concerned with the second case, because we cannot verify the safety of the operation performed by &lt;Replace key="PrimaryCall.name" link="PrimaryLocation"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; at line &lt;Replace key="PrimaryLocation.line"/&gt;.
&lt;/Paragraph&gt;

The following examples demonstrate all three of the scenarios.

&lt;b&gt;Example 1:&lt;/b&gt; This is an example of the second scenario in which the code depends on properties of the data that are not verified locally. In this example a function named &lt;code&gt;lccopy()&lt;/code&gt; takes a string as its argument and returns a heap-allocated copy of the string with all uppercase letters converted to lowercase. The function performs no bounds checking on its input because it expects &lt;code&gt;str&lt;/code&gt; to always be smaller than &lt;code&gt;BUFSIZE&lt;/code&gt;. If an attacker bypasses checks in the code that calls &lt;code&gt;lccopy()&lt;/code&gt;, or if a change in that code makes the assumption about the size of &lt;code&gt;str&lt;/code&gt; untrue, then &lt;code&gt;lccopy()&lt;/code&gt; will overflow &lt;code&gt;buf&lt;/code&gt; with the unbounded call to &lt;code&gt;strcpy()&lt;/code&gt;.

&lt;pre&gt;
char *lccopy(const char *str) {
	char buf[BUFSIZE];
	char *p;

	strcpy(buf, str);
	for (p = buf; *p; p++) {
		if (isupper(*p)) {
			*p = tolower(*p);
		}
	}	
	return strdup(buf);
}
&lt;/pre&gt;

&lt;b&gt;Example 2.a:&lt;/b&gt; The following sample code demonstrates a simple buffer overflow that is often caused by the first scenario in which the code  relies on external data to control its behavior. The code uses the &lt;code&gt;gets()&lt;/code&gt; function to read an arbitrary amount of data into a stack buffer. Because there is no way to limit the amount of data read by this function, the safety of the code depends on the user to always enter fewer than &lt;code&gt;BUFSIZE&lt;/code&gt; characters.

&lt;pre&gt;
	...
	char buf[BUFSIZE]; 
	gets(buf);
	...
&lt;/pre&gt;

&lt;b&gt;Example 2.b:&lt;/b&gt; This example shows how easy it is to mimic the unsafe behavior of the &lt;code&gt;gets()&lt;/code&gt; function in C++ by using the &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; operator to read input into a &lt;code&gt;char[]&lt;/code&gt; string. 

&lt;pre&gt;
	...
	char buf[BUFSIZE]; 
	cin &amp;gt;&amp;gt; (buf);
	...
&lt;/pre&gt;

&lt;b&gt;Example 3:&lt;/b&gt; The code in this example also relies on user input to control its behavior, but it adds a level of indirection with the use of the bounded memory copy function &lt;code&gt;memcpy()&lt;/code&gt;. This function accepts a destination buffer, a source buffer, and the number of bytes to copy. The input buffer is filled by a bounded call to &lt;code&gt;read()&lt;/code&gt;, but the user specifies the number of bytes that &lt;code&gt;memcpy()&lt;/code&gt; copies.

&lt;pre&gt;
	...
char buf[64], in[MAX_SIZE];
printf("Enter buffer contents:\n");
read(0, in, MAX_SIZE-1);
printf("Bytes to copy:\n");
scanf("%d", &amp;amp;bytes);
memcpy(buf, in, bytes);
	... 
&lt;/pre&gt;

Note: This type of buffer overflow vulnerability (where a program reads data and then trusts a value from the data in subsequent memory operations on the remaining data) has turned up with some frequency in image, audio, and other file processing libraries. 

&lt;b&gt;Example 4:&lt;/b&gt; The following code demonstrates the third scenario in which the code is so complex its behavior cannot be easily predicted. This code is from the popular libPNG image decoder, which is used by a wide array of applications, including Mozilla and some versions of Internet Explorer. 

The code appears to safely perform bounds checking because it checks the size of the variable length, which it later uses to control the amount of data copied by &lt;code&gt;png_crc_read()&lt;/code&gt;. However, immediately before it tests length, the code performs a check on &lt;code&gt;png_ptr-&amp;gt;mode&lt;/code&gt;, and if this check fails a warning is issued and processing continues. Because &lt;code&gt;length&lt;/code&gt; is tested in an &lt;code&gt;else if&lt;/code&gt; block, &lt;code&gt;length&lt;/code&gt; would not be tested if the first check fails, and is used blindly in the call to &lt;code&gt;png_crc_read()&lt;/code&gt;, potentially allowing a stack buffer overflow. 

Although the code in this example is not the most complex we have seen, it demonstrates why complexity should be minimized in code that performs memory operations. 

&lt;pre&gt;
if (!(png_ptr-&amp;gt;mode &amp;amp; PNG_HAVE_PLTE)) {
	/* Should be an error, but we can cope with it */
png_warning(png_ptr, "Missing PLTE before tRNS");
}
else if (length &amp;gt; (png_uint_32)png_ptr-&amp;gt;num_palette) {
png_warning(png_ptr, "Incorrect tRNS chunk length");
png_crc_finish(png_ptr, length);
return;
}
...
png_crc_read(png_ptr, readbuf, (png_size_t)length);
&lt;/pre&gt;

&lt;b&gt;Example 5:&lt;/b&gt; This example also demonstrates the third scenario in which the program's complexity exposes it to buffer overflows. In this case, the exposure is due to the ambiguous interface of one of the functions rather than the structure of the code (as was the case in the previous example).

The &lt;code&gt;getUserInfo()&lt;/code&gt; function takes a username specified as a multibyte string and a pointer to a structure for user information, and populates the structure with information about the user. Since Windows authentication uses Unicode for usernames, the &lt;code&gt;username&lt;/code&gt; argument is first converted from a multibyte string to a Unicode string. This function then incorrectly passes the size of &lt;code&gt;unicodeUser&lt;/code&gt; in bytes rather than characters. The call to &lt;code&gt;MultiByteToWideChar()&lt;/code&gt; may therefore write up to &lt;code&gt;(UNLEN+1)*sizeof(WCHAR)&lt;/code&gt; wide characters, or
&lt;code&gt;(UNLEN+1)*sizeof(WCHAR)*sizeof(WCHAR)&lt;/code&gt; bytes, to the &lt;code&gt;unicodeUser&lt;/code&gt; array, which has only &lt;code&gt;(UNLEN+1)*sizeof(WCHAR)&lt;/code&gt; bytes allocated. If the &lt;code&gt;username&lt;/code&gt; string contains more than &lt;code&gt;UNLEN&lt;/code&gt; characters, the call to &lt;code&gt;MultiByteToWideChar()&lt;/code&gt; will overflow the buffer &lt;code&gt;unicodeUser&lt;/code&gt;. 

&lt;pre&gt;
void getUserInfo(char *username, struct _USER_INFO_2 info){
WCHAR unicodeUser[UNLEN+1];
	MultiByteToWideChar(CP_ACP, 0, username, -1,
    	      			unicodeUser, sizeof(unicodeUser));
NetUserGetInfo(NULL, unicodeUser, 2, (LPBYTE *)&amp;amp;info);
}
&lt;/pre&gt;&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;Never use inherently unsafe functions, such as &lt;code&gt;gets()&lt;/code&gt;, and avoid the use of functions that are difficult to use safely such as &lt;code&gt;strcpy()&lt;/code&gt;. Replace unbounded functions like &lt;code&gt;strcpy()&lt;/code&gt; with their bounded equivalents, such as &lt;code&gt;strncpy()&lt;/code&gt; or the WinAPI functions defined in &lt;code&gt;strsafe.h &lt;/code&gt;[4]. 

Although the careful use of bounded functions can greatly reduce the risk of buffer overflow, this migration cannot be done blindly and does not go far enough on its own to ensure security. Whenever you manipulate memory, especially strings, remember that buffer overflow vulnerabilities typically occur in code that:

- Relies on external data to control its behavior

- Depends upon properties of the data that are enforced outside of the immediate scope of the code

- Is so complex that a programmer cannot accurately predict its behavior.

Additionally, consider the following principles:

- Never trust an external source to provide correct control information to a memory operation. 

- Never trust that properties about the data your program is manipulating will be maintained throughout the program. Sanity check data before you operate on it.

- Limit the complexity of memory manipulation and bounds-checking code. Keep it simple and clearly document the checks you perform, the assumptions that you test, and what the expected behavior of the program is in the case that input validation fails.

- When input data is too large, be leery of truncating the data and continuing to process it. Truncation can change the meaning of the input.

- Do not rely on tools, such as StackGuard, or non-executable stacks to prevent buffer overflow vulnerabilities. These approaches do not address heap buffer overflows and the more subtle stack overflows that can change the contents of variables that control the program. Additionally, many of these approaches are easily defeated, and even when they are working properly, they address the symptom of the problem and not its cause.&lt;/Content&gt;</Recommendations>
  <Tips>
    <Tip>Replacing less secure functions like &lt;code&gt;memcpy()&lt;/code&gt; with their more secure versions, such as &lt;code&gt;memcpy_s()&lt;/code&gt;, still needs to be done with caution. Because parameter validation provided by the &lt;code&gt;_s&lt;/code&gt; family of functions varies, relying on it can lead to unexpected behavior. Furthermore, incorrectly specifying the size of the destination buffer can still result in buffer overflows.</Tip>
  </Tips>
  <References>
    <Reference>
      <Title>A5 Buffer Overflow</Title>
      <Author>Standards Mapping - OWASP Top 10 2004 - (OWASP 2004)</Author>
    </Reference>
    <Reference>
      <Title>APP3510 CAT I, APP3590.1 CAT I</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP3510 CAT I, APP3590.1 CAT I</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>Buffer Overflow</Title>
      <Author>Standards Mapping - Web Application Security Consortium 24 + 2 - (WASC 24 + 2)</Author>
    </Reference>
    <Reference>
      <Title>Building Secure Software</Title>
      <Author>J. Viega, G. McGraw</Author>
      <Publisher>Addison-Wesley</Publisher>
      <PublishedDate>2002</PublishedDate>
    </Reference>
    <Reference>
      <Title>CWE ID 787, CWE ID 120, CWE ID 129, CWE ID 131</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.3.1.1</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 - (PCI 1.2)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.2</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 - (PCI 2.0)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.5</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 - (PCI 1.1)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 119</Title>
      <Author>Standards Mapping - SANS Top 25 2009 - (SANS 2009)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 120, Risky Resource Management - CWE ID 129, Risky Resource Management - CWE ID 131</Title>
      <Author>Standards Mapping - SANS Top 25 2010 - (SANS 2010)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 120, Risky Resource Management - CWE ID 131</Title>
      <Author>Standards Mapping - SANS Top 25 2011 - (SANS Top 25 2011)</Author>
    </Reference>
    <Reference>
      <Title>The Shellcoder's Handbook: Discovering and Exploiting Security Holes</Title>
      <Author>J. Koziol et al.</Author>
      <Publisher>John Wiley &amp; Sons</Publisher>
      <PublishedDate>2004</PublishedDate>
    </Reference>
    <Reference>
      <Title>Writing Secure Code, Second Edition</Title>
      <Author>M. Howard, D. LeBlanc</Author>
      <Publisher>Microsoft Press</Publisher>
      <PublishedDate>2003</PublishedDate>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="7EF7E5CD-5511-49A5-B57E-87F33F2C6C82">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The function &lt;Replace key="EnclosingFunction.name"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; does not account for integer overflow, which can result in a logic error or a buffer overflow.&lt;AltParagraph&gt;Not accounting for integer overflow can result in logic errors or buffer overflow.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;Integer overflow errors occur when a program fails to account for the fact that an arithmetic operation can result in a quantity either greater than a data type's maximum value or less than its minimum value. These errors often cause problems in memory allocation functions, where user input intersects with an implicit conversion between signed and unsigned values. If an attacker can cause the program to under-allocate memory or interpret a signed value as an unsigned value in a memory operation, the program may be vulnerable to a buffer overflow.

&lt;b&gt;Example 1:&lt;/b&gt; The following code excerpt from OpenSSH 3.3 demonstrates a classic case of integer overflow:

&lt;pre&gt;
nresp = packet_get_int();
if (nresp &amp;gt; 0) {
 response = xmalloc(nresp*sizeof(char*));
 for (i = 0; i &amp;lt; nresp; i++)
  response[i] = packet_get_string(NULL);
}
&lt;/pre&gt;

If &lt;code&gt;nresp&lt;/code&gt; has the value &lt;code&gt;1073741824&lt;/code&gt; and &lt;code&gt;sizeof(char*)&lt;/code&gt; has its typical value of &lt;code&gt;4&lt;/code&gt;, then the result of the operation &lt;code&gt;nresp*sizeof(char*)&lt;/code&gt; overflows, and the argument to &lt;code&gt;xmalloc()&lt;/code&gt; will be &lt;code&gt;0&lt;/code&gt;. Most &lt;code&gt;malloc()&lt;/code&gt; implementations will happily allocate a 0-byte buffer, causing the subsequent loop iterations to overflow the heap buffer &lt;code&gt;response&lt;/code&gt;.

&lt;b&gt;Example 2:&lt;/b&gt; This example processes user input comprised of a series of variable-length structures. The first 2 bytes of input dictate the size of the structure to be processed.

&lt;pre&gt;
 char* processNext(char* strm) {
 char buf[512];
 short len = *(short*) strm;
 strm += sizeof(len);
 if (len &amp;lt;= 512) {
  memcpy(buf, strm, len);
  process(buf);
  return strm + len;
 } else {
  return -1;
 }
}
&lt;/pre&gt;

The programmer has set an upper bound on the structure size: if it is larger than &lt;code&gt;512&lt;/code&gt;, the input will not be processed. The problem is that &lt;code&gt;len&lt;/code&gt; is a signed integer, so the check against the maximum structure length is done with signed integers, but &lt;code&gt;len&lt;/code&gt; is converted to an unsigned integer for the call to &lt;code&gt;memcpy()&lt;/code&gt;. If &lt;code&gt;len&lt;/code&gt; is negative, then it will appear that the structure has an appropriate size (the &lt;code&gt;if&lt;/code&gt; branch will be taken), but the amount of memory copied by &lt;code&gt;memcpy()&lt;/code&gt; will be quite large, and the attacker will be able to overflow the stack with data in &lt;code&gt;strm&lt;/code&gt;.&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;There are no simple guidelines that allow you to avoid every integer overflow problem, but these recommendations will help prevent the most egregious cases:

- Pay attention to compiler warnings related to signed/unsigned conversions. Some programmers may believe that these warnings are innocuous, but they sometimes point out potential integer overflow problems.

- Be vigilant about checking reasonable upper and lower bounds for all program input. Even if the program should only be dealing with positive integers, check to be sure that the values you are processing are not less than zero. (You can eliminate the need for a lower bounds check by using unsigned data types.)

- Be conservative about the range of values you allow.

- Be cognizant of the implicit typecasting that takes place when you call functions, 
perform arithmetic operations or compare values of different types. 

&lt;b&gt;Example 3:&lt;/b&gt;  The code below implements a wrapper function designed to allocate memory for an array safely by performing an appropriate check on its arguments prior to making a call to &lt;code&gt;malloc()&lt;/code&gt;.

&lt;pre&gt;
void* arrmalloc(uint sz, uint nelem) {
	void *p;
	if(sz &amp;gt; 0 &amp;amp;&amp;amp; nelem &amp;gt;= UINT_MAX / sz)
		return 0;
	return malloc(sz * nelem);
}
&lt;/pre&gt;&lt;/Content&gt;</Recommendations>
  <Tips>
    <Tip>Consider whether or not the integer that might overflow has been derived from the length of a string. If it has, it is safe to assume that the string fits inside the process's address space, which puts an upper bound on the string's length. This fact alone does not make integer overflow impossible, but it does put additional constraints on the arithmetic that must be performed in order to cause an overflow.</Tip>
  </Tips>
  <References>
    <Reference>
      <Title>A1 Unvalidated Input</Title>
      <Author>Standards Mapping - OWASP Top 10 2004 - (OWASP 2004)</Author>
    </Reference>
    <Reference>
      <Title>APP3510 CAT I, APP3550 CAT I</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP3510 CAT I, APP3550 CAT I</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>Basic Integer Overflows</Title>
      <Author>blexim</Author>
      <Publisher>Phrack</Publisher>
      <Source>http://www.phrack.org/phrack/60/p60-0x0a.txt</Source>
    </Reference>
    <Reference>
      <Title>Coding Flaws That Lead to Security Failures</Title>
      <Author>D. Plakosh</Author>
      <Source>http://iasymposium.tamucc.edu/Plakosh_CodingFlaws.ppt</Source>
    </Reference>
    <Reference>
      <Title>CWE ID 190</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.3.1.1</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 - (PCI 1.2)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.1, Requirement 6.5.5</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 - (PCI 1.1)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.2</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 - (PCI 2.0)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 190</Title>
      <Author>Standards Mapping - SANS Top 25 2010 - (SANS 2010)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 190</Title>
      <Author>Standards Mapping - SANS Top 25 2011 - (SANS Top 25 2011)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 682</Title>
      <Author>Standards Mapping - SANS Top 25 2009 - (SANS 2009)</Author>
    </Reference>
    <Reference>
      <Title>SI</Title>
      <Author>Standards Mapping - FIPS200 - (FISMA)</Author>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="57B0CA93-7DF5-4452-9A00-08AC165BA412">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The window of time between the call to &lt;Replace key="FirstTransitionFunction"/&gt; and &lt;Replace key="PrimaryTransitionFunction"/&gt; can be exploited to launch a privilege escalation attack.&lt;AltParagraph&gt;The window of time between when a file property is checked and when the file is used can be exploited to launch a privilege escalation attack.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;File access race conditions, known as time-of-check, time-of-use (TOCTOU) race conditions, occur when:

1. The program checks a property of a file, referencing the file by name. 
&lt;Paragraph&gt;
In this case the check is performed at &lt;Replace key="FirstTransitionFunction" link="FirstTraceLocation"/&gt; in &lt;Replace key="FirstTraceLocation.file"/&gt; at line &lt;Replace key="FirstTraceLocation.line"/&gt;. 
&lt;/Paragraph&gt;
2. The program later performs a filesystem operation using the same filename and assumes that the previously-checked property still holds.
&lt;Paragraph&gt;
The file is then used at &lt;Replace key="PrimaryTransitionFunction" link="PrimaryLocation"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; at line &lt;Replace key="PrimaryLocation.line"/&gt;.
&lt;/Paragraph&gt;

&lt;b&gt;Example 1:&lt;/b&gt; The following code is from a program installed &lt;code&gt;setuid root&lt;/code&gt;. The program performs certain file operations on behalf of non-privileged users, and uses access checks to ensure that it does not use its root privileges to perform operations that should otherwise be unavailable the current user. The program uses the &lt;code&gt;access()&lt;/code&gt; system call to check if the person running the program has permission to access the specified file before it opens the file and performs the necessary operations. 

&lt;pre&gt;
  if (!access(file,W_OK)) {
    f = fopen(file,"w+");
    operate(f);
    ...
  }
  else {
    fprintf(stderr,"Unable to open file %s.\n",file);
  }
&lt;/pre&gt;

The call to &lt;code&gt;access()&lt;/code&gt; behaves as expected, and returns &lt;code&gt;0&lt;/code&gt; if the user running the program has the necessary permissions to write to the file, and -1 otherwise. However, because both &lt;code&gt;access()&lt;/code&gt; and &lt;code&gt;fopen()&lt;/code&gt; operate on filenames rather than on file handles, there is no guarantee that the &lt;code&gt;file&lt;/code&gt; variable still refers to the same file on disk when it is passed to &lt;code&gt;fopen()&lt;/code&gt; that it did when it was passed to &lt;code&gt;access()&lt;/code&gt;. If an attacker replaces &lt;code&gt;file&lt;/code&gt; after the call to &lt;code&gt;access()&lt;/code&gt; with a symbolic link to a different file, the program will use its root privileges to operate on the file even if it is a file that the attacker would otherwise be unable to modify. By tricking the program into performing an operation that would otherwise be impermissible, the attacker has gained elevated privileges. 

This type of vulnerability is not limited to programs with &lt;code&gt;root&lt;/code&gt; privileges. If the application is capable of performing any operation that the attacker would not otherwise be allowed perform, then it is a possible target.

The window of vulnerability for such an attack is the period of time between when the property is tested and when the file is used. Even if the use immediately follows the check, modern operating systems offer no guarantee about the amount of code that will be executed before the process yields the CPU. Attackers have a variety of techniques for expanding the length of the window of opportunity in order to make exploits easier, but even with a small window, an exploit attempt can simply be repeated over and over until it is successful.

&lt;b&gt;Example 2:&lt;/b&gt; The following code creates a file and then changes the owner of the file.

&lt;pre&gt;
    fd = creat(FILE, 0644);  /* Create file */
    if (fd == -1)
        return;
    if (chown(FILE, UID, -1) &amp;lt; 0) {  /* Change file owner */
      ...
    }
&lt;/pre&gt;

The code assumes that the file operated upon by the call to &lt;code&gt;chown()&lt;/code&gt; is the same as the file created by the call to &lt;code&gt;creat()&lt;/code&gt;, but that is not necessarily the case.  Because &lt;code&gt;chown()&lt;/code&gt; operates on a file name and not on a file handle, an attacker might be able to replace the file with a link to file the attacker does not own.  The call to &lt;code&gt;chown()&lt;/code&gt; would then give the attacker ownership of the linked file.&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;To prevent file access race conditions, you must ensure that a file cannot be replaced or modified once the program has begun a series of operations on it. Avoid functions that operate on filenames, since they are not guaranteed to refer to the same file on disk outside of the scope of a single function call. Open the file first and then use functions that operate on file handles rather than filenames. 

The most effective way to check file access permissions is to drop to the privilege of the current user and attempt to open the file with those reduced privileges. If the file open succeeds, additional access checks can be performed atomically using the resulting file handle. If the file open fails, then the user does not have access to the file and the operation should be aborted. By dropping to the user's privilege before attempting a series of file operations, the program cannot be easily tricked by changes to the underlying filesystem.&lt;/Content&gt;</Recommendations>
  <Tips>
    <Tip>Be careful, a race condition can still exist after the file is opened if later operations depend on a property that was checked before the file was opened. For example, if a stat structure is populated before a file is opened, and then a later decision about whether to operate on the file is based on a value read from the stat structure, the file could be modified prior to being opened, rendering the stat information stale. Always verify that file operations are performed on open file handles rather than filenames.</Tip>
  </Tips>
  <References>
    <Reference>
      <Title>APP3630.1 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP3630.1 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>Building Secure Software</Title>
      <Author>J. Viega, G. McGraw</Author>
      <Publisher>Addison-Wesley</Publisher>
      <PublishedDate>2002</PublishedDate>
    </Reference>
    <Reference>
      <Title>CWE ID 362, CWE ID 367</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>Insecure Interaction - CWE ID 362</Title>
      <Author>Standards Mapping - SANS Top 25 2009 - (SANS 2009)</Author>
    </Reference>
    <Reference>
      <Title>Insecure Interaction - CWE ID 362</Title>
      <Author>Standards Mapping - SANS Top 25 2010 - (SANS 2010)</Author>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="63E1A29D-E3D7-C1C6-040D-FA1808593DFA">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;Line &lt;Replace key="PrimaryLocation.line"/&gt;  in &lt;Replace key="PrimaryLocation.file"/&gt; will never be executed.  It is dead code.&lt;AltParagraph&gt;This statement will never be executed.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;The surrounding code makes it impossible for this statement to ever be executed.

&lt;b&gt;Example:&lt;/b&gt; The condition for the second &lt;code&gt;if&lt;/code&gt; statement is impossible to satisfy. It requires that the variable &lt;code&gt;s&lt;/code&gt; be non-null, while on the only path where &lt;code&gt;s&lt;/code&gt; can be assigned a non-null value there is a &lt;code&gt;return&lt;/code&gt; statement. 

&lt;pre&gt;
String s = null;

if (b) {
   s = "Yes";
   return;
}

if (s != null) {
   Dead();
}
&lt;/pre&gt;&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;In general, you should repair or remove unused code. It causes additional complexity and maintenance burden without contributing to the functionality of the program.&lt;/Content&gt;</Recommendations>
  <References>
    <Reference>
      <Title>APP3050 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP3050 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>CWE ID 561</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="6F195230-103C-42F3-930D-8ACA743407EE">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The call to &lt;Replace key="PrimaryCall.name"/&gt;  on line &lt;Replace key="PrimaryLocation.line"/&gt; causes portability problems because it has different semantics under different operating systems and operating system versions.&lt;AltParagraph&gt;Functions with inconsistent implementations across operating systems and operating system versions cause portability problems.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;The behavior of functions in this category varies by operating system, and at times, even by operating system version. Implementation differences can include:

- Slight differences in the way parameters are interpreted leading to inconsistent results.

- Some implementations of the function carry significant security risks.

- The function might not be defined on all platforms.
&lt;Paragraph&gt;
In this case the inconsistent function is &lt;Replace key="PrimaryCall.name" link="PrimaryLocation"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; at line &lt;Replace key="PrimaryLocation.line"/&gt;.
&lt;/Paragraph&gt;&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;In order to write portable code, avoid using functions with inconsistent implementations.

In some cases the problem with a function can be mitigated. For example, if you perform adequate input validation, you can guard against internal buffer overflows in calls to &lt;code&gt;getopt()&lt;/code&gt;. 

Usually, however, you cannot avoid problems when using certain functions.  Examples include:

- &lt;code&gt;vfork()&lt;/code&gt; implementations vary from platform to platform.

- &lt;code&gt;strcmpi()&lt;/code&gt; is not defined on some Unix systems.

- &lt;code&gt;memmem()&lt;/code&gt; is problematic due to changes between versions whereby the order of the arguments is reversed.

In general, replace calls to functions that are implemented inconsistently with safer counterparts.&lt;/Content&gt;</Recommendations>
  <References>
    <Reference>
      <Title>CWE ID 474</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="95414A7F-C5A3-4E3C-BC41-0630BDED9E36">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The function &lt;Replace key="EnclosingFunction.name"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; ignores the value returned by &lt;Replace key="PrimaryCall.name"/&gt; on line &lt;Replace key="PrimaryLocation.line"/&gt;, which might cause the program to overlook unexpected states and conditions.&lt;AltParagraph&gt;Ignoring a method's return value can cause the program to overlook unexpected states and conditions.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;Just about every serious attack on a software system begins with the violation of a programmer's assumptions. After the attack, the programmer's assumptions seem flimsy and poorly founded, but before an attack many programmers would defend their assumptions well past the end of their lunch break.

Two dubious assumptions that are easy to spot in code are "this function call can never fail" and "it doesn't matter if this function call fails". When a programmer ignores the return value from a function, they implicitly state that they are operating under one of these assumptions.
&lt;Paragraph&gt;
In this case, a return code goes unchecked in &lt;Replace key="PrimaryLocation.file"/&gt; at line &lt;Replace key="PrimaryLocation.line"/&gt;.
&lt;/Paragraph&gt;
&lt;b&gt;Example:&lt;/b&gt; Consider the following code:

&lt;pre&gt;
char buf[10], cp_buf[10];
fgets(buf, 10, stdin);
strcpy(cp_buf, buf);
&lt;/pre&gt;

The programmer expects that when &lt;code&gt;fgets()&lt;/code&gt; returns, &lt;code&gt;buf&lt;/code&gt; will contain a null-terminated string of length 9 or less. But if an I/O error occurs, &lt;code&gt;fgets()&lt;/code&gt; will not null-terminate &lt;code&gt;buf&lt;/code&gt;. Furthermore, if the end of the file is reached before any characters are read, &lt;code&gt;fgets()&lt;/code&gt; returns without writing anything to &lt;code&gt;buf&lt;/code&gt;. In both of these situations, &lt;code&gt;fgets()&lt;/code&gt; signals that something unusual has happened by returning &lt;code&gt;NULL&lt;/code&gt;, but in this code, the warning will not be noticed. The lack of a null terminator in &lt;code&gt;buf&lt;/code&gt; can result in a buffer overflow in the subsequent call to &lt;code&gt;strcpy()&lt;/code&gt;.&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;If a function can return an error code or any other evidence of its success or failure, always check for the error condition, even if there is no obvious way for it to occur. In addition to preventing security errors, many initially mysterious bugs have eventually led back to a failed system call with an ignored return value.

Create an easy to use and standard way for dealing with failure in your application. If error handling is straightforward, programmers will be less inclined to omit it. One approach to standardized error handling is to write wrappers around commonly-used functions that check and handle error conditions without additional programmer intervention. When wrappers are implemented and adopted, the use of non-wrapped equivalents can be prohibited and enforced by using custom rules.&lt;/Content&gt;</Recommendations>
  <Tips>
    <Tip>Watch out for programmers who want to explain away this type of issue by saying "that can never happen because ...".  Chances are good that they have developed their intuition about the way the system works by using their development workstation. If your software will eventually run under different operating systems, operating system versions, hardware configurations, or runtime environments, their intuition may not apply.</Tip>
  </Tips>
  <References>
    <Reference>
      <Title>A6 Information Leakage and Improper Error Handling</Title>
      <Author>Standards Mapping - OWASP Top 10 2007 - (OWASP 2007)</Author>
    </Reference>
    <Reference>
      <Title>A7 Improper Error Handling</Title>
      <Author>Standards Mapping - OWASP Top 10 2004 - (OWASP 2004)</Author>
    </Reference>
    <Reference>
      <Title>APP3120 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP3120 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>Building Secure Software</Title>
      <Author>J. Viega, G. McGraw</Author>
      <Publisher>Addison-Wesley</Publisher>
      <PublishedDate>2002</PublishedDate>
    </Reference>
    <Reference>
      <Title>CWE ID 252, CWE ID 754</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.3.1.2, Requirement 6.5.6</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 - (PCI 1.2)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.5</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 - (PCI 2.0)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.7</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 - (PCI 1.1)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 754</Title>
      <Author>Standards Mapping - SANS Top 25 2010 - (SANS 2010)</Author>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="BA40B07C-72BC-4732-B24C-9E9C7CFF1089">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The function &lt;Replace key="PrimaryCall.name"/&gt; cannot be used safely.  It should not be used.&lt;AltParagraph&gt;Functions that cannot be used safely should never be used.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;Certain functions behave in dangerous ways regardless of how they are used. Functions in this category were often implemented without taking security concerns into account.

&lt;Paragraph&gt;
In this case the dangerous function you are using is &lt;Replace key="PrimaryCall.name"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; at line &lt;Replace key="PrimaryLocation.line"/&gt;.
&lt;/Paragraph&gt;

The &lt;code&gt;strcpy()&lt;/code&gt; function is unsafe because it assumes that its input is null terminated and that there is sufficient memory allocated to accomodate the contents of the source buffer in the destination buffer. In practice, the conditions that must be met to use &lt;code&gt;strcpy()&lt;/code&gt; are often too difficult to meet, primarily because they are inherently distinct from the invocation of &lt;code&gt;strcpy&lt;/code&gt;.&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;Functions that cannot be used safely should never be used. If any of these functions occur in new or legacy code, they must be removed and replaced with safe counterparts.

Replace all calls to &lt;code&gt;strcpy()&lt;/code&gt; and similar functions with their bounded counterparts, such as &lt;code&gt;strncpy()&lt;/code&gt;. On Windows(R) platforms, consider using functions defined in &lt;code&gt;strsafe.h,&lt;/code&gt; such as &lt;code&gt;StringCbCopy()&lt;/code&gt;, which takes a buffer size in bytes, or &lt;code&gt;StringCchCopy()&lt;/code&gt;, which takes a buffer size in characters. On BSD Unix systems &lt;code&gt;strlcpy()&lt;/code&gt; can be used safely because it behaves the same as &lt;code&gt;strncpy()&lt;/code&gt; except that it always null terminates its destination buffer. On other systems, always replace instances of &lt;code&gt;strcpy(d, s)&lt;/code&gt; with &lt;code&gt;strncpy(d, s, SIZE_D)&lt;/code&gt; to check bounds properly and prevent &lt;code&gt;strncpy()&lt;/code&gt; from overflowing the destination buffer. For example, if &lt;code&gt;d&lt;/code&gt; is a stack-allocated buffer, then &lt;code&gt;SIZE_D&lt;/code&gt; can be calculated using &lt;code&gt;sizeof(d)&lt;/code&gt;.&lt;/Content&gt;</Recommendations>
  <Tips>
    <Tip>Replacing less secure functions like &lt;code&gt;strcpy()&lt;/code&gt; with their more secure versions, such as &lt;code&gt;strcpy_s()&lt;/code&gt;, still needs to be done with caution. Because parameter validation provided by the &lt;code&gt;_s&lt;/code&gt; family of functions varies, relying on it can lead to unexpected behavior. Furthermore, incorrectly specifying the size of the destination buffer can still result in buffer overflows and null termination errors.</Tip>
  </Tips>
  <References>
    <Reference>
      <Title>A5 Buffer Overflow</Title>
      <Author>Standards Mapping - OWASP Top 10 2004 - (OWASP 2004)</Author>
    </Reference>
    <Reference>
      <Title>APP2060.4 CAT II, APP3590.2 CAT I</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP2060.4 CAT II, APP3590.2 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>Buffer Overflow</Title>
      <Author>Standards Mapping - Web Application Security Consortium 24 + 2 - (WASC 24 + 2)</Author>
    </Reference>
    <Reference>
      <Title>CWE ID 242</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>CWE ID 676</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.3.1.1</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 - (PCI 1.2)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.2</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 - (PCI 2.0)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.5</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 - (PCI 1.1)</Author>
    </Reference>
    <Reference>
      <Title>Risky Resource Management - CWE ID 676</Title>
      <Author>Standards Mapping - SANS Top 25 2011 - (SANS Top 25 2011)</Author>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="FDE123D1-00F8-A0F5-E54C-B20080EE8025">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The function &lt;Replace key="EnclosingFunction.name"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; can crash the program by dereferencing a null pointer on line &lt;Replace key="PrimaryLocation.line"/&gt;.&lt;AltParagraph&gt;The program can potentially dereference a null pointer, thereby causing a segmentation fault.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;Null pointer exceptions usually occur when one or more of the programmer's assumptions is violated. A dereference-after-store error occurs when a program explicitly sets a pointer to null and dereferences it later. This error is often the result of a programmer initializing a variable to null when it is declared.

&lt;Paragraph&gt;
In this case the variable can be null when it is dereferenced at line &lt;Replace key="PrimaryLocation.line"/&gt;, thereby causing a null pointer exception. 
&lt;/Paragraph&gt;
Most null pointer issues result in general software reliability problems, but if an attacker can intentionally trigger a null pointer dereference, the attacker might be able to use the resulting exception to bypass security logic or to cause the application to reveal debugging information that will be valuable in planning subsequent attacks.
 
&lt;b&gt;Example:&lt;/b&gt; In the following code, the programmer explicitly sets the variable &lt;code&gt;ptr&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt;. Later, the programmer dereferences &lt;code&gt;ptr&lt;/code&gt; before checking the object for a null value.

&lt;pre&gt;
*ptr = NULL;
...
ptr-&amp;gt;field = val;
...
}
&lt;/pre&gt;&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;Implement careful checks before dereferencing objects that might be null. When possible, abstract null checks into wrappers around code that manipulates resources to ensure that they are applied in all cases and to minimize the places where mistakes can occur.&lt;/Content&gt;</Recommendations>
  <References>
    <Reference>
      <Title>A9 Application Denial of Service</Title>
      <Author>Standards Mapping - OWASP Top 10 2004 - (OWASP 2004)</Author>
    </Reference>
    <Reference>
      <Title>APP6080 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP6080 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>CWE ID 476</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.9</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 - (PCI 1.1)</Author>
    </Reference>
  </References>
</Description>
<Description contentType="preformatted" classID="BF90AB50-4D35-4249-A679-57C93827CC46">
  <Abstract>&lt;Content&gt;&lt;Paragraph&gt;The function &lt;Replace key="EnclosingFunction.name"/&gt; in &lt;Replace key="PrimaryLocation.file"/&gt; might reveal system data or debugging information by calling &lt;Replace key="PrimaryCall.name"/&gt; on line &lt;Replace key="PrimaryLocation.line"/&gt;.  The information revealed by &lt;Replace key="PrimaryCall.name"/&gt; could help an adversary form a plan of attack.&lt;AltParagraph&gt;Revealing system data or debugging information helps an adversary learn about the system and form a plan of attack.&lt;/AltParagraph&gt;&lt;/Paragraph&gt;&lt;/Content&gt;</Abstract>
  <Explanation>&lt;Content&gt;An information leak occurs when system data or debugging information leaves the program through an output stream or logging function.
&lt;Paragraph&gt;
In this case &lt;Replace key="PrimaryCall.name" link="PrimaryLocation"/&gt; is called in &lt;Replace key="PrimaryLocation.file"/&gt; at line &lt;Replace key="PrimaryLocation.line"/&gt;.
&lt;/Paragraph&gt;
&lt;b&gt;Example:&lt;/b&gt; The following code prints an error to the standard error stream:

&lt;pre&gt;
if (!fileInput.Open(PATH, CFile::modeRead, &amp;amp;ex)) {
      ex.ReportError();
}
else {
fileInput.Close();
}
&lt;/pre&gt;

Depending upon the system configuration, this information can be dumped to a console, written to a log file, or exposed to a remote user. In some cases the error message tells the attacker precisely what sort of an attack the system is vulnerable to. For example, a database error message can reveal that the application is vulnerable to a SQL injection attack. Other error messages can reveal more oblique clues about the system. In the example above, the search path could imply information about the type of operating system, the applications installed on the system, and the amount of care that the administrators have put into configuring the program.&lt;/Content&gt;</Explanation>
  <Recommendations>&lt;Content&gt;Write error messages with security in mind. In production environments, turn off detailed error information in favor of brief messages. Restrict the generation and storage of detailed output that can help administrators and programmers diagnose problems. Be careful, debugging traces can sometimes appear in non-obvious places (embedded in comments in the HTML for an error page, for example).
    
Even brief error messages that do not reveal stack traces or database dumps can potentially aid an attacker. For example, an "Access Denied" message can reveal that a file or user exists on the system.&lt;/Content&gt;</Recommendations>
  <Tips>
    <Tip>Do not rely on wrapper scripts, corporate IT policy, or quick-thinking system administrators to prevent system information leaks. Write software that is secure on its own.</Tip>
    <Tip>This category of vulnerability does not apply to all types of programs. For example, if your application executes on a client machine where system information is already available to an attacker, or if you print system information only to a trusted log file, you can use AuditGuide to filter out this category.</Tip>
  </Tips>
  <References>
    <Reference>
      <Title>A6 Information Leakage and Improper Error Handling</Title>
      <Author>Standards Mapping - OWASP Top 10 2007 - (OWASP 2007)</Author>
    </Reference>
    <Reference>
      <Title>APP3620 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3 - (STIG 3)</Author>
    </Reference>
    <Reference>
      <Title>APP3620 CAT II</Title>
      <Author>Standards Mapping - Security Technical Implementation Guide Version 3.4 - (STIG 3.4)</Author>
    </Reference>
    <Reference>
      <Title>CWE ID 497</Title>
      <Author>Standards Mapping - Common Weakness Enumeration - (CWE)</Author>
    </Reference>
    <Reference>
      <Title>Information Leakage</Title>
      <Author>Standards Mapping - Web Application Security Consortium 24 + 2 - (WASC 24 + 2)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.5</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 - (PCI 2.0)</Author>
    </Reference>
    <Reference>
      <Title>Requirement 6.5.6</Title>
      <Author>Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 - (PCI 1.2)</Author>
    </Reference>
  </References>
</Description>
<Snippets>
  <Snippet id="038DE4668DECB3FEE321CFA253254F5C#bits.c:190:190">
    <File>bits.c</File>
    <StartLine>187</StartLine>
    <EndLine>193</EndLine>
    <Text><![CDATA[
    if (header) {
        put_short((ush)len);   
        put_short((ush)~len);
#ifdef DEBUG
        bits_sent += 2*16;
#endif
]]></Text>
  </Snippet>
  <Snippet id="ADD47D4BB6F080770262F7282604E847#bits.c:203:203">
    <File>bits.c</File>
    <StartLine>200</StartLine>
    <EndLine>205</EndLine>
    <Text><![CDATA[        int t;
	if (key) zencode(*buf, t);
#endif
	put_byte(*buf++);
    }
}
]]></Text>
  </Snippet>
  <Snippet id="5A5A81EFEF3461B0B3298E24C1FFDFEF#deflate.c:281:281">
    <File>deflate.c</File>
    <StartLine>278</StartLine>
    <EndLine>284</EndLine>
    <Text><![CDATA[#define INSERT_STRING(s, match_head) \
   (UPDATE_HASH(ins_h, window[(s) + MIN_MATCH-1]), \
    prev[(s) & WMASK] = match_head = head[ins_h], \
    head[ins_h] = (s))

/* ===========================================================================
 * Initialize the "longest match" routines for a new file
]]></Text>
  </Snippet>
  <Snippet id="4658F7A61388762BE95A791E10EA79A3#deflate.c:292:292">
    <File>deflate.c</File>
    <StartLine>289</StartLine>
    <EndLine>295</EndLine>
    <Text><![CDATA[{
    register unsigned j;

    if (pack_level < 1 || pack_level > 9) error("bad pack level");
    compr_level = pack_level;

    /* Initialize the hash table. */
]]></Text>
  </Snippet>
  <Snippet id="E8777A1BC0045D0D660C3366F07DFEA5#deflate.c:361:361">
    <File>deflate.c</File>
    <StartLine>358</StartLine>
    <EndLine>364</EndLine>
    <Text><![CDATA[    IPos cur_match;                             /* current match */
{
    unsigned chain_length = max_chain_length;   /* max hash chain length */
    register uch *scan = window + strstart;     /* current string */
    register uch *match;                        /* matched string */
    register int len;                           /* length of current match */
    int best_len = prev_length;                 /* best match length so far */
]]></Text>
  </Snippet>
  <Snippet id="3091A88C3383C5CCC87CB8D75B6EA890#deflate.c:448:448">
    <File>deflate.c</File>
    <StartLine>445</StartLine>
    <EndLine>451</EndLine>
    <Text><![CDATA[         * are always equal when the other bytes match, given that
         * the hash keys are equal and that HASH_BITS >= 8.
         */
        scan += 2, match++;

        /* We check for insufficient lookahead only every 8th comparison;
         * the 256th check will be made at strstart+258.
]]></Text>
  </Snippet>
  <Snippet id="784682FF6A79276FFCA51471B92BF47B#deflate.c:454:454">
    <File>deflate.c</File>
    <StartLine>451</StartLine>
    <EndLine>457</EndLine>
    <Text><![CDATA[         * the 256th check will be made at strstart+258.
         */
        do {
        } while (*++scan == *++match && *++scan == *++match &&
                 *++scan == *++match && *++scan == *++match &&
                 *++scan == *++match && *++scan == *++match &&
                 *++scan == *++match && *++scan == *++match &&
]]></Text>
  </Snippet>
  <Snippet id="9D26A63295BA4069A47810489D234F6D#deflate.c:460:460">
    <File>deflate.c</File>
    <StartLine>457</StartLine>
    <EndLine>463</EndLine>
    <Text><![CDATA[                 *++scan == *++match && *++scan == *++match &&
                 scan < strend);

        len = MAX_MATCH - (int)(strend - scan);
        scan = strend - MAX_MATCH;

#endif /* UNALIGNED_OK */
]]></Text>
  </Snippet>
  <Snippet id="A6445E61A2D5FB461FE24B06C53B8165#deflate.c:466:466">
    <File>deflate.c</File>
    <StartLine>463</StartLine>
    <EndLine>469</EndLine>
    <Text><![CDATA[#endif /* UNALIGNED_OK */

        if (len > best_len) {
            match_start = cur_match;
            best_len = len;
            if (len >= nice_match) break;
#ifdef UNALIGNED_OK
]]></Text>
  </Snippet>
  <Snippet id="549B93605D81748E346715A795C6121C#deflate.c:467:467">
    <File>deflate.c</File>
    <StartLine>464</StartLine>
    <EndLine>470</EndLine>
    <Text><![CDATA[
        if (len > best_len) {
            match_start = cur_match;
            best_len = len;
            if (len >= nice_match) break;
#ifdef UNALIGNED_OK
            scan_end = *(ush*)(scan+best_len-1);
]]></Text>
  </Snippet>
  <Snippet id="3289865A3A876EE7569619A7DB4594FC#deflate.c:476:476">
    <File>deflate.c</File>
    <StartLine>473</StartLine>
    <EndLine>479</EndLine>
    <Text><![CDATA[            scan_end   = scan[best_len];
#endif
        }
    } while ((cur_match = prev[cur_match & WMASK]) > limit
	     && --chain_length != 0);

    return best_len;
]]></Text>
  </Snippet>
  <Snippet id="6D1E8016F88963074C95522D41F4D8E4#deflate.c:479:479">
    <File>deflate.c</File>
    <StartLine>476</StartLine>
    <EndLine>482</EndLine>
    <Text><![CDATA[    } while ((cur_match = prev[cur_match & WMASK]) > limit
	     && --chain_length != 0);

    return best_len;
}
#endif /* ASMV */

]]></Text>
  </Snippet>
  <Snippet id="3943A5BA3A752B8091E7161F2985CDD4#deflate.c:557:557">
    <File>deflate.c</File>
    <StartLine>554</StartLine>
    <EndLine>560</EndLine>
    <Text><![CDATA[    }
    /* At this point, more >= 2 */
    if (!eofile) {
        n = read_buf((char*)window+strstart+lookahead, more);
        if (n == 0 || n == (unsigned)EOF) {
            eofile = 1;
        } else {
]]></Text>
  </Snippet>
  <Snippet id="DA11576AA227DAA0BACFFE4D02B328D6#deflate.c:571:571">
    <File>deflate.c</File>
    <StartLine>568</StartLine>
    <EndLine>574</EndLine>
    <Text><![CDATA[ * IN assertion: strstart is set to the end of the current match.
 */
#define FLUSH_BLOCK(eof) \
   flush_block(block_start >= 0L ? (char*)&window[(unsigned)block_start] : \
                (char*)NULL, (long)strstart - block_start, (eof))

/* ===========================================================================
]]></Text>
  </Snippet>
  <Snippet id="8D117EE7ED2CE4CF35DBA68483A7F03C#deflate.c:591:591">
    <File>deflate.c</File>
    <StartLine>588</StartLine>
    <EndLine>594</EndLine>
    <Text><![CDATA[        /* Insert the string window[strstart .. strstart+2] in the
         * dictionary, and set hash_head to the head of the hash chain:
         */
        INSERT_STRING(strstart, hash_head);

        /* Find the longest match, discarding those <= prev_length.
         * At this point we have always match_length < MIN_MATCH
]]></Text>
  </Snippet>
  <Snippet id="D0C06D30584F04189F8CA845A88AB344#deflate.c:601:601">
    <File>deflate.c</File>
    <StartLine>598</StartLine>
    <EndLine>604</EndLine>
    <Text><![CDATA[             * of window index 0 (in particular we have to avoid a match
             * of the string with itself at the start of the input file).
             */
            match_length = longest_match (hash_head);
            /* longest_match() sets match_start */
            if (match_length > lookahead) match_length = lookahead;
        }
]]></Text>
  </Snippet>
  <Snippet id="134FACB005E8C0B26C52D2114A3641A1#deflate.c:608:608">
    <File>deflate.c</File>
    <StartLine>605</StartLine>
    <EndLine>611</EndLine>
    <Text><![CDATA[        if (match_length >= MIN_MATCH) {
            check_match(strstart, match_start, match_length);

            flush = ct_tally(strstart-match_start, match_length - MIN_MATCH);

            lookahead -= match_length;

]]></Text>
  </Snippet>
  <Snippet id="D2BCF56080A6620C82E000E2868863FA#deflate.c:628:628">
    <File>deflate.c</File>
    <StartLine>625</StartLine>
    <EndLine>631</EndLine>
    <Text><![CDATA[                } while (--match_length != 0);
	        strstart++; 
            } else {
	        strstart += match_length;
	        match_length = 0;
	        ins_h = window[strstart];
	        UPDATE_HASH(ins_h, window[strstart+1]);
]]></Text>
  </Snippet>
  <Snippet id="3FD43B8A8CD84E28EA983D1D11C86F5D#deflate.c:639:639">
    <File>deflate.c</File>
    <StartLine>636</StartLine>
    <EndLine>642</EndLine>
    <Text><![CDATA[        } else {
            /* No match, output a literal byte */
            Tracevv((stderr,"%c",window[strstart]));
            flush = ct_tally (0, window[strstart]);
            lookahead--;
	    strstart++; 
        }
]]></Text>
  </Snippet>
  <Snippet id="199F314BE320250F2ADE26F29BDE2BCA#deflate.c:643:643">
    <File>deflate.c</File>
    <StartLine>640</StartLine>
    <EndLine>646</EndLine>
    <Text><![CDATA[            lookahead--;
	    strstart++; 
        }
        if (flush) FLUSH_BLOCK(0), block_start = strstart;

        /* Make sure that we always have enough lookahead, except
         * at the end of the input file. We need MAX_MATCH bytes
]]></Text>
  </Snippet>
  <Snippet id="CAB4D4864666BC1210F59BF833D3C8F8#deflate.c:692:692">
    <File>deflate.c</File>
    <StartLine>689</StartLine>
    <EndLine>695</EndLine>
    <Text><![CDATA[             * of window index 0 (in particular we have to avoid a match
             * of the string with itself at the start of the input file).
             */
            match_length = longest_match (hash_head);
            /* longest_match() sets match_start */
            if (match_length > lookahead) match_length = lookahead;

]]></Text>
  </Snippet>
  <Snippet id="3E4A7C9713847B537A898F19CD02D6E7#deflate.c:707:707">
    <File>deflate.c</File>
    <StartLine>704</StartLine>
    <EndLine>710</EndLine>
    <Text><![CDATA[        /* If there was a match at the previous step and the current
         * match is not better, output the previous match:
         */
        if (prev_length >= MIN_MATCH && match_length <= prev_length) {

            check_match(strstart-1, prev_match, prev_length);

]]></Text>
  </Snippet>
  <Snippet id="0F1D28E44B0024E32FDC04E3681ED0AB#deflate.c:711:711">
    <File>deflate.c</File>
    <StartLine>708</StartLine>
    <EndLine>714</EndLine>
    <Text><![CDATA[
            check_match(strstart-1, prev_match, prev_length);

            flush = ct_tally(strstart-1-prev_match, prev_length - MIN_MATCH);

            /* Insert in hash table all strings up to the end of the match.
             * strstart-1 and strstart are already inserted.
]]></Text>
  </Snippet>
  <Snippet id="6B1F5119B5F077F6759D3766FE085E92#gzip.c:233:233">
    <File>gzip.c</File>
    <StartLine>230</StartLine>
    <EndLine>236</EndLine>
    <Text><![CDATA[long bytes_out;            /* number of output bytes */
long total_in = 0;         /* input bytes for all files */
long total_out = 0;        /* output bytes for all files */
char ifname[MAX_PATH_LEN]; /* input file name */
char ofname[MAX_PATH_LEN]; /* output file name */
int  remove_ofname = 0;	   /* remove output file on error */
struct stat istat;         /* status for input file */
]]></Text>
  </Snippet>
  <Snippet id="072054F20D9EE7EB49E38EF017734B3E#gzip.c:234:234">
    <File>gzip.c</File>
    <StartLine>231</StartLine>
    <EndLine>237</EndLine>
    <Text><![CDATA[long total_in = 0;         /* input bytes for all files */
long total_out = 0;        /* output bytes for all files */
char ifname[MAX_PATH_LEN]; /* input file name */
char ofname[MAX_PATH_LEN]; /* output file name */
int  remove_ofname = 0;	   /* remove output file on error */
struct stat istat;         /* status for input file */
int  ifd;                  /* input file descriptor */
]]></Text>
  </Snippet>
  <Snippet id="CEB6188EE24D2D3B5F34D7F787E6AD49#gzip.c:425:425">
    <File>gzip.c</File>
    <StartLine>422</StartLine>
    <EndLine>428</EndLine>
    <Text><![CDATA[
/* ======================================================================== */
int main (argc, argv)
    int argc;
    char **argv;
{
    int file_count;     /* number of files to precess */
]]></Text>
  </Snippet>
  <Snippet id="092496749C5E81624F99E7B750A5F2B0#gzip.c:426:426">
    <File>gzip.c</File>
    <StartLine>423</StartLine>
    <EndLine>429</EndLine>
    <Text><![CDATA[/* ======================================================================== */
int main (argc, argv)
    int argc;
    char **argv;
{
    int file_count;     /* number of files to precess */
    int proglen;        /* length of progname */
]]></Text>
  </Snippet>
  <Snippet id="F5B9753E56701001E0EDFDFC25DE116C#gzip.c:434:434">
    <File>gzip.c</File>
    <StartLine>431</StartLine>
    <EndLine>437</EndLine>
    <Text><![CDATA[
    EXPAND(argc, argv); /* wild card expansion if necessary */

    progname = basename(argv[0]);
    proglen = strlen(progname);

    /* Suppress .exe for MSDOS, OS/2 and VMS: */
]]></Text>
  </Snippet>
  <Snippet id="AAFE23A360626EAC7352D8AF6DC183E3#gzip.c:435:435">
    <File>gzip.c</File>
    <StartLine>432</StartLine>
    <EndLine>438</EndLine>
    <Text><![CDATA[    EXPAND(argc, argv); /* wild card expansion if necessary */

    progname = basename(argv[0]);
    proglen = strlen(progname);

    /* Suppress .exe for MSDOS, OS/2 and VMS: */
    if (proglen > 4 && strequ(progname+proglen-4, ".exe")) {
]]></Text>
  </Snippet>
  <Snippet id="2FF56C923CFF343594188799CCB53097#gzip.c:439:439">
    <File>gzip.c</File>
    <StartLine>436</StartLine>
    <EndLine>442</EndLine>
    <Text><![CDATA[
    /* Suppress .exe for MSDOS, OS/2 and VMS: */
    if (proglen > 4 && strequ(progname+proglen-4, ".exe")) {
        progname[proglen-4] = '\0';
    }

    /* Add options in GZIP environment variable if there is one */
]]></Text>
  </Snippet>
  <Snippet id="0F9AA80AA8BFDB9E7F2978134A238101#gzip.c:443:443">
    <File>gzip.c</File>
    <StartLine>440</StartLine>
    <EndLine>446</EndLine>
    <Text><![CDATA[    }

    /* Add options in GZIP environment variable if there is one */
    env = add_envopt(&argc, &argv, OPTIONS_VAR);
    if (env != NULL) args = argv;

    foreground = signal(SIGINT, SIG_IGN) != SIG_IGN;
]]></Text>
  </Snippet>
  <Snippet id="57AC8ABA1B19EE8DB7E2BD73C7B56DF4#gzip.c:481:481">
    <File>gzip.c</File>
    <StartLine>478</StartLine>
    <EndLine>484</EndLine>
    <Text><![CDATA[    strncpy(z_suffix, Z_SUFFIX, sizeof(z_suffix)-1);
    z_len = strlen(z_suffix);

    while ((optc = getopt_long (argc, argv, "ab:cdfhH?lLmMnNqrS:tvVZ123456789",
				longopts, (int *)0)) != EOF) {
	switch (optc) {
        case 'a':
]]></Text>
  </Snippet>
  <Snippet id="8802296934244C73C60978468E21BAED#gzip.c:524:524">
    <File>gzip.c</File>
    <StartLine>521</StartLine>
    <EndLine>527</EndLine>
    <Text><![CDATA[            if (*optarg == '.') optarg++;
#endif
            z_len = strlen(optarg);
            strcpy(z_suffix, optarg);
            break;
	case 't':
	    test = decompress = to_stdout = 1;
]]></Text>
  </Snippet>
  <Snippet id="2D7834BB154CFFD592413AEFA5F4514E#gzip.c:593:593">
    <File>gzip.c</File>
    <StartLine>590</StartLine>
    <EndLine>596</EndLine>
    <Text><![CDATA[	    SET_BINARY_MODE(fileno(stdout));
	}
        while (optind < argc) {
	    treat_file(argv[optind++]);
	}
    } else {  /* Standard input */
	treat_stdin();
]]></Text>
  </Snippet>
  <Snippet id="844D23FE05E207CF0C7A21DBE09A7CBC#gzip.c:638:638">
    <File>gzip.c</File>
    <StartLine>635</StartLine>
    <EndLine>641</EndLine>
    <Text><![CDATA[    if (!test && !list && (!decompress || !ascii)) {
	SET_BINARY_MODE(fileno(stdout));
    }
    strcpy(ifname, "stdin");
    strcpy(ofname, "stdout");

    /* Get the time stamp on the input file. */
]]></Text>
  </Snippet>
  <Snippet id="28CF27E41B8C1FE6C0893D73701ACA76#gzip.c:639:639">
    <File>gzip.c</File>
    <StartLine>636</StartLine>
    <EndLine>642</EndLine>
    <Text><![CDATA[	SET_BINARY_MODE(fileno(stdout));
    }
    strcpy(ifname, "stdin");
    strcpy(ofname, "stdout");

    /* Get the time stamp on the input file. */
    time_stamp = 0; /* time unknown by default */
]]></Text>
  </Snippet>
  <Snippet id="A3C5D08FB2E7018B95E8D4936F743940#gzip.c:647:647">
    <File>gzip.c</File>
    <StartLine>644</StartLine>
    <EndLine>650</EndLine>
    <Text><![CDATA[#ifndef NO_STDIN_FSTAT
    if (list || !no_time) {
	if (fstat(fileno(stdin), &istat) != 0) {
	    error("fstat(stdin)");
	}
# ifdef NO_PIPE_TIMESTAMP
	if (S_ISREG(istat.st_mode))
]]></Text>
  </Snippet>
  <Snippet id="72AED47F20AED93914A18B0FBD34DDDB#gzip.c:716:716">
    <File>gzip.c</File>
    <StartLine>713</StartLine>
    <EndLine>719</EndLine>
    <Text><![CDATA[    }

    /* Check if the input file is present, set ifname and istat: */
    if (get_istat(iname, &istat) != OK) return;

    /* If the input name is that of a directory, recurse or ignore: */
    if (S_ISDIR(istat.st_mode)) {
]]></Text>
  </Snippet>
  <Snippet id="17023C09FE0883203FD7EE5E0191C600#gzip.c:754:754">
    <File>gzip.c</File>
    <StartLine>751</StartLine>
    <EndLine>757</EndLine>
    <Text><![CDATA[     * without a valid gzip suffix (check done in make_ofname).
     */
    if (to_stdout && !list && !test) {
	strcpy(ofname, "stdout");

    } else if (make_ofname() != OK) {
	return;
]]></Text>
  </Snippet>
  <Snippet id="BEF0E8C8F816586373615C5A4766848E#gzip.c:764:764">
    <File>gzip.c</File>
    <StartLine>761</StartLine>
    <EndLine>767</EndLine>
    <Text><![CDATA[     * parameter is ignored but required by some systems (VMS) and forbidden
     * on other systems (MacOS).
     */
    ifd = OPEN(ifname, ascii && !decompress ? O_RDONLY : O_RDONLY | O_BINARY,
	       RW_USER);
    if (ifd == -1) {
	fprintf(stderr, "%s: ", progname);
]]></Text>
  </Snippet>
  <Snippet id="6F4AD3B4A46273FC804D75B473F361D1#gzip.c:831:831">
    <File>gzip.c</File>
    <StartLine>828</StartLine>
    <EndLine>834</EndLine>
    <Text><![CDATA[	write_error();
    }
    if (method == -1) {
	if (!to_stdout) unlink (ofname);
	return;
    }
    /* Display statistics */
]]></Text>
  </Snippet>
  <Snippet id="11B57864FD904084BC97AFD205F187F0#gzip.c:873:873">
    <File>gzip.c</File>
    <StartLine>870</StartLine>
    <EndLine>876</EndLine>
    <Text><![CDATA[    }
    for (;;) {
	/* Make sure that ofname is not an existing file */
	if (check_ofname() != OK) {
	    close(ifd);
	    return ERROR;
	}
]]></Text>
  </Snippet>
  <Snippet id="894C70D7C77B08CC116170E3C7EEB406#gzip.c:879:879">
    <File>gzip.c</File>
    <StartLine>876</StartLine>
    <EndLine>882</EndLine>
    <Text><![CDATA[	}
	/* Create the output file */
	remove_ofname = 1;
	ofd = OPEN(ofname, flags, RW_USER);
	if (ofd == -1) {
	    perror(ofname);
	    close(ifd);
]]></Text>
  </Snippet>
  <Snippet id="02D45B494B6C7E1DBFBDC54C3072CDCE#gzip.c:880:880">
    <File>gzip.c</File>
    <StartLine>877</StartLine>
    <EndLine>883</EndLine>
    <Text><![CDATA[	/* Create the output file */
	remove_ofname = 1;
	ofd = OPEN(ofname, flags, RW_USER);
	if (ofd == -1) {
	    perror(ofname);
	    close(ifd);
	    exit_code = ERROR;
]]></Text>
  </Snippet>
  <Snippet id="267FD560746EB7EE4AB5FFFC3EE2861A#gzip.c:891:891">
    <File>gzip.c</File>
    <StartLine>888</StartLine>
    <EndLine>894</EndLine>
    <Text><![CDATA[#ifdef NO_FSTAT
	if (stat(ofname, &ostat) != 0) {
#else
	if (fstat(ofd, &ostat) != 0) {
#endif
	    fprintf(stderr, "%s: ", progname);
	    perror(ofname);
]]></Text>
  </Snippet>
  <Snippet id="973DD5AF75F3C035956F73D841336B41#gzip.c:896:896">
    <File>gzip.c</File>
    <StartLine>893</StartLine>
    <EndLine>899</EndLine>
    <Text><![CDATA[	    fprintf(stderr, "%s: ", progname);
	    perror(ofname);
	    close(ifd); close(ofd);
	    unlink(ofname);
	    exit_code = ERROR;
	    return ERROR;
	}
]]></Text>
  </Snippet>
  <Snippet id="D5EA78DA824D537020EDF3D847A6B4B0#gzip.c:900:900">
    <File>gzip.c</File>
    <StartLine>897</StartLine>
    <EndLine>903</EndLine>
    <Text><![CDATA[	    exit_code = ERROR;
	    return ERROR;
	}
	if (!name_too_long(ofname, &ostat)) return OK;

	if (decompress) {
	    /* name might be too long if an original name was saved */
]]></Text>
  </Snippet>
  <Snippet id="4982B62717342E34E245D7EC067BC105#gzip.c:902:902">
    <File>gzip.c</File>
    <StartLine>899</StartLine>
    <EndLine>905</EndLine>
    <Text><![CDATA[	}
	if (!name_too_long(ofname, &ostat)) return OK;

	if (decompress) {
	    /* name might be too long if an original name was saved */
	    WARN((stderr, "%s: %s: warning, name truncated\n",
		  progname, ofname));
]]></Text>
  </Snippet>
  <Snippet id="E6D0C2D5F3B582226B61BEA002C296C2#gzip.c:909:909">
    <File>gzip.c</File>
    <StartLine>906</StartLine>
    <EndLine>912</EndLine>
    <Text><![CDATA[	    return OK;
	}
	close(ofd);
	unlink(ofname);
#ifdef NO_MULTIPLE_DOTS
	/* Should never happen, see check_ofname() */
	fprintf(stderr, "%s: %s: name too long\n", progname, ofname);
]]></Text>
  </Snippet>
  <Snippet id="36B66DA266349BC4812785506887DE58#gzip.c:915:915">
    <File>gzip.c</File>
    <StartLine>912</StartLine>
    <EndLine>918</EndLine>
    <Text><![CDATA[	fprintf(stderr, "%s: %s: name too long\n", progname, ofname);
	do_exit(ERROR);
#endif
	shorten_name(ofname);
    }
}

]]></Text>
  </Snippet>
  <Snippet id="22207A1EE9684CD0CCCBF31BAF3FBDDA#gzip.c:952:952">
    <File>gzip.c</File>
    <StartLine>949</StartLine>
    <EndLine>955</EndLine>
    <Text><![CDATA[    char *name;
{
    int nlen, slen;
    char suffix[MAX_SUFFIX+3]; /* last chars of name, forced to lower case */
    static char *known_suffixes[] =
       {z_suffix, ".gz", ".z", ".taz", ".tgz", "-gz", "-z", "_z",
#ifdef MAX_EXT_CHARS
]]></Text>
  </Snippet>
  <Snippet id="747045B6A0976906FBDC8403725F5533#gzip.c:972:972">
    <File>gzip.c</File>
    <StartLine>969</StartLine>
    <EndLine>975</EndLine>
    <Text><![CDATA[#endif
    nlen = strlen(name);
    if (nlen <= MAX_SUFFIX+2) {
        strcpy(suffix, name);
    } else {
        strcpy(suffix, name+nlen-MAX_SUFFIX-2);
    }
]]></Text>
  </Snippet>
  <Snippet id="73C2EE4425709A2505352A239DE91BEF#gzip.c:974:974">
    <File>gzip.c</File>
    <StartLine>971</StartLine>
    <EndLine>977</EndLine>
    <Text><![CDATA[    if (nlen <= MAX_SUFFIX+2) {
        strcpy(suffix, name);
    } else {
        strcpy(suffix, name+nlen-MAX_SUFFIX-2);
    }
    strlwr(suffix);
    slen = strlen(suffix);
]]></Text>
  </Snippet>
  <Snippet id="247D202A9301FBF404E24BC02F6D4CB9#gzip.c:1009:1009">
    <File>gzip.c</File>
    <StartLine>1006</StartLine>
    <EndLine>1012</EndLine>
    <Text><![CDATA[    char *dot; /* pointer to ifname extension, or NULL */
#endif

    strcpy(ifname, iname);

    /* If input file exists, return OK. */
    if (do_stat(ifname, sbuf) == 0) return OK;
]]></Text>
  </Snippet>
  <Snippet id="A8845BD04C9E6718519C37EA30E2BE1D#gzip.c:1022:1022">
    <File>gzip.c</File>
    <StartLine>1019</StartLine>
    <EndLine>1025</EndLine>
    <Text><![CDATA[    /* file.ext doesn't exist, try adding a suffix (after removing any
     * version number for VMS).
     */
    s = get_suffix(ifname);
    if (s != NULL) {
	perror(ifname); /* ifname already has z suffix and does not exist */
	exit_code = ERROR;
]]></Text>
  </Snippet>
  <Snippet id="1DAE8A263829185A0BCCBCEC64EFFAE8#gzip.c:1035:1035">
    <File>gzip.c</File>
    <StartLine>1032</StartLine>
    <EndLine>1038</EndLine>
    <Text><![CDATA[        dot = strrchr(ifname, '.');
    }
#endif
    ilen = strlen(ifname);
    if (strequ(z_suffix, ".gz")) suf++;

    /* Search for all suffixes */
]]></Text>
  </Snippet>
  <Snippet id="FDE557C2800213AB8496AA4528BB7300#gzip.c:1051:1051">
    <File>gzip.c</File>
    <StartLine>1048</StartLine>
    <EndLine>1054</EndLine>
    <Text><![CDATA[        if (*dot == '\0') strcpy(dot, ".");
        dot[MAX_EXT_CHARS+1-strlen(s)] = '\0';
#endif
        strcat(ifname, s);
        if (do_stat(ifname, sbuf) == 0) return OK;
	ifname[ilen] = '\0';
    } while (*++suf != NULL);
]]></Text>
  </Snippet>
  <Snippet id="22E4E8FB53A467308BAE4FDF9025E460#gzip.c:1053:1053">
    <File>gzip.c</File>
    <StartLine>1050</StartLine>
    <EndLine>1056</EndLine>
    <Text><![CDATA[#endif
        strcat(ifname, s);
        if (do_stat(ifname, sbuf) == 0) return OK;
	ifname[ilen] = '\0';
    } while (*++suf != NULL);

    /* No suffix found, complain using z_suffix: */
]]></Text>
  </Snippet>
  <Snippet id="25BE63DC01FFB65106B5759C33E9B6ED#gzip.c:1062:1062">
    <File>gzip.c</File>
    <StartLine>1059</StartLine>
    <EndLine>1065</EndLine>
    <Text><![CDATA[    if (*dot == '\0') strcpy(dot, ".");
    dot[MAX_EXT_CHARS+1-z_len] = '\0';
#endif
    strcat(ifname, z_suffix);
    perror(ifname);
    exit_code = ERROR;
    return ERROR;
]]></Text>
  </Snippet>
  <Snippet id="2A75EBA9DC2CE85C805B5DFE5F24D9EC#gzip.c:1076:1076">
    <File>gzip.c</File>
    <StartLine>1073</StartLine>
    <EndLine>1079</EndLine>
    <Text><![CDATA[{
    char *suff;            /* ofname z suffix */

    strcpy(ofname, ifname);
    /* strip a version number if any and get the gzip suffix if present: */
    suff = get_suffix(ofname);

]]></Text>
  </Snippet>
  <Snippet id="8E97EA16EC849A176F379BE199C5C330#gzip.c:1078:1078">
    <File>gzip.c</File>
    <StartLine>1075</StartLine>
    <EndLine>1081</EndLine>
    <Text><![CDATA[
    strcpy(ofname, ifname);
    /* strip a version number if any and get the gzip suffix if present: */
    suff = get_suffix(ofname);

    if (decompress) {
	if (suff == NULL) {
]]></Text>
  </Snippet>
  <Snippet id="A7AE0BF7A124B928773DEA13BF4ED56C#gzip.c:1097:1097">
    <File>gzip.c</File>
    <StartLine>1094</StartLine>
    <EndLine>1100</EndLine>
    <Text><![CDATA[	/* Make a special case for .tgz and .taz: */
	strlwr(suff);
	if (strequ(suff, ".tgz") || strequ(suff, ".taz")) {
	    strcpy(suff, ".tar");
	} else {
	    *suff = '\0'; /* strip the z suffix */
	}
]]></Text>
  </Snippet>
  <Snippet id="DCB607E347F3B7AB9A931644BC176A22#gzip.c:1133:1133">
    <File>gzip.c</File>
    <StartLine>1130</StartLine>
    <EndLine>1136</EndLine>
    <Text><![CDATA[#  endif
        }
#endif /* NO_MULTIPLE_DOTS */
	strcat(ofname, z_suffix);

    } /* decompress ? */
    return OK;
]]></Text>
  </Snippet>
  <Snippet id="619C1F6477DFE183A0A63DD2EEC415C9#gzip.c:1213:1213">
    <File>gzip.c</File>
    <StartLine>1210</StartLine>
    <EndLine>1216</EndLine>
    <Text><![CDATA[	stamp  = (ulg)get_byte();
	stamp |= ((ulg)get_byte()) << 8;
	stamp |= ((ulg)get_byte()) << 16;
	stamp |= ((ulg)get_byte()) << 24;
	if (stamp != 0 && !no_time) time_stamp = stamp;

	(void)get_byte();  /* Ignore extra flags for the moment */
]]></Text>
  </Snippet>
  <Snippet id="E264747A049291BB6D8E2570C762D469#gzip.c:1214:1214">
    <File>gzip.c</File>
    <StartLine>1211</StartLine>
    <EndLine>1217</EndLine>
    <Text><![CDATA[	stamp |= ((ulg)get_byte()) << 8;
	stamp |= ((ulg)get_byte()) << 16;
	stamp |= ((ulg)get_byte()) << 24;
	if (stamp != 0 && !no_time) time_stamp = stamp;

	(void)get_byte();  /* Ignore extra flags for the moment */
	(void)get_byte();  /* Ignore OS type for the moment */
]]></Text>
  </Snippet>
  <Snippet id="DD05586025B29EFF7AFF728F5DF5A4CE#gzip.c:1251:1251">
    <File>gzip.c</File>
    <StartLine>1248</StartLine>
    <EndLine>1254</EndLine>
    <Text><![CDATA[		    *p = (char)get_char();
		    if (*p++ == '\0') break;
		    if (p >= ofname+sizeof(ofname)) {
			error("corrupted input -- file name too large");
		    }
		}
                /* If necessary, adapt the name to local OS conventions: */
]]></Text>
  </Snippet>
  <Snippet id="7605F4C903AB43F82D35FF0075206339#gzip.c:1334:1334">
    <File>gzip.c</File>
    <StartLine>1331</StartLine>
    <EndLine>1337</EndLine>
    <Text><![CDATA[        "defla"}; /* 8 */
    char *date;

    if (first_time && method >= 0) {
	first_time = 0;
	if (verbose)  {
	    printf("method  crc     date  time  ");
]]></Text>
  </Snippet>
  <Snippet id="E66B3D835EEE6B8F470AAD0C7FD07DDA#gzip.c:1342:1342">
    <File>gzip.c</File>
    <StartLine>1339</StartLine>
    <EndLine>1345</EndLine>
    <Text><![CDATA[	if (!quiet) {
	    printf("compressed  uncompr. ratio uncompressed_name\n");
	}
    } else if (method < 0) {
	if (total_in <= 0 || total_out <= 0) return;
	if (verbose) {
	    printf("                            %9lu %9lu ",
]]></Text>
  </Snippet>
  <Snippet id="285D81FF66F9C5493C8A92A6BAC65E4C#gzip.c:1362:1362">
    <File>gzip.c</File>
    <StartLine>1359</StartLine>
    <EndLine>1365</EndLine>
    <Text><![CDATA[    bytes_in = ifile_size;

#if RECORD_IO == 0
    if (method == DEFLATED && !last_member) {
        /* Get the crc and uncompressed size for gzip'ed (not zip'ed) files.
         * If the lseek fails, we could use read() to get to the end, but
         * --list is used to get quick results.
]]></Text>
  </Snippet>
  <Snippet id="F621C6CDAE7C9CFDC20445CC9FE1E67D#gzip.c:1381:1381">
    <File>gzip.c</File>
    <StartLine>1378</StartLine>
    <EndLine>1384</EndLine>
    <Text><![CDATA[	}
    }
#endif /* RECORD_IO */
    date = ctime((time_t*)&time_stamp) + 4; /* skip the day of the week */
    date[12] = '\0';               /* suppress the 1/100sec and the year */
    if (verbose) {
        printf("%5s %08lx %11s ", methods[method], crc, date);
]]></Text>
  </Snippet>
  <Snippet id="48745284594B072EE563033313AA2AE8#gzip.c:1440:1440">
    <File>gzip.c</File>
    <StartLine>1437</StartLine>
    <EndLine>1443</EndLine>
    <Text><![CDATA[
    tstat = *statb;      /* Just in case OS does not fill all fields */
    name[s-1] = '\0';
    res = stat(name, &tstat) == 0 && same_file(statb, &tstat);
    name[s-1] = c;
    Trace((stderr, " too_long(%s) => %d\n", name, res));
    return res;
]]></Text>
  </Snippet>
  <Snippet id="6C4EB899EEA9BDC432109F31BC45A283#gzip.c:1443:1443">
    <File>gzip.c</File>
    <StartLine>1440</StartLine>
    <EndLine>1446</EndLine>
    <Text><![CDATA[    res = stat(name, &tstat) == 0 && same_file(statb, &tstat);
    name[s-1] = c;
    Trace((stderr, " too_long(%s) => %d\n", name, res));
    return res;
}

/* ========================================================================
]]></Text>
  </Snippet>
  <Snippet id="B23A3A3860365D76A3E75F5542B87962#gzip.c:1466:1466">
    <File>gzip.c</File>
    <StartLine>1463</StartLine>
    <EndLine>1469</EndLine>
    <Text><![CDATA[
    len = strlen(name);
    if (decompress) {
	if (len <= 1) error("name too short");
	name[len-1] = '\0';
	return;
    }
]]></Text>
  </Snippet>
  <Snippet id="7035B3E6B1B08EAA7CEA2F6C0C193D33#gzip.c:1470:1470">
    <File>gzip.c</File>
    <StartLine>1467</StartLine>
    <EndLine>1473</EndLine>
    <Text><![CDATA[	name[len-1] = '\0';
	return;
    }
    p = get_suffix(name);
    if (p == NULL) error("can't recover suffix\n");
    *p = '\0';
    save_orig_name = 1;
]]></Text>
  </Snippet>
  <Snippet id="ADF6BCC577EC02AF50B9A8E14091F42D#gzip.c:1471:1471">
    <File>gzip.c</File>
    <StartLine>1468</StartLine>
    <EndLine>1474</EndLine>
    <Text><![CDATA[	return;
    }
    p = get_suffix(name);
    if (p == NULL) error("can't recover suffix\n");
    *p = '\0';
    save_orig_name = 1;

]]></Text>
  </Snippet>
  <Snippet id="3ED53A926AD5838C9D1CD86DE8795BA6#gzip.c:1477:1477">
    <File>gzip.c</File>
    <StartLine>1474</StartLine>
    <EndLine>1480</EndLine>
    <Text><![CDATA[
    /* compress 1234567890.tar to 1234567890.tgz */
    if (len > 4 && strequ(p-4, ".tar")) {
	strcpy(p-4, ".tgz");
	return;
    }
    /* Try keeping short extensions intact:
]]></Text>
  </Snippet>
  <Snippet id="208EC4111E4A36B09E36FAAF2BE34E29#gzip.c:1501:1501">
    <File>gzip.c</File>
    <StartLine>1498</StartLine>
    <EndLine>1504</EndLine>
    <Text><![CDATA[	trunc--;
    } else {
	trunc = strrchr(name, PART_SEP[0]);
	if (trunc == NULL) error("internal error in shorten_name");
	if (trunc[1] == '\0') trunc--; /* force truncation */
    }
    strcpy(trunc, z_suffix);
]]></Text>
  </Snippet>
  <Snippet id="92A8B22588360180D43ADB5A2DA38045#gzip.c:1504:1504">
    <File>gzip.c</File>
    <StartLine>1501</StartLine>
    <EndLine>1507</EndLine>
    <Text><![CDATA[	if (trunc == NULL) error("internal error in shorten_name");
	if (trunc[1] == '\0') trunc--; /* force truncation */
    }
    strcpy(trunc, z_suffix);
}

/* ========================================================================
]]></Text>
  </Snippet>
  <Snippet id="AA321A5BF490A39C21E1EA4615C7D3E6#gzip.c:1532:1532">
    <File>gzip.c</File>
    <StartLine>1529</StartLine>
    <EndLine>1535</EndLine>
    <Text><![CDATA[    errno = 0;
    while (stat(ofname, &ostat) != 0) {
        if (errno != ENAMETOOLONG) return 0; /* ofname does not exist */
	shorten_name(ofname);
    }
#else
    if (stat(ofname, &ostat) != 0) return 0;
]]></Text>
  </Snippet>
  <Snippet id="F6CD12EE12D4C93B5BBF736BE82EC1B6#gzip.c:1541:1541">
    <File>gzip.c</File>
    <StartLine>1538</StartLine>
    <EndLine>1544</EndLine>
    <Text><![CDATA[     * defining ENAMETOOLONG, because on most systems the strict Posix
     * behavior is disabled by default (silent name truncation allowed).
     */
    if (!decompress && name_too_long(ofname, &ostat)) {
	shorten_name(ofname);
	if (stat(ofname, &ostat) != 0) return 0;
    }
]]></Text>
  </Snippet>
  <Snippet id="A71661C93210DFFC767E89E43A623680#gzip.c:1543:1543">
    <File>gzip.c</File>
    <StartLine>1540</StartLine>
    <EndLine>1546</EndLine>
    <Text><![CDATA[     */
    if (!decompress && name_too_long(ofname, &ostat)) {
	shorten_name(ofname);
	if (stat(ofname, &ostat) != 0) return 0;
    }

    /* Check that the input and output files are different (could be
]]></Text>
  </Snippet>
  <Snippet id="C4B7DDC9324CF5A6E395DE045FF509F6#gzip.c:1549:1549">
    <File>gzip.c</File>
    <StartLine>1546</StartLine>
    <EndLine>1552</EndLine>
    <Text><![CDATA[    /* Check that the input and output files are different (could be
     * the same by name truncation or links).
     */
    if (same_file(&istat, &ostat)) {
	if (strequ(ifname, ofname)) {
	    fprintf(stderr, "%s: %s: cannot %scompress onto itself\n",
		    progname, ifname, decompress ? "de" : "");
]]></Text>
  </Snippet>
  <Snippet id="4E49F08383090ED8093544977BA5197F#gzip.c:1561:1561">
    <File>gzip.c</File>
    <StartLine>1558</StartLine>
    <EndLine>1564</EndLine>
    <Text><![CDATA[	return ERROR;
    }
    /* Ask permission to overwrite the existing file */
    if (!force) {
	char response[80];
	strcpy(response,"n");
	fprintf(stderr, "%s: %s already exists;", progname, ofname);
]]></Text>
  </Snippet>
  <Snippet id="E52F9CF6FD94261D809AC3EF87AE0943#gzip.c:1563:1563">
    <File>gzip.c</File>
    <StartLine>1560</StartLine>
    <EndLine>1566</EndLine>
    <Text><![CDATA[    /* Ask permission to overwrite the existing file */
    if (!force) {
	char response[80];
	strcpy(response,"n");
	fprintf(stderr, "%s: %s already exists;", progname, ofname);
	if (foreground && isatty(fileno(stdin))) {
	    fprintf(stderr, " do you wish to overwrite (y or n)? ");
]]></Text>
  </Snippet>
  <Snippet id="CF2933B3455088A4B09C17AD4F9AF231#gzip.c:1576:1576">
    <File>gzip.c</File>
    <StartLine>1573</StartLine>
    <EndLine>1579</EndLine>
    <Text><![CDATA[	    return ERROR;
	}
    }
    (void) chmod(ofname, 0777);
    if (unlink(ofname)) {
	fprintf(stderr, "%s: ", progname);
	perror(ofname);
]]></Text>
  </Snippet>
  <Snippet id="BE4D87FC376C5EA115B5CACAFDB73D17#gzip.c:1577:1577">
    <File>gzip.c</File>
    <StartLine>1574</StartLine>
    <EndLine>1580</EndLine>
    <Text><![CDATA[	}
    }
    (void) chmod(ofname, 0777);
    if (unlink(ofname)) {
	fprintf(stderr, "%s: ", progname);
	perror(ofname);
	exit_code = ERROR;
]]></Text>
  </Snippet>
  <Snippet id="5FFB1586F6F5F617B8E80D42C1694152#gzip.c:1632:1632">
    <File>gzip.c</File>
    <StartLine>1629</StartLine>
    <EndLine>1635</EndLine>
    <Text><![CDATA[	if (!quiet) perror(ofname);
    }
#ifndef NO_CHOWN
    chown(ofname, ifstat->st_uid, ifstat->st_gid);  /* Copy ownership */
#endif
    remove_ofname = 0;
    /* It's now safe to remove the input file: */
]]></Text>
  </Snippet>
  <Snippet id="9C351CE165DF5B449318990E8EE9E7F9#gzip.c:1637:1637">
    <File>gzip.c</File>
    <StartLine>1634</StartLine>
    <EndLine>1640</EndLine>
    <Text><![CDATA[    remove_ofname = 0;
    /* It's now safe to remove the input file: */
    (void) chmod(ifname, 0777);
    if (unlink(ifname)) {
	WARN((stderr, "%s: ", progname));
	if (!quiet) perror(ifname);
    }
]]></Text>
  </Snippet>
  <Snippet id="F8C0AA28D05835FB4EC9F3602F6706E9#gzip.c:1741:1741">
    <File>gzip.c</File>
    <StartLine>1738</StartLine>
    <EndLine>1744</EndLine>
    <Text><![CDATA[{
   if (remove_ofname) {
       close(ofd);
       unlink (ofname);
   }
   do_exit(ERROR);
}
]]></Text>
  </Snippet>
  <Snippet id="58EF9C6B58B8B3F3D1EE1AA7000F4EE8#gzip.h:202:202">
    <File>gzip.h</File>
    <StartLine>199</StartLine>
    <EndLine>205</EndLine>
    <Text><![CDATA[extern int to_stdout;      /* output to stdout (-c) */
extern int save_orig_name; /* set if original name must be saved */

#define get_byte()  (inptr < insize ? inbuf[inptr++] : fill_inbuf(0))
#define try_byte()  (inptr < insize ? inbuf[inptr++] : fill_inbuf(1))

/* put_byte is used for the compressed output, put_ubyte for the
]]></Text>
  </Snippet>
  <Snippet id="0383123F3B555E215878E2FB63448FFF#gzip.h:203:203">
    <File>gzip.h</File>
    <StartLine>200</StartLine>
    <EndLine>206</EndLine>
    <Text><![CDATA[extern int save_orig_name; /* set if original name must be saved */

#define get_byte()  (inptr < insize ? inbuf[inptr++] : fill_inbuf(0))
#define try_byte()  (inptr < insize ? inbuf[inptr++] : fill_inbuf(1))

/* put_byte is used for the compressed output, put_ubyte for the
 * uncompressed output. However unlzw() uses window for its
]]></Text>
  </Snippet>
  <Snippet id="15866AA459509FB6DFBB259168C34604#gzip.h:210:210">
    <File>gzip.h</File>
    <StartLine>207</StartLine>
    <EndLine>213</EndLine>
    <Text><![CDATA[ * suffix table instead of its output buffer, so it does not use put_ubyte
 * (to be cleaned up).
 */
#define put_byte(c) {outbuf[outcnt++]=(uch)(c); if (outcnt==OUTBUFSIZ)\
   flush_outbuf();}
#define put_ubyte(c) {window[outcnt++]=(uch)(c); if (outcnt==WSIZE)\
   flush_window();}
]]></Text>
  </Snippet>
  <Snippet id="B690ECC2F9FB89F67C92691F2012D986#gzip.h:212:212">
    <File>gzip.h</File>
    <StartLine>209</StartLine>
    <EndLine>215</EndLine>
    <Text><![CDATA[ */
#define put_byte(c) {outbuf[outcnt++]=(uch)(c); if (outcnt==OUTBUFSIZ)\
   flush_outbuf();}
#define put_ubyte(c) {window[outcnt++]=(uch)(c); if (outcnt==WSIZE)\
   flush_window();}

/* Output a 16 bit value, lsb first */
]]></Text>
  </Snippet>
  <Snippet id="5D51A6F3A6E81EE1277E96C38194097E#gzip.h:229:229">
    <File>gzip.h</File>
    <StartLine>226</StartLine>
    <EndLine>232</EndLine>
    <Text><![CDATA[/* Output a 32 bit value to the bit stream, lsb first */
#define put_long(n) { \
    put_short((n) & 0xffff); \
    put_short(((ulg)(n)) >> 16); \
}

#define seekable()    0  /* force sequential output */
]]></Text>
  </Snippet>
  <Snippet id="C46EA7FA0FD8FFEB0DAFB0FE0B25B99F#inflate.c:112:112">
    <File>inflate.c</File>
    <StartLine>109</StartLine>
    <EndLine>115</EndLine>
    <Text><![CDATA[#endif

#include "gzip.h"
#define slide window

/* Huffman code lookup table entry--this entry is four bytes for machines
   that have 16-bit pointers (e.g. PC's in the small or medium model).
]]></Text>
  </Snippet>
  <Snippet id="F3499FB2EBC0C6EAEC7C9767D4486B00#inflate.c:152:152">
    <File>inflate.c</File>
    <StartLine>149</StartLine>
    <EndLine>155</EndLine>
    <Text><![CDATA[   "uch *slide;" and then malloc'ed in the latter case.  The definition
   must be in unzip.h, included above. */
/* unsigned wp;             current position in slide */
#define wp outcnt
#define flush_output(w) (wp=(w),flush_window())

/* Tables for deflate from PKZIP's appnote.txt. */
]]></Text>
  </Snippet>
  <Snippet id="67552D0DFA435800DF0E3E425B8E7904#inflate.c:222:222">
    <File>inflate.c</File>
    <StartLine>219</StartLine>
    <EndLine>225</EndLine>
    <Text><![CDATA[#else
#  define NEXTBYTE()  (uch)get_byte()
#endif
#define NEEDBITS(n) {while(k<(n)){b|=((ulg)NEXTBYTE())<<k;k+=8;}}
#define DUMPBITS(n) {b>>=(n);k-=(n);}


]]></Text>
  </Snippet>
  <Snippet id="F1E4B30627F4B41DB3A01704F454F203#inflate.c:223:223">
    <File>inflate.c</File>
    <StartLine>220</StartLine>
    <EndLine>226</EndLine>
    <Text><![CDATA[#  define NEXTBYTE()  (uch)get_byte()
#endif
#define NEEDBITS(n) {while(k<(n)){b|=((ulg)NEXTBYTE())<<k;k+=8;}}
#define DUMPBITS(n) {b>>=(n);k-=(n);}


/*
]]></Text>
  </Snippet>
  <Snippet id="3E797D2D983D2669F4097E1F4FCE81A2#inflate.c:286:286">
    <File>inflate.c</File>
    <StartLine>283</StartLine>
    <EndLine>289</EndLine>
    <Text><![CDATA[   oversubscribed set of lengths), and three if not enough memory. */
{
  unsigned a;                   /* counter for codes of length k */
  unsigned c[BMAX+1];           /* bit length count table */
  unsigned f;                   /* i repeats in table every f entries */
  int g;                        /* maximum code length */
  int h;                        /* table level */
]]></Text>
  </Snippet>
  <Snippet id="A385EBD1DC62E918FBE6428102243D40#inflate.c:308:308">
    <File>inflate.c</File>
    <StartLine>305</StartLine>
    <EndLine>311</EndLine>
    <Text><![CDATA[
  /* Generate counts for each bit length */
  memzero(c, sizeof(c));
  p = b;  i = n;
  do {
    Tracecv(*p, (stderr, (n-i >= ' ' && n-i <= '~' ? "%c %d\n" : "0x%x %d\n"), 
	    n-i, *p));
]]></Text>
  </Snippet>
  <Snippet id="8ADA2F5F59DF5907BFBA26C5857CCA77#inflate.c:312:312">
    <File>inflate.c</File>
    <StartLine>309</StartLine>
    <EndLine>315</EndLine>
    <Text><![CDATA[  do {
    Tracecv(*p, (stderr, (n-i >= ' ' && n-i <= '~' ? "%c %d\n" : "0x%x %d\n"), 
	    n-i, *p));
    c[*p]++;                    /* assume all entries <= BMAX */
    p++;                      /* Can't combine with above line (Solaris bug) */
  } while (--i);
  if (c[0] == n)                /* null input--all zero length codes */
]]></Text>
  </Snippet>
  <Snippet id="8A123D01B4006D44FEB51D0B7DC24A8E#inflate.c:315:315">
    <File>inflate.c</File>
    <StartLine>312</StartLine>
    <EndLine>318</EndLine>
    <Text><![CDATA[    c[*p]++;                    /* assume all entries <= BMAX */
    p++;                      /* Can't combine with above line (Solaris bug) */
  } while (--i);
  if (c[0] == n)                /* null input--all zero length codes */
  {
    *t = (struct huft *)NULL;
    *m = 0;
]]></Text>
  </Snippet>
  <Snippet id="2DDEC54763082456C067CC212E3C039F#inflate.c:344:344">
    <File>inflate.c</File>
    <StartLine>341</StartLine>
    <EndLine>347</EndLine>
    <Text><![CDATA[  for (y = 1 << j; j < i; j++, y <<= 1)
    if ((y -= c[j]) < 0)
      return 2;                 /* bad input: more codes than bits */
  if ((y -= c[i]) < 0)
    return 2;
  c[i] += y;

]]></Text>
  </Snippet>
  <Snippet id="30E848AC157E46A3C1567EDCC511B6F9#inflate.c:371:371">
    <File>inflate.c</File>
    <StartLine>368</StartLine>
    <EndLine>374</EndLine>
    <Text><![CDATA[  h = -1;                       /* no tables yet--level -1 */
  w = -l;                       /* bits decoded == (l * h) */
  u[0] = (struct huft *)NULL;   /* just to keep compilers happy */
  q = (struct huft *)NULL;      /* ditto */
  z = 0;                        /* ditto */

  /* go through the bit lengths (k already is bits in shortest code) */
]]></Text>
  </Snippet>
  <Snippet id="AA2453B944A16F78012A2A2A359F9294#inflate.c:375:375">
    <File>inflate.c</File>
    <StartLine>372</StartLine>
    <EndLine>378</EndLine>
    <Text><![CDATA[  z = 0;                        /* ditto */

  /* go through the bit lengths (k already is bits in shortest code) */
  for (; k <= g; k++)
  {
    a = c[k];
    while (a--)
]]></Text>
  </Snippet>
  <Snippet id="23A27ED0636233A6D7CBDC7F76C64321#inflate.c:378:378">
    <File>inflate.c</File>
    <StartLine>375</StartLine>
    <EndLine>381</EndLine>
    <Text><![CDATA[  for (; k <= g; k++)
  {
    a = c[k];
    while (a--)
    {
      /* here i is the Huffman code of length k bits for value *p */
      /* make tables up to required level */
]]></Text>
  </Snippet>
  <Snippet id="660C509D962DE0C2FC7B180700CB4DCF#inflate.c:382:382">
    <File>inflate.c</File>
    <StartLine>379</StartLine>
    <EndLine>385</EndLine>
    <Text><![CDATA[    {
      /* here i is the Huffman code of length k bits for value *p */
      /* make tables up to required level */
      while (k > w + l)
      {
        h++;
        w += l;                 /* previous table always l bits */
]]></Text>
  </Snippet>
  <Snippet id="02A1327EE082B4641E9E686CF47E55E8#inflate.c:389:389">
    <File>inflate.c</File>
    <StartLine>386</StartLine>
    <EndLine>392</EndLine>
    <Text><![CDATA[
        /* compute minimum size table less than or equal to l bits */
        z = (z = g - w) > (unsigned)l ? l : z;  /* upper limit on table size */
        if ((f = 1 << (j = k - w)) > a + 1)     /* try a k-w bit table */
        {                       /* too few codes for k-w bit table */
          f -= a + 1;           /* deduct codes from patterns left */
          xp = c + k;
]]></Text>
  </Snippet>
  <Snippet id="72761513F3DE2BC4B62328E593E2C421#inflate.c:403:403">
    <File>inflate.c</File>
    <StartLine>400</StartLine>
    <EndLine>406</EndLine>
    <Text><![CDATA[        z = 1 << j;             /* table entries for j-bit table */

        /* allocate and link in new table */
        if ((q = (struct huft *)malloc((z + 1)*sizeof(struct huft))) ==
            (struct huft *)NULL)
        {
          if (h)
]]></Text>
  </Snippet>
  <Snippet id="8B10E28385E3FEF2327F13F52D8A7838#inflate.c:413:413">
    <File>inflate.c</File>
    <StartLine>410</StartLine>
    <EndLine>416</EndLine>
    <Text><![CDATA[        hufts += z + 1;         /* track memory usage */
        *t = q + 1;             /* link to list for huft_free() */
        *(t = &(q->v.t)) = (struct huft *)NULL;
        u[h] = ++q;             /* table starts after link */

        /* connect to last table, if there is one */
        if (h)
]]></Text>
  </Snippet>
  <Snippet id="38C64096ABE563CF38675F9B7EE8ACDD#inflate.c:445:445">
    <File>inflate.c</File>
    <StartLine>442</StartLine>
    <EndLine>448</EndLine>
    <Text><![CDATA[
      /* fill code-like entries with r */
      f = 1 << (k - w);
      for (j = i >> w; j < z; j += f)
        q[j] = r;

      /* backwards increment the k-bit code i */
]]></Text>
  </Snippet>
  <Snippet id="9C2A2C6C520E7B4E47CC9793FA4D190C#inflate.c:446:446">
    <File>inflate.c</File>
    <StartLine>443</StartLine>
    <EndLine>449</EndLine>
    <Text><![CDATA[      /* fill code-like entries with r */
      f = 1 << (k - w);
      for (j = i >> w; j < z; j += f)
        q[j] = r;

      /* backwards increment the k-bit code i */
      for (j = 1 << (k - 1); i & j; j >>= 1)
]]></Text>
  </Snippet>
  <Snippet id="944C337FFD6F13D9195DE236FBEBF0D7#inflate.c:506:506">
    <File>inflate.c</File>
    <StartLine>503</StartLine>
    <EndLine>509</EndLine>
    <Text><![CDATA[

  /* make local copies of globals */
  b = bb;                       /* initialize bit buffer */
  k = bk;
  w = wp;                       /* initialize window position */

]]></Text>
  </Snippet>
  <Snippet id="FAC95991E0E26232ABD25E5C1F912498#inflate.c:508:508">
    <File>inflate.c</File>
    <StartLine>505</StartLine>
    <EndLine>511</EndLine>
    <Text><![CDATA[  /* make local copies of globals */
  b = bb;                       /* initialize bit buffer */
  k = bk;
  w = wp;                       /* initialize window position */

  /* inflate the coded data */
  ml = mask_bits[bl];           /* precompute masks for speed */
]]></Text>
  </Snippet>
  <Snippet id="A59EFF8664AD3E3424DF4B224B31F67C#inflate.c:515:515">
    <File>inflate.c</File>
    <StartLine>512</StartLine>
    <EndLine>518</EndLine>
    <Text><![CDATA[  md = mask_bits[bd];
  for (;;)                      /* do until end of block */
  {
    NEEDBITS((unsigned)bl)
    if ((e = (t = tl + ((unsigned)b & ml))->e) > 16)
      do {
        if (e == 99)
]]></Text>
  </Snippet>
  <Snippet id="5856C40F97BDC03DB9706913A19A38A7#inflate.c:524:524">
    <File>inflate.c</File>
    <StartLine>521</StartLine>
    <EndLine>527</EndLine>
    <Text><![CDATA[        e -= 16;
        NEEDBITS(e)
      } while ((e = (t = t->v.t + ((unsigned)b & mask_bits[e]))->e) > 16);
    DUMPBITS(t->b)
    if (e == 16)                /* then it's a literal */
    {
      slide[w++] = (uch)t->v.n;
]]></Text>
  </Snippet>
  <Snippet id="801D2C79036E67DD9319765CE21C62C6#inflate.c:542:542">
    <File>inflate.c</File>
    <StartLine>539</StartLine>
    <EndLine>545</EndLine>
    <Text><![CDATA[        break;

      /* get length of block to copy */
      NEEDBITS(e)
      n = t->v.n + ((unsigned)b & mask_bits[e]);
      DUMPBITS(e);

]]></Text>
  </Snippet>
  <Snippet id="87BB470F33E4E400E3DCD28B4991A60E#inflate.c:543:543">
    <File>inflate.c</File>
    <StartLine>540</StartLine>
    <EndLine>546</EndLine>
    <Text><![CDATA[
      /* get length of block to copy */
      NEEDBITS(e)
      n = t->v.n + ((unsigned)b & mask_bits[e]);
      DUMPBITS(e);

      /* decode distance of block to copy */
]]></Text>
  </Snippet>
  <Snippet id="12FF976BECBA96C2B7D43A023C36BF2B#inflate.c:564:564">
    <File>inflate.c</File>
    <StartLine>561</StartLine>
    <EndLine>567</EndLine>
    <Text><![CDATA[
      /* do the copy */
      do {
        n -= (e = (e = WSIZE - ((d &= WSIZE-1) > w ? d : w)) > n ? n : e);
#if !defined(NOMEMCPY) && !defined(DEBUG)
        if (w - d >= e)         /* (this test assumes unsigned comparison) */
        {
]]></Text>
  </Snippet>
  <Snippet id="2B5D0589E1AAB8817F6E6E0DC0432352#inflate.c:568:568">
    <File>inflate.c</File>
    <StartLine>565</StartLine>
    <EndLine>571</EndLine>
    <Text><![CDATA[#if !defined(NOMEMCPY) && !defined(DEBUG)
        if (w - d >= e)         /* (this test assumes unsigned comparison) */
        {
          memcpy(slide + w, slide + d, e);
          w += e;
          d += e;
        }
]]></Text>
  </Snippet>
  <Snippet id="EABA43F74A782F6EDAF96B84518C006E#inflate.c:569:569">
    <File>inflate.c</File>
    <StartLine>566</StartLine>
    <EndLine>572</EndLine>
    <Text><![CDATA[        if (w - d >= e)         /* (this test assumes unsigned comparison) */
        {
          memcpy(slide + w, slide + d, e);
          w += e;
          d += e;
        }
        else                      /* do it slow to avoid memcpy() overlap */
]]></Text>
  </Snippet>
  <Snippet id="6FD1B3B2BB7CCFFCB86E20D08FF32F20#inflate.c:580:580">
    <File>inflate.c</File>
    <StartLine>577</StartLine>
    <EndLine>583</EndLine>
    <Text><![CDATA[          } while (--e);
        if (w == WSIZE)
        {
          flush_output(w);
          w = 0;
        }
      } while (n);
]]></Text>
  </Snippet>
  <Snippet id="12C187018DA52E97D4C7B3C76A78F956#inflate.c:590:590">
    <File>inflate.c</File>
    <StartLine>587</StartLine>
    <EndLine>593</EndLine>
    <Text><![CDATA[
  /* restore the globals from the locals */
  wp = w;                       /* restore global window pointer */
  bb = b;                       /* restore global bit buffer */
  bk = k;

  /* done */
]]></Text>
  </Snippet>
  <Snippet id="944C337FFD6F13D9195DE236FBEBF0D7#inflate.c:609:609">
    <File>inflate.c</File>
    <StartLine>606</StartLine>
    <EndLine>612</EndLine>
    <Text><![CDATA[

  /* make local copies of globals */
  b = bb;                       /* initialize bit buffer */
  k = bk;
  w = wp;                       /* initialize window position */

]]></Text>
  </Snippet>
  <Snippet id="D73C76154428AF0472705F7E3AFC6F85#inflate.c:616:616">
    <File>inflate.c</File>
    <StartLine>613</StartLine>
    <EndLine>619</EndLine>
    <Text><![CDATA[
  /* go to byte boundary */
  n = k & 7;
  DUMPBITS(n);


  /* get the length and its complement */
]]></Text>
  </Snippet>
  <Snippet id="01D06F7F8167D11DF2121421B6A0E1F8#inflate.c:622:622">
    <File>inflate.c</File>
    <StartLine>619</StartLine>
    <EndLine>625</EndLine>
    <Text><![CDATA[  /* get the length and its complement */
  NEEDBITS(16)
  n = ((unsigned)b & 0xffff);
  DUMPBITS(16)
  NEEDBITS(16)
  if (n != (unsigned)((~b) & 0xffff))
    return 1;                   /* error in compressed data */
]]></Text>
  </Snippet>
  <Snippet id="F9133957657E6A6DC674E1793D06BCE1#inflate.c:626:626">
    <File>inflate.c</File>
    <StartLine>623</StartLine>
    <EndLine>629</EndLine>
    <Text><![CDATA[  NEEDBITS(16)
  if (n != (unsigned)((~b) & 0xffff))
    return 1;                   /* error in compressed data */
  DUMPBITS(16)


  /* read and output the compressed data */
]]></Text>
  </Snippet>
  <Snippet id="D22C7B0BF52A0E833C37889508CDEDD8#inflate.c:633:633">
    <File>inflate.c</File>
    <StartLine>630</StartLine>
    <EndLine>636</EndLine>
    <Text><![CDATA[  while (n--)
  {
    NEEDBITS(8)
    slide[w++] = (uch)b;
    if (w == WSIZE)
    {
      flush_output(w);
]]></Text>
  </Snippet>
  <Snippet id="8A24B0BB8656308AD1DAEA084885D7FB#inflate.c:728:728">
    <File>inflate.c</File>
    <StartLine>725</StartLine>
    <EndLine>731</EndLine>
    <Text><![CDATA[

  /* make local bit buffer */
  b = bb;
  k = bk;


]]></Text>
  </Snippet>
  <Snippet id="D5E1CA6A6AC37A75E468669D65D8A98E#inflate.c:733:733">
    <File>inflate.c</File>
    <StartLine>730</StartLine>
    <EndLine>736</EndLine>
    <Text><![CDATA[

  /* read in table lengths */
  NEEDBITS(5)
  nl = 257 + ((unsigned)b & 0x1f);      /* number of literal/length codes */
  DUMPBITS(5)
  NEEDBITS(5)
]]></Text>
  </Snippet>
  <Snippet id="C18647CFB2E3B2E3AF30C162E1CAF1D3#inflate.c:734:734">
    <File>inflate.c</File>
    <StartLine>731</StartLine>
    <EndLine>737</EndLine>
    <Text><![CDATA[
  /* read in table lengths */
  NEEDBITS(5)
  nl = 257 + ((unsigned)b & 0x1f);      /* number of literal/length codes */
  DUMPBITS(5)
  NEEDBITS(5)
  nd = 1 + ((unsigned)b & 0x1f);        /* number of distance codes */
]]></Text>
  </Snippet>
  <Snippet id="61871EDAB7285C352958E0D376DA3336#inflate.c:735:735">
    <File>inflate.c</File>
    <StartLine>732</StartLine>
    <EndLine>738</EndLine>
    <Text><![CDATA[  /* read in table lengths */
  NEEDBITS(5)
  nl = 257 + ((unsigned)b & 0x1f);      /* number of literal/length codes */
  DUMPBITS(5)
  NEEDBITS(5)
  nd = 1 + ((unsigned)b & 0x1f);        /* number of distance codes */
  DUMPBITS(5)
]]></Text>
  </Snippet>
  <Snippet id="384F05AC996699EEF75FD10BE5961AE7#inflate.c:736:736">
    <File>inflate.c</File>
    <StartLine>733</StartLine>
    <EndLine>739</EndLine>
    <Text><![CDATA[  NEEDBITS(5)
  nl = 257 + ((unsigned)b & 0x1f);      /* number of literal/length codes */
  DUMPBITS(5)
  NEEDBITS(5)
  nd = 1 + ((unsigned)b & 0x1f);        /* number of distance codes */
  DUMPBITS(5)
  NEEDBITS(4)
]]></Text>
  </Snippet>
  <Snippet id="88409911F650EFA343E5FEC6FADCC0D7#inflate.c:737:737">
    <File>inflate.c</File>
    <StartLine>734</StartLine>
    <EndLine>740</EndLine>
    <Text><![CDATA[  nl = 257 + ((unsigned)b & 0x1f);      /* number of literal/length codes */
  DUMPBITS(5)
  NEEDBITS(5)
  nd = 1 + ((unsigned)b & 0x1f);        /* number of distance codes */
  DUMPBITS(5)
  NEEDBITS(4)
  nb = 4 + ((unsigned)b & 0xf);         /* number of bit length codes */
]]></Text>
  </Snippet>
  <Snippet id="DE913ACCDCD12EC9E0604B23253087A7#inflate.c:738:738">
    <File>inflate.c</File>
    <StartLine>735</StartLine>
    <EndLine>741</EndLine>
    <Text><![CDATA[  DUMPBITS(5)
  NEEDBITS(5)
  nd = 1 + ((unsigned)b & 0x1f);        /* number of distance codes */
  DUMPBITS(5)
  NEEDBITS(4)
  nb = 4 + ((unsigned)b & 0xf);         /* number of bit length codes */
  DUMPBITS(4)
]]></Text>
  </Snippet>
  <Snippet id="EB7B6FECCEB0ED667DD87C5E48AEA93E#inflate.c:739:739">
    <File>inflate.c</File>
    <StartLine>736</StartLine>
    <EndLine>742</EndLine>
    <Text><![CDATA[  NEEDBITS(5)
  nd = 1 + ((unsigned)b & 0x1f);        /* number of distance codes */
  DUMPBITS(5)
  NEEDBITS(4)
  nb = 4 + ((unsigned)b & 0xf);         /* number of bit length codes */
  DUMPBITS(4)
#ifdef PKZIP_BUG_WORKAROUND
]]></Text>
  </Snippet>
  <Snippet id="F619AD6CB6A771EE64EF2D284D3A2446#inflate.c:741:741">
    <File>inflate.c</File>
    <StartLine>738</StartLine>
    <EndLine>744</EndLine>
    <Text><![CDATA[  DUMPBITS(5)
  NEEDBITS(4)
  nb = 4 + ((unsigned)b & 0xf);         /* number of bit length codes */
  DUMPBITS(4)
#ifdef PKZIP_BUG_WORKAROUND
  if (nl > 288 || nd > 32)
#else
]]></Text>
  </Snippet>
  <Snippet id="33575AAAEB8E8B2B3BA12D0F501D015A#inflate.c:753:753">
    <File>inflate.c</File>
    <StartLine>750</StartLine>
    <EndLine>756</EndLine>
    <Text><![CDATA[  /* read in bit-length-code lengths */
  for (j = 0; j < nb; j++)
  {
    NEEDBITS(3)
    ll[border[j]] = (unsigned)b & 7;
    DUMPBITS(3)
  }
]]></Text>
  </Snippet>
  <Snippet id="2389E37C497D638BD9A58280FE1C4090#inflate.c:754:754">
    <File>inflate.c</File>
    <StartLine>751</StartLine>
    <EndLine>757</EndLine>
    <Text><![CDATA[  for (j = 0; j < nb; j++)
  {
    NEEDBITS(3)
    ll[border[j]] = (unsigned)b & 7;
    DUMPBITS(3)
  }
  for (; j < 19; j++)
]]></Text>
  </Snippet>
  <Snippet id="6B79C04DC950CF6CFE57E55463EA1CDC#inflate.c:763:763">
    <File>inflate.c</File>
    <StartLine>760</StartLine>
    <EndLine>766</EndLine>
    <Text><![CDATA[
  /* build decoding table for trees--single level, 7 bit lookup */
  bl = 7;
  if ((i = huft_build(ll, 19, 19, NULL, NULL, &tl, &bl)) != 0)
  {
    if (i == 1)
      huft_free(tl);
]]></Text>
  </Snippet>
  <Snippet id="A9A9BA83F8A87217640C1B98BFBF4BA4#inflate.c:772:772">
    <File>inflate.c</File>
    <StartLine>769</StartLine>
    <EndLine>775</EndLine>
    <Text><![CDATA[

  /* read in literal and distance code lengths */
  n = nl + nd;
  m = mask_bits[bl];
  i = l = 0;
  while ((unsigned)i < n)
]]></Text>
  </Snippet>
  <Snippet id="7A10BEE8BFFB61EEDB89ED8B0AC3C47A#inflate.c:775:775">
    <File>inflate.c</File>
    <StartLine>772</StartLine>
    <EndLine>778</EndLine>
    <Text><![CDATA[  n = nl + nd;
  m = mask_bits[bl];
  i = l = 0;
  while ((unsigned)i < n)
  {
    NEEDBITS((unsigned)bl)
    j = (td = tl + ((unsigned)b & m))->b;
]]></Text>
  </Snippet>
  <Snippet id="E30ED9AE9DD937391FC0026D8E481D63#inflate.c:782:782">
    <File>inflate.c</File>
    <StartLine>779</StartLine>
    <EndLine>785</EndLine>
    <Text><![CDATA[    DUMPBITS(j)
    j = td->v.n;
    if (j < 16)                 /* length of code in bits (0..15) */
      ll[i++] = l = j;          /* save last length in l */
    else if (j == 16)           /* repeat last length 3 to 6 times */
    {
      NEEDBITS(2)
]]></Text>
  </Snippet>
  <Snippet id="C26F43D1B8E9705992533189105F807A#inflate.c:791:791">
    <File>inflate.c</File>
    <StartLine>788</StartLine>
    <EndLine>794</EndLine>
    <Text><![CDATA[      if ((unsigned)i + j > n)
        return 1;
      while (j--)
        ll[i++] = l;
    }
    else if (j == 17)           /* 3 to 10 zero length codes */
    {
]]></Text>
  </Snippet>
  <Snippet id="D52637778487FEFD2E07649D376F6490#inflate.c:801:801">
    <File>inflate.c</File>
    <StartLine>798</StartLine>
    <EndLine>804</EndLine>
    <Text><![CDATA[      if ((unsigned)i + j > n)
        return 1;
      while (j--)
        ll[i++] = 0;
      l = 0;
    }
    else                        /* j == 18: 11 to 138 zero length codes */
]]></Text>
  </Snippet>
  <Snippet id="AC678F094B52EE011B1FD2F4C4D38D25#inflate.c:812:812">
    <File>inflate.c</File>
    <StartLine>809</StartLine>
    <EndLine>815</EndLine>
    <Text><![CDATA[      if ((unsigned)i + j > n)
        return 1;
      while (j--)
        ll[i++] = 0;
      l = 0;
    }
  }
]]></Text>
  </Snippet>
  <Snippet id="AF4D1DEF3C42D8F691F747B5355FF712#inflate.c:823:823">
    <File>inflate.c</File>
    <StartLine>820</StartLine>
    <EndLine>826</EndLine>
    <Text><![CDATA[

  /* restore the global bit buffer */
  bb = b;
  bk = k;


]]></Text>
  </Snippet>
  <Snippet id="232AD5630BC74D988122A85A2A5CF36F#tailor.h:319:319">
    <File>tailor.h</File>
    <StartLine>316</StartLine>
    <EndLine>322</EndLine>
    <Text><![CDATA[#endif

#ifndef OPEN
#  define OPEN(name, flags, mode) open(name, flags, mode)
#endif

#ifndef get_char
]]></Text>
  </Snippet>
  <Snippet id="E28BE80A061554B03FF295E5469F528D#trees.c:251:251">
    <File>trees.c</File>
    <StartLine>248</StartLine>
    <EndLine>254</EndLine>
    <Text><![CDATA[local int near base_dist[D_CODES];
/* First normalized distance for each code (0 = distance of 1) */

#define l_buf inbuf
/* DECLARE(uch, l_buf, LIT_BUFSIZE);  buffer for literals or lengths */

/* DECLARE(ush, d_buf, DIST_BUFSIZE); buffer for distances */
]]></Text>
  </Snippet>
  <Snippet id="EAA58F648B7C05E32F4EF703AD28482A#trees.c:727:727">
    <File>trees.c</File>
    <StartLine>724</StartLine>
    <EndLine>730</EndLine>
    <Text><![CDATA[        }
        count = 0; prevlen = curlen;
        if (nextlen == 0) {
            max_count = 138, min_count = 3;
        } else if (curlen == nextlen) {
            max_count = 6, min_count = 3;
        } else {
]]></Text>
  </Snippet>
  <Snippet id="86998D2050864CC23856718ABDAB9003#trees.c:902:902">
    <File>trees.c</File>
    <StartLine>899</StartLine>
    <EndLine>905</EndLine>
    <Text><![CDATA[    if (stored_len <= opt_lenb && eof && compressed_len == 0L && seekable()) {
#endif
        /* Since LIT_BUFSIZE <= 2*WSIZE, the input data must be there: */
        if (buf == (char*)0) error ("block vanished");

        copy_block(buf, (unsigned)stored_len, 0); /* without header */
        compressed_len = stored_len << 3;
]]></Text>
  </Snippet>
  <Snippet id="7A9CC450DC8A5CCD5FC2005D4046E1FA#trees.c:924:924">
    <File>trees.c</File>
    <StartLine>921</StartLine>
    <EndLine>927</EndLine>
    <Text><![CDATA[        compressed_len = (compressed_len + 3 + 7) & ~7L;
        compressed_len += (stored_len + 4) << 3;

        copy_block(buf, (unsigned)stored_len, 1); /* with header */

#ifdef FORCE_METHOD
    } else if (level == 3) { /* force static trees */
]]></Text>
  </Snippet>
  <Snippet id="3080959CCCA9DF1666A66A38E24F0507#trees.c:962:962">
    <File>trees.c</File>
    <StartLine>959</StartLine>
    <EndLine>965</EndLine>
    <Text><![CDATA[    int dist;  /* distance of matched string */
    int lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{
    l_buf[last_lit++] = (uch)lc;
    if (dist == 0) {
        /* lc is the unmatched char */
        dyn_ltree[lc].Freq++;
]]></Text>
  </Snippet>
  <Snippet id="7EF28B7F5AB5CD13BCCBF79772DC7B74#trees.c:968:968">
    <File>trees.c</File>
    <StartLine>965</StartLine>
    <EndLine>971</EndLine>
    <Text><![CDATA[        dyn_ltree[lc].Freq++;
    } else {
        /* Here, lc is the match length - MIN_MATCH */
        dist--;             /* dist = match distance - 1 */
        Assert((ush)dist < (ush)MAX_DIST &&
               (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
               (ush)d_code(dist) < (ush)D_CODES,  "ct_tally: bad match");
]]></Text>
  </Snippet>
  <Snippet id="B479CC9D0ADC8C846E0030A4180A98C1#trees.c:976:976">
    <File>trees.c</File>
    <StartLine>973</StartLine>
    <EndLine>979</EndLine>
    <Text><![CDATA[        dyn_ltree[length_code[lc]+LITERALS+1].Freq++;
        dyn_dtree[d_code(dist)].Freq++;

        d_buf[last_dist++] = (ush)dist;
        flags |= flag_bit;
    }
    flag_bit <<= 1;
]]></Text>
  </Snippet>
  <Snippet id="26AEE6355AF4599A86571D2063AD8AE3#unlzh.c:86:86">
    <File>unlzh.c</File>
    <StartLine>83</StartLine>
    <EndLine>89</EndLine>
    <Text><![CDATA[#endif

/* local uch c_len[NC]; */
#define c_len outbuf
#if NC > OUTBUFSIZ
    error cannot overlay c_len and outbuf
#endif
]]></Text>
  </Snippet>
  <Snippet id="C7E3889561099738FA5EF6BD00241FF0#unlzh.c:96:96">
    <File>unlzh.c</File>
    <StartLine>93</StartLine>
    <EndLine>99</EndLine>
    <Text><![CDATA[local ush pt_table[256];

/* local ush c_table[4096]; */
#define c_table d_buf
#if (DIST_BUFSIZE-1) < 4095
    error cannot overlay c_table and d_buf
#endif
]]></Text>
  </Snippet>
  <Snippet id="6CC20786D00036955A348DF36E82EB0C#unlzh.c:112:112">
    <File>unlzh.c</File>
    <StartLine>109</StartLine>
    <EndLine>115</EndLine>
    <Text><![CDATA[local void fillbuf(n)  /* Shift bitbuf n bits left, read n bits */
    int n;
{
    bitbuf <<= n;
    while (n > bitcount) {
	bitbuf |= subbitbuf << (n -= bitcount);
	subbitbuf = (unsigned)try_byte();
]]></Text>
  </Snippet>
  <Snippet id="A0C39C2890F1C9235A3F3156112FBD6A#unlzh.c:115:115">
    <File>unlzh.c</File>
    <StartLine>112</StartLine>
    <EndLine>118</EndLine>
    <Text><![CDATA[    bitbuf <<= n;
    while (n > bitcount) {
	bitbuf |= subbitbuf << (n -= bitcount);
	subbitbuf = (unsigned)try_byte();
	if ((int)subbitbuf == EOF) subbitbuf = 0;
	bitcount = CHAR_BIT;
    }
]]></Text>
  </Snippet>
  <Snippet id="19E6CB511726E654A4D4CE5CB336868F#unlzh.c:119:119">
    <File>unlzh.c</File>
    <StartLine>116</StartLine>
    <EndLine>122</EndLine>
    <Text><![CDATA[	if ((int)subbitbuf == EOF) subbitbuf = 0;
	bitcount = CHAR_BIT;
    }
    bitbuf |= subbitbuf >> (bitcount -= n);
}

local unsigned getbits(n)
]]></Text>
  </Snippet>
  <Snippet id="14435B8E1F37CC24EA2EB27F51758FE9#unlzh.c:127:127">
    <File>unlzh.c</File>
    <StartLine>124</StartLine>
    <EndLine>130</EndLine>
    <Text><![CDATA[{
    unsigned x;

    x = bitbuf >> (BITBUFSIZ - n);  fillbuf(n);
    return x;
}

]]></Text>
  </Snippet>
  <Snippet id="074B91C1FDACAC4A1AFFBEE5B9CA668F#unlzh.c:128:128">
    <File>unlzh.c</File>
    <StartLine>125</StartLine>
    <EndLine>131</EndLine>
    <Text><![CDATA[    unsigned x;

    x = bitbuf >> (BITBUFSIZ - n);  fillbuf(n);
    return x;
}

local void init_getbits()
]]></Text>
  </Snippet>
  <Snippet id="B7D6702B86F3D0C33568F095D6A92D0E#unlzh.c:147:147">
    <File>unlzh.c</File>
    <StartLine>144</StartLine>
    <EndLine>150</EndLine>
    <Text><![CDATA[    int tablebits;
    ush table[];
{
    ush count[17], weight[17], start[18], *p;
    unsigned i, k, len, ch, jutbits, avail, nextcode, mask;

    for (i = 1; i <= 16; i++) count[i] = 0;
]]></Text>
  </Snippet>
  <Snippet id="BA14D06974758F2B98276B0CDE1F0096#unlzh.c:151:151">
    <File>unlzh.c</File>
    <StartLine>148</StartLine>
    <EndLine>154</EndLine>
    <Text><![CDATA[    unsigned i, k, len, ch, jutbits, avail, nextcode, mask;

    for (i = 1; i <= 16; i++) count[i] = 0;
    for (i = 0; i < (unsigned)nchar; i++) count[bitlen[i]]++;

    start[1] = 0;
    for (i = 1; i <= 16; i++)
]]></Text>
  </Snippet>
  <Snippet id="2C4EF7A3CDD788FFD8A2977784B163D0#unlzh.c:157:157">
    <File>unlzh.c</File>
    <StartLine>154</StartLine>
    <EndLine>160</EndLine>
    <Text><![CDATA[    for (i = 1; i <= 16; i++)
	start[i + 1] = start[i] + (count[i] << (16 - i));
    if ((start[17] & 0xffff) != 0)
	error("Bad table\n");

    jutbits = 16 - tablebits;
    for (i = 1; i <= (unsigned)tablebits; i++) {
]]></Text>
  </Snippet>
  <Snippet id="F9AB640BC95CD96484F08BCADD520B99#unlzh.c:221:221">
    <File>unlzh.c</File>
    <StartLine>218</StartLine>
    <EndLine>224</EndLine>
    <Text><![CDATA[    } else {
	i = 0;
	while (i < n) {
	    c = bitbuf >> (BITBUFSIZ - 3);
	    if (c == 7) {
		mask = (unsigned) 1 << (BITBUFSIZ - 1 - 3);
		while (mask & bitbuf) {  mask >>= 1;  c++;  }
]]></Text>
  </Snippet>
  <Snippet id="17A2C09D06FDEB2650167B73232C4B7E#unlzh.c:227:227">
    <File>unlzh.c</File>
    <StartLine>224</StartLine>
    <EndLine>230</EndLine>
    <Text><![CDATA[		while (mask & bitbuf) {  mask >>= 1;  c++;  }
	    }
	    fillbuf((c < 7) ? 3 : c - 3);
	    pt_len[i++] = c;
	    if (i == i_special) {
		c = getbits(2);
		while (--c >= 0) pt_len[i++] = 0;
]]></Text>
  </Snippet>
  <Snippet id="6EF3BE8657A17B847953B7B4CADBD789#unlzh.c:234:234">
    <File>unlzh.c</File>
    <StartLine>231</StartLine>
    <EndLine>237</EndLine>
    <Text><![CDATA[	    }
	}
	while (i < nn) pt_len[i++] = 0;
	make_table(nn, pt_len, 8, pt_table);
    }
}

]]></Text>
  </Snippet>
  <Snippet id="34D1DC65B72F97B4A73C38B704A10750#unlzh.c:245:245">
    <File>unlzh.c</File>
    <StartLine>242</StartLine>
    <EndLine>248</EndLine>
    <Text><![CDATA[
    n = getbits(CBIT);
    if (n == 0) {
	c = getbits(CBIT);
	for (i = 0; i < NC; i++) c_len[i] = 0;
	for (i = 0; i < 4096; i++) c_table[i] = c;
    } else {
]]></Text>
  </Snippet>
  <Snippet id="1CF69A0A817A292343AFA008F8307FF5#unlzh.c:247:247">
    <File>unlzh.c</File>
    <StartLine>244</StartLine>
    <EndLine>250</EndLine>
    <Text><![CDATA[    if (n == 0) {
	c = getbits(CBIT);
	for (i = 0; i < NC; i++) c_len[i] = 0;
	for (i = 0; i < 4096; i++) c_table[i] = c;
    } else {
	i = 0;
	while (i < n) {
]]></Text>
  </Snippet>
  <Snippet id="C1852035D3F969F268FBE95D4A1AE06D#unlzh.c:256:256">
    <File>unlzh.c</File>
    <StartLine>253</StartLine>
    <EndLine>259</EndLine>
    <Text><![CDATA[		mask = (unsigned) 1 << (BITBUFSIZ - 1 - 8);
		do {
		    if (bitbuf & mask) c = right[c];
		    else               c = left [c];
		    mask >>= 1;
		} while (c >= NT);
	    }
]]></Text>
  </Snippet>
  <Snippet id="F9552660999083A69554B9C685A5EECD#unlzh.c:266:266">
    <File>unlzh.c</File>
    <StartLine>263</StartLine>
    <EndLine>269</EndLine>
    <Text><![CDATA[		else if (c == 1) c = getbits(4) + 3;
		else             c = getbits(CBIT) + 20;
		while (--c >= 0) c_len[i++] = 0;
	    } else c_len[i++] = c - 2;
	}
	while (i < NC) c_len[i++] = 0;
	make_table(NC, c_len, 12, c_table);
]]></Text>
  </Snippet>
  <Snippet id="AD04094B8B91F98C68326252869A493B#unlzh.c:269:269">
    <File>unlzh.c</File>
    <StartLine>266</StartLine>
    <EndLine>272</EndLine>
    <Text><![CDATA[	    } else c_len[i++] = c - 2;
	}
	while (i < NC) c_len[i++] = 0;
	make_table(NC, c_len, 12, c_table);
    }
}

]]></Text>
  </Snippet>
  <Snippet id="3CCDE778A8454C8F6D5BAFCC95817CCA#unlzh.c:287:287">
    <File>unlzh.c</File>
    <StartLine>284</StartLine>
    <EndLine>290</EndLine>
    <Text><![CDATA[	read_pt_len(NP, PBIT, -1);
    }
    blocksize--;
    j = c_table[bitbuf >> (BITBUFSIZ - 12)];
    if (j >= NC) {
	mask = (unsigned) 1 << (BITBUFSIZ - 1 - 12);
	do {
]]></Text>
  </Snippet>
  <Snippet id="39E2D7097A73C1446EB8629292F10903#unlzh.c:292:292">
    <File>unlzh.c</File>
    <StartLine>289</StartLine>
    <EndLine>295</EndLine>
    <Text><![CDATA[	mask = (unsigned) 1 << (BITBUFSIZ - 1 - 12);
	do {
	    if (bitbuf & mask) j = right[j];
	    else               j = left [j];
	    mask >>= 1;
	} while (j >= NC);
    }
]]></Text>
  </Snippet>
  <Snippet id="5561FE50B72268D6733265FE4ED273BE#unlzh.c:296:296">
    <File>unlzh.c</File>
    <StartLine>293</StartLine>
    <EndLine>299</EndLine>
    <Text><![CDATA[	    mask >>= 1;
	} while (j >= NC);
    }
    fillbuf((int) c_len[j]);
    return j;
}

]]></Text>
  </Snippet>
  <Snippet id="E4E0DD93CFFAC3B9FE76011BB5F679B3#unlzh.c:297:297">
    <File>unlzh.c</File>
    <StartLine>294</StartLine>
    <EndLine>300</EndLine>
    <Text><![CDATA[	} while (j >= NC);
    }
    fillbuf((int) c_len[j]);
    return j;
}

local unsigned decode_p()
]]></Text>
  </Snippet>
  <Snippet id="F3DC05CA701EAF05D86E5357DDEEBEAF#unlzh.c:361:361">
    <File>unlzh.c</File>
    <StartLine>358</StartLine>
    <EndLine>364</EndLine>
    <Text><![CDATA[	if (++r == count) return r;
    }
    for ( ; ; ) {
	c = decode_c();
	if (c == NC) {
	    done = 1;
	    return r;
]]></Text>
  </Snippet>
  <Snippet id="7BEC808D97888314E892B15D44447964#unlzh.c:370:370">
    <File>unlzh.c</File>
    <StartLine>367</StartLine>
    <EndLine>373</EndLine>
    <Text><![CDATA[	    buffer[r] = c;
	    if (++r == count) return r;
	} else {
	    j = c - (UCHAR_MAX + 1 - THRESHOLD);
	    i = (r - decode_p() - 1) & (DICSIZ - 1);
	    while (--j >= 0) {
		buffer[r] = buffer[i];
]]></Text>
  </Snippet>
  <Snippet id="86C7BBD52BB70BA18B4CCED065F3AB6B#unlzh.c:372:372">
    <File>unlzh.c</File>
    <StartLine>369</StartLine>
    <EndLine>375</EndLine>
    <Text><![CDATA[	} else {
	    j = c - (UCHAR_MAX + 1 - THRESHOLD);
	    i = (r - decode_p() - 1) & (DICSIZ - 1);
	    while (--j >= 0) {
		buffer[r] = buffer[i];
		i = (i + 1) & (DICSIZ - 1);
		if (++r == count) return r;
]]></Text>
  </Snippet>
  <Snippet id="CB766819C39ADCF00C939A3D4DC2D2E9#unlzh.c:373:373">
    <File>unlzh.c</File>
    <StartLine>370</StartLine>
    <EndLine>376</EndLine>
    <Text><![CDATA[	    j = c - (UCHAR_MAX + 1 - THRESHOLD);
	    i = (r - decode_p() - 1) & (DICSIZ - 1);
	    while (--j >= 0) {
		buffer[r] = buffer[i];
		i = (i + 1) & (DICSIZ - 1);
		if (++r == count) return r;
	    }
]]></Text>
  </Snippet>
  <Snippet id="FAB1732A6B6AC4E5CFCC880DEFB1C5AC#unlzw.c:158:158">
    <File>unlzw.c</File>
    <StartLine>155</StartLine>
    <EndLine>161</EndLine>
    <Text><![CDATA[   }
#else
#  define input(b,o,c,n,m){ \
     REG1 char_type *p = &(b)[(o)>>3]; \
     (c) = ((((long)(p[0]))|((long)(p[1])<<8)| \
     ((long)(p[2])<<16))>>((o)&0x7))&(m); \
     (o) += (n); \
]]></Text>
  </Snippet>
  <Snippet id="5BCB9A3BC0A1E8E72FE49AE058A0BD7A#unlzw.c:255:255">
    <File>unlzw.c</File>
    <StartLine>252</StartLine>
    <EndLine>258</EndLine>
    <Text><![CDATA[	e = insize-(o = (posbits>>3));
	
	for (i = 0 ; i < e ; ++i) {
	    inbuf[i] = inbuf[i+o];
	}
	insize = e;
	posbits = 0;
]]></Text>
  </Snippet>
  <Snippet id="FFDA64ED16C447A04767F62DEC40274A#unlzw.c:261:261">
    <File>unlzw.c</File>
    <StartLine>258</StartLine>
    <EndLine>264</EndLine>
    <Text><![CDATA[	posbits = 0;
	
	if (insize < INBUF_EXTRA) {
	    if ((rsize = read(in, (char*)inbuf+insize, INBUFSIZ)) == EOF) {
		read_error();
	    }
	    insize += rsize;
]]></Text>
  </Snippet>
  <Snippet id="764D7C5D867511BC75472CD95DF718FA#unlzw.c:283:283">
    <File>unlzw.c</File>
    <StartLine>280</StartLine>
    <EndLine>286</EndLine>
    <Text><![CDATA[		bitmask = (1<<n_bits)-1;
		goto resetbuf;
	    }
	    input(inbuf,posbits,code,n_bits,bitmask);
	    Tracev((stderr, "%d ", code));

	    if (oldcode == -1) {
]]></Text>
  </Snippet>
  <Snippet id="B250C48EA4F957E0357897DB54FFD4DD#unlzw.c:287:287">
    <File>unlzw.c</File>
    <StartLine>284</StartLine>
    <EndLine>290</EndLine>
    <Text><![CDATA[	    Tracev((stderr, "%d ", code));

	    if (oldcode == -1) {
		if (code >= 256) error("corrupt input.");
		outbuf[outpos++] = (char_type)(finchar = (int)(oldcode=code));
		continue;
	    }
]]></Text>
  </Snippet>
  <Snippet id="F3D02752260FF3D27E323EAE9E2F31CC#unlzw.c:288:288">
    <File>unlzw.c</File>
    <StartLine>285</StartLine>
    <EndLine>291</EndLine>
    <Text><![CDATA[
	    if (oldcode == -1) {
		if (code >= 256) error("corrupt input.");
		outbuf[outpos++] = (char_type)(finchar = (int)(oldcode=code));
		continue;
	    }
	    if (code == CLEAR && block_mode) {
]]></Text>
  </Snippet>
  <Snippet id="714F93D2B3E62D65197138A525AA9B2F#unlzw.c:321:321">
    <File>unlzw.c</File>
    <StartLine>318</StartLine>
    <EndLine>324</EndLine>
    <Text><![CDATA[			write_buf(out, (char*)outbuf, outpos);
			bytes_out += (ulg)outpos;
		    }
		    error(to_stdout ? "corrupt input." :
			  "corrupt input. Use zcat to recover some data.");
		}
		*--stackp = (char_type)finchar;
]]></Text>
  </Snippet>
  <Snippet id="689ECBB77B2633FA4B8895BC7F71A150#unlzw.c:333:333">
    <File>unlzw.c</File>
    <StartLine>330</StartLine>
    <EndLine>336</EndLine>
    <Text><![CDATA[		*--stackp = tab_suffixof(code);
		code = tab_prefixof(code);
	    }
	    *--stackp =	(char_type)(finchar = tab_suffixof(code));
	    
	    /* And put them out in forward order */
	    {
]]></Text>
  </Snippet>
  <Snippet id="38AB09C51A5B086FB37BB8BC6DD42ECE#unlzw.c:339:339">
    <File>unlzw.c</File>
    <StartLine>336</StartLine>
    <EndLine>342</EndLine>
    <Text><![CDATA[	    {
		REG1 int	i;
	    
		if (outpos+(i = (de_stack-stackp)) >= OUTBUFSIZ) {
		    do {
			if (i > OUTBUFSIZ-outpos) i = OUTBUFSIZ-outpos;

]]></Text>
  </Snippet>
  <Snippet id="C7A93D179F2E8BF68527EA4BD61B0BD3#unlzw.c:344:344">
    <File>unlzw.c</File>
    <StartLine>341</StartLine>
    <EndLine>347</EndLine>
    <Text><![CDATA[			if (i > OUTBUFSIZ-outpos) i = OUTBUFSIZ-outpos;

			if (i > 0) {
			    memcpy(outbuf+outpos, stackp, i);
			    outpos += i;
			}
			if (outpos >= OUTBUFSIZ) {
]]></Text>
  </Snippet>
  <Snippet id="DDA9FEE6E39BAF504E267426892CA07B#unlzw.c:357:357">
    <File>unlzw.c</File>
    <StartLine>354</StartLine>
    <EndLine>360</EndLine>
    <Text><![CDATA[			stackp+= i;
		    } while ((i = (de_stack-stackp)) > 0);
		} else {
		    memcpy(outbuf+outpos, stackp, i);
		    outpos += i;
		}
	    }
]]></Text>
  </Snippet>
  <Snippet id="9E1C54009A87FA70DDE5A39A2045B4CE#unlzw.c:364:364">
    <File>unlzw.c</File>
    <StartLine>361</StartLine>
    <EndLine>367</EndLine>
    <Text><![CDATA[
	    if ((code = free_ent) < maxmaxcode) { /* Generate the new entry. */

		tab_prefixof(code) = (unsigned short)oldcode;
		tab_suffixof(code) = (char_type)finchar;
		free_ent = code+1;
	    } 
]]></Text>
  </Snippet>
  <Snippet id="2F3D5D48552BEC92BB2370084C08AEC6#unpack.c:40:40">
    <File>unpack.c</File>
    <StartLine>37</StartLine>
    <EndLine>43</EndLine>
    <Text><![CDATA[ * represented.
 */

local int lit_base[MAX_BITLEN+1];
/* All literals of a given bit length are contiguous in literal[] and
 * have contiguous codes. literal[code+lit_base[len]] is the literal
 * for a code of len bits.
]]></Text>
  </Snippet>
  <Snippet id="C31275E44A4DB86AE75771FBF5A2F80D#unpack.c:47:47">
    <File>unpack.c</File>
    <StartLine>44</StartLine>
    <EndLine>50</EndLine>
    <Text><![CDATA[ */

local int leaves [MAX_BITLEN+1]; /* Number of leaves for each bit length */
local int parents[MAX_BITLEN+1]; /* Number of parents for each bit length */

local int peek_bits; /* Number of peek bits currently used */

]]></Text>
  </Snippet>
  <Snippet id="428E391857936D7EB93DC55E45837DDC#unpack.c:104:104">
    <File>unpack.c</File>
    <StartLine>101</StartLine>
    <EndLine>107</EndLine>
    <Text><![CDATA[    orig_len = 0;
    for (n = 1; n <= 4; n++) orig_len = (orig_len << 8) | (ulg)get_byte();

    max_len = (int)get_byte(); /* maximum bit length of Huffman codes */
    if (max_len > MAX_BITLEN) {
	error("invalid compressed data -- Huffman code > 32 bits");
    }
]]></Text>
  </Snippet>
  <Snippet id="E832F2B6F411894ACAC216248F3ADD80#unpack.c:106:106">
    <File>unpack.c</File>
    <StartLine>103</StartLine>
    <EndLine>109</EndLine>
    <Text><![CDATA[
    max_len = (int)get_byte(); /* maximum bit length of Huffman codes */
    if (max_len > MAX_BITLEN) {
	error("invalid compressed data -- Huffman code > 32 bits");
    }

    /* Get the number of leaves at each bit length */
]]></Text>
  </Snippet>
  <Snippet id="F41D42CC331EB151F2DD3DC9EE4F9417#unpack.c:116:116">
    <File>unpack.c</File>
    <StartLine>113</StartLine>
    <EndLine>119</EndLine>
    <Text><![CDATA[	n += leaves[len];
    }
    if (n > LITERALS) {
	error("too many leaves in Huffman tree");
    }
    Trace((stderr, "orig_len %ld, max_len %d, leaves %d\n",
	   orig_len, max_len, n));
]]></Text>
  </Snippet>
  <Snippet id="D712FA26B0B4A75C535C509E551A683B#unpack.c:136:136">
    <File>unpack.c</File>
    <StartLine>133</StartLine>
    <EndLine>139</EndLine>
    <Text><![CDATA[	lit_base[len] = base;
	/* And read the literals: */
	for (n = leaves[len]; n > 0; n--) {
	    literal[base++] = (uch)get_byte();
	}
    }
    leaves[max_len]++; /* Now include the EOB code in the Huffman tree */
]]></Text>
  </Snippet>
  <Snippet id="94FB3DEC26E1A58B14071039AABEEECB#unpack.c:151:151">
    <File>unpack.c</File>
    <StartLine>148</StartLine>
    <EndLine>154</EndLine>
    <Text><![CDATA[    int len;       /* current bit length */
    uch *prefixp;  /* pointer in prefix_len */

    for (len = max_len; len >= 1; len--) {
	/* The number of parent nodes at this level is half the total
	 * number of nodes at parent level:
	 */
]]></Text>
  </Snippet>
  <Snippet id="BDB1DFCE6183C33F4F335C602C1F5E6C#unpack.c:156:156">
    <File>unpack.c</File>
    <StartLine>153</StartLine>
    <EndLine>159</EndLine>
    <Text><![CDATA[	 * number of nodes at parent level:
	 */
	nodes >>= 1;
	parents[len] = nodes;
	/* Update lit_base by the appropriate bias to skip the parent nodes
	 * (which are not represented in the literal array):
	 */
]]></Text>
  </Snippet>
  <Snippet id="086BABF968186E256A6B4F08A3E6725E#unpack.c:160:160">
    <File>unpack.c</File>
    <StartLine>157</StartLine>
    <EndLine>163</EndLine>
    <Text><![CDATA[	/* Update lit_base by the appropriate bias to skip the parent nodes
	 * (which are not represented in the literal array):
	 */
	lit_base[len] -= nodes;
	/* Restore nodes to be parents+leaves: */
	nodes += leaves[len];
    }
]]></Text>
  </Snippet>
  <Snippet id="B2CB3F14CE942079B0CFD3603F52071C#unpack.c:227:227">
    <File>unpack.c</File>
    <StartLine>224</StartLine>
    <EndLine>230</EndLine>
    <Text><![CDATA[	}
	/* At this point, peek is the next complete code, of len bits */
	if (peek == eob && len == max_len) break; /* end of file? */
	put_ubyte(literal[peek+lit_base[len]]);
	Tracev((stderr,"%02d %04x %c\n", len, peek,
		literal[peek+lit_base[len]]));
	skip_bits(len);
]]></Text>
  </Snippet>
  <Snippet id="B4C71BB8ADCB2DD54141DFA5A2120D3D#unpack.c:236:236">
    <File>unpack.c</File>
    <StartLine>233</StartLine>
    <EndLine>239</EndLine>
    <Text><![CDATA[    flush_window();
    Trace((stderr, "bytes_out %ld\n", bytes_out));
    if (orig_len != (ulg)bytes_out) {
	error("invalid compressed data--length error");
    }
    return OK;
}
]]></Text>
  </Snippet>
  <Snippet id="814DBF38A5AF4C361061784A6D6945B0#unzip.c:123:123">
    <File>unzip.c</File>
    <StartLine>120</StartLine>
    <EndLine>126</EndLine>
    <Text><![CDATA[	int res = inflate();

	if (res == 3) {
	    error("out of memory");
	} else if (res != 0) {
	    error("invalid compressed data--format violated");
	}
]]></Text>
  </Snippet>
  <Snippet id="2169445FF88E7E4C5247A3F871C22A07#unzip.c:125:125">
    <File>unzip.c</File>
    <StartLine>122</StartLine>
    <EndLine>128</EndLine>
    <Text><![CDATA[	if (res == 3) {
	    error("out of memory");
	} else if (res != 0) {
	    error("invalid compressed data--format violated");
	}

    } else if (pkzip && method == STORED) {
]]></Text>
  </Snippet>
  <Snippet id="3522DC1CB5C4B51E0801D97BC6EA4CBC#unzip.c:135:135">
    <File>unzip.c</File>
    <StartLine>132</StartLine>
    <EndLine>138</EndLine>
    <Text><![CDATA[	if (n != LG(inbuf + LOCSIZ) - (decrypt ? RAND_HEAD_LEN : 0)) {

	    fprintf(stderr, "len %ld, siz %ld\n", n, LG(inbuf + LOCSIZ));
	    error("invalid compressed data--length mismatch");
	}
	while (n--) {
	    uch c = (uch)get_byte();
]]></Text>
  </Snippet>
  <Snippet id="8FCDFFB3593F1F3CAC51B583B0132C73#unzip.c:138:138">
    <File>unzip.c</File>
    <StartLine>135</StartLine>
    <EndLine>141</EndLine>
    <Text><![CDATA[	    error("invalid compressed data--length mismatch");
	}
	while (n--) {
	    uch c = (uch)get_byte();
#ifdef CRYPT
	    if (decrypt) zdecode(c);
#endif
]]></Text>
  </Snippet>
  <Snippet id="C02F9CAE26DA80F6F1AC622F549B3301#unzip.c:142:142">
    <File>unzip.c</File>
    <StartLine>139</StartLine>
    <EndLine>145</EndLine>
    <Text><![CDATA[#ifdef CRYPT
	    if (decrypt) zdecode(c);
#endif
	    put_ubyte(c);
	}
	flush_window();
    } else {
]]></Text>
  </Snippet>
  <Snippet id="46F945612C264A0C9C7B2131B0BF7589#unzip.c:146:146">
    <File>unzip.c</File>
    <StartLine>143</StartLine>
    <EndLine>149</EndLine>
    <Text><![CDATA[	}
	flush_window();
    } else {
	error("internal error, invalid method");
    }

    /* Get the crc and original length */
]]></Text>
  </Snippet>
  <Snippet id="5BAF463AC7DCD78A25471E886260B538#unzip.c:175:175">
    <File>unzip.c</File>
    <StartLine>172</StartLine>
    <EndLine>178</EndLine>
    <Text><![CDATA[
    /* Validate decompression */
    if (orig_crc != updcrc(outbuf, 0)) {
	error("invalid compressed data--crc error");
    }
    if (orig_len != (ulg)bytes_out) {
	error("invalid compressed data--length error");
]]></Text>
  </Snippet>
  <Snippet id="A0AE0551004F48FEA2BE69A3C9A3EDEC#unzip.c:178:178">
    <File>unzip.c</File>
    <StartLine>175</StartLine>
    <EndLine>181</EndLine>
    <Text><![CDATA[	error("invalid compressed data--crc error");
    }
    if (orig_len != (ulg)bytes_out) {
	error("invalid compressed data--length error");
    }

    /* Check if there are more entries in a pkzip file */
]]></Text>
  </Snippet>
  <Snippet id="67F52C7786819138A6C2039ECFF9646F#util.c:46:46">
    <File>util.c</File>
    <StartLine>43</StartLine>
    <EndLine>49</EndLine>
    <Text><![CDATA[    while (insize != 0 && (int)insize != EOF) {
	write_buf(out, (char*)inbuf, insize);
	bytes_out += insize;
	insize = read(in, (char*)inbuf, INBUFSIZ);
    }
    if ((int)insize == EOF && errno != 0) {
	read_error();
]]></Text>
  </Snippet>
  <Snippet id="1BAF7F06F879AC4BCD4ECDDDE1990502#util.c:102:102">
    <File>util.c</File>
    <StartLine>99</StartLine>
    <EndLine>105</EndLine>
    <Text><![CDATA[    insize = 0;
    errno = 0;
    do {
	len = read(ifd, (char*)inbuf+insize, INBUFSIZ-insize);
        if (len == 0 || len == EOF) break;
	insize += len;
    } while (insize < INBUFSIZ);
]]></Text>
  </Snippet>
  <Snippet id="74C7D7EF55F13D54210C0CA28CC6E8D8#util.c:113:113">
    <File>util.c</File>
    <StartLine>110</StartLine>
    <EndLine>116</EndLine>
    <Text><![CDATA[    }
    bytes_in += (ulg)insize;
    inptr = 1;
    return inbuf[0];
}

/* ===========================================================================
]]></Text>
  </Snippet>
  <Snippet id="CEFAAED028B42B2655CD4016E58B6565#util.c:197:197">
    <File>util.c</File>
    <StartLine>194</StartLine>
    <EndLine>200</EndLine>
    <Text><![CDATA[    if ((p = strrchr(fname, SUFFIX_SEP)) != NULL) *p = '\0';
#endif
    if (casemap('A') == 'a') strlwr(fname);
    return fname;
}

/* ========================================================================
]]></Text>
  </Snippet>
  <Snippet id="2F4791F4250AD22C3772A1C879B33033#util.c:290:290">
    <File>util.c</File>
    <StartLine>287</StartLine>
    <EndLine>293</EndLine>
    <Text><![CDATA[    int	 oargc = *argcp; /* old argc */
    int  nargc = 0;      /* number of arguments in env variable */

    env = (char*)getenv(env);
    if (env == NULL) return NULL;

    p = (char*)xmalloc(strlen(env)+1);
]]></Text>
  </Snippet>
  <Snippet id="F9C3D466CCA10E83B80340FDDEB49931#util.c:293:293">
    <File>util.c</File>
    <StartLine>290</StartLine>
    <EndLine>296</EndLine>
    <Text><![CDATA[    env = (char*)getenv(env);
    if (env == NULL) return NULL;

    p = (char*)xmalloc(strlen(env)+1);
    env = strcpy(p, env);                    /* keep env variable intact */

    for (p = env; *p; nargc++ ) {            /* move through env */
]]></Text>
  </Snippet>
  <Snippet id="48E9BE42F868B43FEBB11D1985CC7ED5#util.c:294:294">
    <File>util.c</File>
    <StartLine>291</StartLine>
    <EndLine>297</EndLine>
    <Text><![CDATA[    if (env == NULL) return NULL;

    p = (char*)xmalloc(strlen(env)+1);
    env = strcpy(p, env);                    /* keep env variable intact */

    for (p = env; *p; nargc++ ) {            /* move through env */
	p += strspn(p, SEPARATOR);	     /* skip leading separators */
]]></Text>
  </Snippet>
  <Snippet id="82BB6BEE501297E7DFBCC9A2B0CD04A4#util.c:307:307">
    <File>util.c</File>
    <StartLine>304</StartLine>
    <EndLine>310</EndLine>
    <Text><![CDATA[	free(env);
	return NULL;
    }
    *argcp += nargc;
    /* Allocate the new argv array, with an extra element just in case
     * the original arg list did not end with a NULL.
     */
]]></Text>
  </Snippet>
  <Snippet id="7E23C31018F20CBCB81AEB098BD99D1C#util.c:311:311">
    <File>util.c</File>
    <StartLine>308</StartLine>
    <EndLine>314</EndLine>
    <Text><![CDATA[    /* Allocate the new argv array, with an extra element just in case
     * the original arg list did not end with a NULL.
     */
    nargv = (char**)calloc(*argcp+1, sizeof(char *));
    if (nargv == NULL) error("out of memory");
    oargv  = *argvp;
    *argvp = nargv;
]]></Text>
  </Snippet>
  <Snippet id="FB27177FE5B7A5B34A6B078118AEDDD3#util.c:312:312">
    <File>util.c</File>
    <StartLine>309</StartLine>
    <EndLine>315</EndLine>
    <Text><![CDATA[     * the original arg list did not end with a NULL.
     */
    nargv = (char**)calloc(*argcp+1, sizeof(char *));
    if (nargv == NULL) error("out of memory");
    oargv  = *argvp;
    *argvp = nargv;

]]></Text>
  </Snippet>
  <Snippet id="A421080DB1451D8AF844A0AC4CE8770C#util.c:317:317">
    <File>util.c</File>
    <StartLine>314</StartLine>
    <EndLine>320</EndLine>
    <Text><![CDATA[    *argvp = nargv;

    /* Copy the program name first */
    if (oargc-- < 0) error("argc<=0");
    *(nargv++) = *(oargv++);

    /* Then copy the environment args */
]]></Text>
  </Snippet>
  <Snippet id="F75BCC893BA25FCAE57E92D952E63966#util.c:400:400">
    <File>util.c</File>
    <StartLine>397</StartLine>
    <EndLine>403</EndLine>
    <Text><![CDATA[voidp xmalloc (size)
    unsigned size;
{
    voidp cp = (voidp)malloc (size);

    if (cp == NULL) error("out of memory");
    return cp;
]]></Text>
  </Snippet>
  <Snippet id="4041F7F2148FCCF373E1AA27D683F416#util.c:402:402">
    <File>util.c</File>
    <StartLine>399</StartLine>
    <EndLine>405</EndLine>
    <Text><![CDATA[{
    voidp cp = (voidp)malloc (size);

    if (cp == NULL) error("out of memory");
    return cp;
}

]]></Text>
  </Snippet>
  <Snippet id="91A598AFD54B3542ACA92CEFF2FE552E#zip.c:55:55">
    <File>zip.c</File>
    <StartLine>52</StartLine>
    <EndLine>58</EndLine>
    <Text><![CDATA[	flags |= ORIG_NAME;
    }
    put_byte(flags);         /* general flags */
    put_long(time_stamp);

    /* Write deflated file to zip file */
    crc = updcrc(0, 0);
]]></Text>
  </Snippet>
  <Snippet id="B9E82D20447550CDC06E921B974663B7#zip.c:68:68">
    <File>zip.c</File>
    <StartLine>65</StartLine>
    <EndLine>71</EndLine>
    <Text><![CDATA[    put_byte(OS_CODE);            /* OS identifier */

    if (save_orig_name) {
	char *p = basename(ifname); /* Don't save the directory part. */
	do {
	    put_char(*p);
	} while (*p++);
]]></Text>
  </Snippet>
  <Snippet id="53453F703393045F211F8EB9A6707172#zip.c:70:70">
    <File>zip.c</File>
    <StartLine>67</StartLine>
    <EndLine>73</EndLine>
    <Text><![CDATA[    if (save_orig_name) {
	char *p = basename(ifname); /* Don't save the directory part. */
	do {
	    put_char(*p);
	} while (*p++);
    }
    header_bytes = (long)outcnt;
]]></Text>
  </Snippet>
  <Snippet id="148E1BD9052A35E09DA3B3CD11824344#zip.c:111:111">
    <File>zip.c</File>
    <StartLine>108</StartLine>
    <EndLine>114</EndLine>
    <Text><![CDATA[
    Assert(insize == 0, "inbuf not empty");

    len = read(ifd, buf, size);
    if (len == (unsigned)(-1) || len == 0) return (int)len;

    crc = updcrc((uch*)buf, len);
]]></Text>
  </Snippet>
</Snippets>
<ProgramData>
  <Sources>
    <SourceInstance ruleID="B095D0A3-820B-4493-BEC9-4255BCF24588">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1568" lineEnd="1568" colStart="12" colEnd="0"/>
        <Function name="fgets"/>
      </FunctionCall>
      <TaintFlags>
        <TaintFlag name="NULL_TERMINATED"/>
        <TaintFlag name="STREAM"/>
        <TaintFlag name="NO_NEW_LINE"/>
      </TaintFlags>
    </SourceInstance>
    <SourceInstance ruleID="5D9EC278-E87F-41BD-A29E-89813CCDE8E4">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1568" lineEnd="1568" colStart="12" colEnd="0"/>
        <Function name="fgets"/>
      </FunctionCall>
      <TaintFlags>
        <TaintFlag name="NULL_TERMINATED"/>
        <TaintFlag name="STREAM"/>
        <TaintFlag name="NO_NEW_LINE"/>
      </TaintFlags>
    </SourceInstance>
    <SourceInstance ruleID="054DFA59-0195-4AB2-B12C-C89C8650F4A5">
      <FunctionEntry>
        <SourceLocation path="gzip.c" line="424" lineEnd="424" colStart="0" colEnd="0"/>
        <Function name="main"/>
      </FunctionEntry>
      <TaintFlags>
        <TaintFlag name="NULL_TERMINATED"/>
        <TaintFlag name="ARGS"/>
      </TaintFlags>
    </SourceInstance>
    <SourceInstance ruleID="39DDF4FD-5A7A-4BFF-AEC4-05A8232615B1">
      <FunctionCall>
        <SourceLocation path="util.c" line="46" lineEnd="46" colStart="11" colEnd="0"/>
        <Function name="read"/>
      </FunctionCall>
      <TaintFlags>
        <TaintFlag name="NOT_NULL_TERMINATED"/>
        <TaintFlag name="STREAM"/>
      </TaintFlags>
    </SourceInstance>
    <SourceInstance ruleID="ACEDD018-EA76-47B9-A765-21CB8C6701DA">
      <FunctionCall>
        <SourceLocation path="util.c" line="290" lineEnd="290" colStart="11" colEnd="0"/>
        <Function name="getenv"/>
      </FunctionCall>
      <TaintFlags>
        <TaintFlag name="NULL_TERMINATED"/>
        <TaintFlag name="ENVIRONMENT"/>
      </TaintFlags>
    </SourceInstance>
    <SourceInstance ruleID="39DDF4FD-5A7A-4BFF-AEC4-05A8232615B1">
      <FunctionCall>
        <SourceLocation path="unlzw.c" line="261" lineEnd="261" colStart="19" colEnd="0"/>
        <Function name="read"/>
      </FunctionCall>
      <TaintFlags>
        <TaintFlag name="NOT_NULL_TERMINATED"/>
        <TaintFlag name="STREAM"/>
      </TaintFlags>
    </SourceInstance>
    <SourceInstance ruleID="39DDF4FD-5A7A-4BFF-AEC4-05A8232615B1">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1373" lineEnd="1373" colStart="17" colEnd="0"/>
        <Function name="read"/>
      </FunctionCall>
      <TaintFlags>
        <TaintFlag name="NOT_NULL_TERMINATED"/>
        <TaintFlag name="STREAM"/>
      </TaintFlags>
    </SourceInstance>
    <SourceInstance ruleID="39DDF4FD-5A7A-4BFF-AEC4-05A8232615B1">
      <FunctionCall>
        <SourceLocation path="zip.c" line="111" lineEnd="111" colStart="11" colEnd="0"/>
        <Function name="read"/>
      </FunctionCall>
      <TaintFlags>
        <TaintFlag name="NOT_NULL_TERMINATED"/>
        <TaintFlag name="STREAM"/>
      </TaintFlags>
    </SourceInstance>
    <SourceInstance ruleID="39DDF4FD-5A7A-4BFF-AEC4-05A8232615B1">
      <FunctionCall>
        <SourceLocation path="util.c" line="102" lineEnd="102" colStart="8" colEnd="0"/>
        <Function name="read"/>
      </FunctionCall>
      <TaintFlags>
        <TaintFlag name="NOT_NULL_TERMINATED"/>
        <TaintFlag name="STREAM"/>
      </TaintFlags>
    </SourceInstance>
  </Sources>
  <Sinks>
    <SinkInstance ruleID="3517F130-C453-4F87-9BBF-A3BAEE5E84FD">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="473" lineEnd="473" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="07D4345F-E134-4D03-A072-023A830140BC">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="473" lineEnd="473" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1564" lineEnd="1564" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1564" lineEnd="1564" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1564" lineEnd="1564" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="unlzw.c" line="225" lineEnd="225" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="unlzw.c" line="225" lineEnd="225" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="unlzw.c" line="225" lineEnd="225" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="375" lineEnd="375" colStart="16" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="375" lineEnd="375" colStart="16" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="375" lineEnd="375" colStart="16" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="3517F130-C453-4F87-9BBF-A3BAEE5E84FD">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="438" lineEnd="438" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="07D4345F-E134-4D03-A072-023A830140BC">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="438" lineEnd="438" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="638" lineEnd="638" colStart="5" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="638" lineEnd="638" colStart="5" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DACEC7D4-DE90-4CF6-8087-85F36298053F">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="979" lineEnd="979" colStart="16" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="EB091198-21F7-4DE9-9784-AC0917616944">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="979" lineEnd="979" colStart="16" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="909" lineEnd="909" colStart="2" colEnd="0"/>
        <Function name="unlink"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="util.c" line="362" lineEnd="362" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="util.c" line="362" lineEnd="362" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="util.c" line="362" lineEnd="362" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1554" lineEnd="1554" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1554" lineEnd="1554" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1554" lineEnd="1554" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="EB091198-21F7-4DE9-9784-AC0917616944">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1433" lineEnd="1433" colStart="13" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DACEC7D4-DE90-4CF6-8087-85F36298053F">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1433" lineEnd="1433" colStart="13" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="381" lineEnd="381" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="381" lineEnd="381" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="381" lineEnd="381" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="364" lineEnd="364" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="364" lineEnd="364" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="364" lineEnd="364" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1571" lineEnd="1571" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1571" lineEnd="1571" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1571" lineEnd="1571" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="EB091198-21F7-4DE9-9784-AC0917616944">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="435" lineEnd="435" colStart="15" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DACEC7D4-DE90-4CF6-8087-85F36298053F">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="435" lineEnd="435" colStart="15" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="util.c" line="294" lineEnd="294" colStart="11" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="util.c" line="294" lineEnd="294" colStart="11" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="util.c" line="390" lineEnd="390" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="util.c" line="390" lineEnd="390" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="util.c" line="390" lineEnd="390" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1551" lineEnd="1551" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1551" lineEnd="1551" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1551" lineEnd="1551" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B5084B1B-0E81-4C22-8B55-3CD558799A08">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1337" lineEnd="1337" colStart="6" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7C1C0F31-DD65-4D46-8A8D-A4D4EE2F1C5C">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1337" lineEnd="1337" colStart="6" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="0C76CFB3-D99D-4991-B9D6-5E861241F852">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1337" lineEnd="1337" colStart="6" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="3517F130-C453-4F87-9BBF-A3BAEE5E84FD">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="961" lineEnd="961" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="07D4345F-E134-4D03-A072-023A830140BC">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="961" lineEnd="961" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="util.c" line="346" lineEnd="346" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="util.c" line="346" lineEnd="346" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="util.c" line="346" lineEnd="346" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DAE45D1C-5AC1-4FBF-9C0A-562A2CE5B482">
      <FunctionCall>
        <SourceLocation path="inflate.c" line="403" lineEnd="403" colStart="33" colEnd="0"/>
        <Function name="malloc"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7EF7E5CD-5511-49A5-B57E-87F33F2C6C82">
      <FunctionCall>
        <SourceLocation path="inflate.c" line="403" lineEnd="403" colStart="33" colEnd="0"/>
        <Function name="malloc"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1097" lineEnd="1097" colStart="6" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1097" lineEnd="1097" colStart="6" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B5084B1B-0E81-4C22-8B55-3CD558799A08">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1384" lineEnd="1384" colStart="9" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7C1C0F31-DD65-4D46-8A8D-A4D4EE2F1C5C">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1384" lineEnd="1384" colStart="9" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="0C76CFB3-D99D-4991-B9D6-5E861241F852">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1384" lineEnd="1384" colStart="9" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="846" lineEnd="846" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="846" lineEnd="846" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="846" lineEnd="846" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="78E2C929-6A42-44B6-944C-3060D88998B4">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1500" lineEnd="1500" colStart="10" colEnd="0"/>
        <Function name="strrchr"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="A5A573EC-B5AF-4A6F-B154-67856C9F29B6">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1500" lineEnd="1500" colStart="10" colEnd="0"/>
        <Function name="strrchr"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="EB091198-21F7-4DE9-9784-AC0917616944">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="808" lineEnd="808" colStart="14" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DACEC7D4-DE90-4CF6-8087-85F36298053F">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="808" lineEnd="808" colStart="14" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="57A2DFD5-DA1E-451F-8DF0-BBA1CAAAC660">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1487" lineEnd="1487" colStart="13" colEnd="0"/>
        <Function name="strcspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="78E2C929-6A42-44B6-944C-3060D88998B4">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1487" lineEnd="1487" colStart="13" colEnd="0"/>
        <Function name="strcspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="92FE493F-7472-4B08-B79C-71A6043BB159">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1487" lineEnd="1487" colStart="13" colEnd="0"/>
        <Function name="strcspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="A5A573EC-B5AF-4A6F-B154-67856C9F29B6">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1487" lineEnd="1487" colStart="13" colEnd="0"/>
        <Function name="strcspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1487" lineEnd="1487" colStart="13" colEnd="0"/>
        <Function name="strcspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1487" lineEnd="1487" colStart="13" colEnd="0"/>
        <Function name="strcspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="831" lineEnd="831" colStart="18" colEnd="0"/>
        <Function name="unlink"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="78" lineEnd="78" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="78" lineEnd="78" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="78" lineEnd="78" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="764" lineEnd="764" colStart="35" colEnd="0"/>
        <Function name="open"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="util.c" line="300" lineEnd="300" colStart="7" colEnd="0"/>
        <Function name="strcspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="util.c" line="300" lineEnd="300" colStart="7" colEnd="0"/>
        <Function name="strcspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="A5A573EC-B5AF-4A6F-B154-67856C9F29B6">
      <FunctionCall>
        <SourceLocation path="util.c" line="300" lineEnd="300" colStart="7" colEnd="0"/>
        <Function name="strcspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="92FE493F-7472-4B08-B79C-71A6043BB159">
      <FunctionCall>
        <SourceLocation path="util.c" line="300" lineEnd="300" colStart="7" colEnd="0"/>
        <Function name="strcspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="78E2C929-6A42-44B6-944C-3060D88998B4">
      <FunctionCall>
        <SourceLocation path="util.c" line="300" lineEnd="300" colStart="7" colEnd="0"/>
        <Function name="strcspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="57A2DFD5-DA1E-451F-8DF0-BBA1CAAAC660">
      <FunctionCall>
        <SourceLocation path="util.c" line="300" lineEnd="300" colStart="7" colEnd="0"/>
        <Function name="strcspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="07D4345F-E134-4D03-A072-023A830140BC">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1096" lineEnd="1096" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="3517F130-C453-4F87-9BBF-A3BAEE5E84FD">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1096" lineEnd="1096" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1621" lineEnd="1621" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1621" lineEnd="1621" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1621" lineEnd="1621" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="util.c" line="339" lineEnd="339" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="util.c" line="339" lineEnd="339" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="util.c" line="339" lineEnd="339" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="07D4345F-E134-4D03-A072-023A830140BC">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="981" lineEnd="981" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="3517F130-C453-4F87-9BBF-A3BAEE5E84FD">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="981" lineEnd="981" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1106" lineEnd="1106" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1106" lineEnd="1106" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1106" lineEnd="1106" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="EB091198-21F7-4DE9-9784-AC0917616944">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="523" lineEnd="523" colStart="21" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DACEC7D4-DE90-4CF6-8087-85F36298053F">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="523" lineEnd="523" colStart="21" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="366" lineEnd="366" colStart="16" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="366" lineEnd="366" colStart="16" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="366" lineEnd="366" colStart="16" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="513" lineEnd="513" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="513" lineEnd="513" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="513" lineEnd="513" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="383" lineEnd="383" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="383" lineEnd="383" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="383" lineEnd="383" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1578" lineEnd="1578" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1578" lineEnd="1578" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1578" lineEnd="1578" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="util.c" line="355" lineEnd="355" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="util.c" line="355" lineEnd="355" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="util.c" line="355" lineEnd="355" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1741" lineEnd="1741" colStart="8" colEnd="0"/>
        <Function name="unlink"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1577" lineEnd="1577" colStart="9" colEnd="0"/>
        <Function name="unlink"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="EB091198-21F7-4DE9-9784-AC0917616944">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="807" lineEnd="807" colStart="42" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DACEC7D4-DE90-4CF6-8087-85F36298053F">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="807" lineEnd="807" colStart="42" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B76AF690-4A38-49AA-B219-A44001C42021">
      <FunctionCall>
        <SourceLocation path="util.c" line="311" lineEnd="311" colStart="21" colEnd="0"/>
        <Function name="calloc"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="0B138A51-FDDD-4FA6-A615-70B8C0EC87DA">
      <FunctionCall>
        <SourceLocation path="util.c" line="311" lineEnd="311" colStart="21" colEnd="0"/>
        <Function name="calloc"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B5084B1B-0E81-4C22-8B55-3CD558799A08">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1386" lineEnd="1386" colStart="5" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7C1C0F31-DD65-4D46-8A8D-A4D4EE2F1C5C">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1386" lineEnd="1386" colStart="5" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="0C76CFB3-D99D-4991-B9D6-5E861241F852">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1386" lineEnd="1386" colStart="5" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1603" lineEnd="1603" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1603" lineEnd="1603" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1603" lineEnd="1603" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="EB091198-21F7-4DE9-9784-AC0917616944">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1035" lineEnd="1035" colStart="12" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DACEC7D4-DE90-4CF6-8087-85F36298053F">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1035" lineEnd="1035" colStart="12" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1197" lineEnd="1197" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1197" lineEnd="1197" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1197" lineEnd="1197" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="78E2C929-6A42-44B6-944C-3060D88998B4">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1484" lineEnd="1484" colStart="6" colEnd="0"/>
        <Function name="strrchr"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="A5A573EC-B5AF-4A6F-B154-67856C9F29B6">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1484" lineEnd="1484" colStart="6" colEnd="0"/>
        <Function name="strrchr"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1076" lineEnd="1076" colStart="5" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1076" lineEnd="1076" colStart="5" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="inflate.c" line="841" lineEnd="841" colStart="7" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="inflate.c" line="841" lineEnd="841" colStart="7" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="inflate.c" line="841" lineEnd="841" colStart="7" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="2CDEE4FB-1160-4FA2-AB1E-D9EE81805344">
      <FunctionCall>
        <SourceLocation path="zip.c" line="68" lineEnd="68" colStart="12" colEnd="0"/>
        <Function name="basename"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C9422508-6631-46E0-94DB-36E57C2B05E0">
      <FunctionCall>
        <SourceLocation path="zip.c" line="68" lineEnd="68" colStart="12" colEnd="0"/>
        <Function name="basename"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1231" lineEnd="1231" colStart="3" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1231" lineEnd="1231" colStart="3" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1231" lineEnd="1231" colStart="3" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="524" lineEnd="524" colStart="13" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="524" lineEnd="524" colStart="13" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="D0E5A040-08C0-4DA5-ACA1-357162AA5501">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="487" lineEnd="487" colStart="16" colEnd="0"/>
        <Function name="atoi"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="891858C5-11F3-4593-A63E-1F1A8E966FED">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="487" lineEnd="487" colStart="16" colEnd="0"/>
        <Function name="atoi"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C9422508-6631-46E0-94DB-36E57C2B05E0">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="434" lineEnd="434" colStart="16" colEnd="0"/>
        <Function name="basename"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="2CDEE4FB-1160-4FA2-AB1E-D9EE81805344">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="434" lineEnd="434" colStart="16" colEnd="0"/>
        <Function name="basename"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="569" lineEnd="569" colStart="9" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="569" lineEnd="569" colStart="9" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="569" lineEnd="569" colStart="9" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1638" lineEnd="1638" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1638" lineEnd="1638" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1638" lineEnd="1638" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DACEC7D4-DE90-4CF6-8087-85F36298053F">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="977" lineEnd="977" colStart="12" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="EB091198-21F7-4DE9-9784-AC0917616944">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="977" lineEnd="977" colStart="12" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1563" lineEnd="1563" colStart="2" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1563" lineEnd="1563" colStart="2" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="util.c" line="297" lineEnd="297" colStart="7" colEnd="0"/>
        <Function name="strspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="util.c" line="297" lineEnd="297" colStart="7" colEnd="0"/>
        <Function name="strspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="A5A573EC-B5AF-4A6F-B154-67856C9F29B6">
      <FunctionCall>
        <SourceLocation path="util.c" line="297" lineEnd="297" colStart="7" colEnd="0"/>
        <Function name="strspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="92FE493F-7472-4B08-B79C-71A6043BB159">
      <FunctionCall>
        <SourceLocation path="util.c" line="297" lineEnd="297" colStart="7" colEnd="0"/>
        <Function name="strspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="78E2C929-6A42-44B6-944C-3060D88998B4">
      <FunctionCall>
        <SourceLocation path="util.c" line="297" lineEnd="297" colStart="7" colEnd="0"/>
        <Function name="strspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="57A2DFD5-DA1E-451F-8DF0-BBA1CAAAC660">
      <FunctionCall>
        <SourceLocation path="util.c" line="297" lineEnd="297" colStart="7" colEnd="0"/>
        <Function name="strspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1009" lineEnd="1009" colStart="5" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1009" lineEnd="1009" colStart="5" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="624" lineEnd="624" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="624" lineEnd="624" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="624" lineEnd="624" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="807" lineEnd="807" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="807" lineEnd="807" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="807" lineEnd="807" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="972" lineEnd="972" colStart="9" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="972" lineEnd="972" colStart="9" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="07D4345F-E134-4D03-A072-023A830140BC">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1476" lineEnd="1476" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="3517F130-C453-4F87-9BBF-A3BAEE5E84FD">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1476" lineEnd="1476" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1477" lineEnd="1477" colStart="2" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1477" lineEnd="1477" colStart="2" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="564" lineEnd="564" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="564" lineEnd="564" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="564" lineEnd="564" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="unlzw.c" line="218" lineEnd="218" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="unlzw.c" line="218" lineEnd="218" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="unlzw.c" line="218" lineEnd="218" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1566" lineEnd="1566" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1566" lineEnd="1566" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1566" lineEnd="1566" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="904" lineEnd="904" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="904" lineEnd="904" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="904" lineEnd="904" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="974" lineEnd="974" colStart="9" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="974" lineEnd="974" colStart="9" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7EF7E5CD-5511-49A5-B57E-87F33F2C6C82">
      <FunctionCall>
        <SourceLocation path="util.c" line="400" lineEnd="400" colStart="16" colEnd="0"/>
        <Function name="malloc"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DAE45D1C-5AC1-4FBF-9C0A-562A2CE5B482">
      <FunctionCall>
        <SourceLocation path="util.c" line="400" lineEnd="400" colStart="16" colEnd="0"/>
        <Function name="malloc"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="691" lineEnd="691" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="691" lineEnd="691" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="691" lineEnd="691" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B5084B1B-0E81-4C22-8B55-3CD558799A08">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1345" lineEnd="1345" colStart="6" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7C1C0F31-DD65-4D46-8A8D-A4D4EE2F1C5C">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1345" lineEnd="1345" colStart="6" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="0C76CFB3-D99D-4991-B9D6-5E861241F852">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1345" lineEnd="1345" colStart="6" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1089" lineEnd="1089" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1089" lineEnd="1089" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1089" lineEnd="1089" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="639" lineEnd="639" colStart="5" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="639" lineEnd="639" colStart="5" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="754" lineEnd="754" colStart="2" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="754" lineEnd="754" colStart="2" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="3517F130-C453-4F87-9BBF-A3BAEE5E84FD">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1036" lineEnd="1036" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="07D4345F-E134-4D03-A072-023A830140BC">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1036" lineEnd="1036" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B5084B1B-0E81-4C22-8B55-3CD558799A08">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1354" lineEnd="1354" colStart="2" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7C1C0F31-DD65-4D46-8A8D-A4D4EE2F1C5C">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1354" lineEnd="1354" colStart="2" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="0C76CFB3-D99D-4991-B9D6-5E861241F852">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1354" lineEnd="1354" colStart="2" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1180" lineEnd="1180" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1180" lineEnd="1180" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1180" lineEnd="1180" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="A5A573EC-B5AF-4A6F-B154-67856C9F29B6">
      <FunctionCall>
        <SourceLocation path="util.c" line="211" lineEnd="211" colStart="15" colEnd="0"/>
        <Function name="strrchr"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="78E2C929-6A42-44B6-944C-3060D88998B4">
      <FunctionCall>
        <SourceLocation path="util.c" line="211" lineEnd="211" colStart="15" colEnd="0"/>
        <Function name="strrchr"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="628" lineEnd="628" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="628" lineEnd="628" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="628" lineEnd="628" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="F1527367-A16C-40F4-9B98-06FD3E228BFA">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1062" lineEnd="1062" colStart="5" colEnd="0"/>
        <Function name="strcat"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="D4A36C35-E1F4-4442-8C8B-F2A7A490F287">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1062" lineEnd="1062" colStart="5" colEnd="0"/>
        <Function name="strcat"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="896" lineEnd="896" colStart="6" colEnd="0"/>
        <Function name="unlink"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="F1527367-A16C-40F4-9B98-06FD3E228BFA">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1051" lineEnd="1051" colStart="9" colEnd="0"/>
        <Function name="strcat"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="D4A36C35-E1F4-4442-8C8B-F2A7A490F287">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1051" lineEnd="1051" colStart="9" colEnd="0"/>
        <Function name="strcat"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="687" lineEnd="687" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="687" lineEnd="687" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="687" lineEnd="687" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B5084B1B-0E81-4C22-8B55-3CD558799A08">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1400" lineEnd="1400" colStart="5" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7C1C0F31-DD65-4D46-8A8D-A4D4EE2F1C5C">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1400" lineEnd="1400" colStart="5" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="0C76CFB3-D99D-4991-B9D6-5E861241F852">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1400" lineEnd="1400" colStart="5" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1504" lineEnd="1504" colStart="5" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1504" lineEnd="1504" colStart="5" colEnd="0"/>
        <Function name="strcpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="731" lineEnd="731" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="731" lineEnd="731" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="731" lineEnd="731" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="134" lineEnd="134" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="134" lineEnd="134" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="134" lineEnd="134" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="879" lineEnd="879" colStart="35" colEnd="0"/>
        <Function name="open"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1637" lineEnd="1637" colStart="9" colEnd="0"/>
        <Function name="unlink"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="3517F130-C453-4F87-9BBF-A3BAEE5E84FD">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="472" lineEnd="472" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="07D4345F-E134-4D03-A072-023A830140BC">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="472" lineEnd="472" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B5084B1B-0E81-4C22-8B55-3CD558799A08">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1340" lineEnd="1340" colStart="6" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7C1C0F31-DD65-4D46-8A8D-A4D4EE2F1C5C">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1340" lineEnd="1340" colStart="6" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="0C76CFB3-D99D-4991-B9D6-5E861241F852">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1340" lineEnd="1340" colStart="6" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="E70C9A2D-7408-4542-9DB0-7BF4722944A6">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="478" lineEnd="478" colStart="5" colEnd="0"/>
        <Function name="strncpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="BED2188C-247E-404B-AB61-C193980E65F0">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="478" lineEnd="478" colStart="5" colEnd="0"/>
        <Function name="strncpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B09DA83F-F704-4BFD-837C-A7D57AF98601">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="478" lineEnd="478" colStart="5" colEnd="0"/>
        <Function name="strncpy"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DACEC7D4-DE90-4CF6-8087-85F36298053F">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1464" lineEnd="1464" colStart="11" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="EB091198-21F7-4DE9-9784-AC0917616944">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1464" lineEnd="1464" colStart="11" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="799" lineEnd="799" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="799" lineEnd="799" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="799" lineEnd="799" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="inflate.c" line="832" lineEnd="832" colStart="7" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="inflate.c" line="832" lineEnd="832" colStart="7" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="inflate.c" line="832" lineEnd="832" colStart="7" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="741" lineEnd="741" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="741" lineEnd="741" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="741" lineEnd="741" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="2CDEE4FB-1160-4FA2-AB1E-D9EE81805344">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1245" lineEnd="1245" colStart="27" colEnd="0"/>
        <Function name="basename"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C9422508-6631-46E0-94DB-36E57C2B05E0">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1245" lineEnd="1245" colStart="27" colEnd="0"/>
        <Function name="basename"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="767" lineEnd="767" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="767" lineEnd="767" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="767" lineEnd="767" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="util.c" line="351" lineEnd="351" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="util.c" line="351" lineEnd="351" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="util.c" line="351" lineEnd="351" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="62" lineEnd="62" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="62" lineEnd="62" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="62" lineEnd="62" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="CDD21781-BC3F-454D-B8A8-945767B91AC3">
      <FunctionCall>
        <SourceLocation path="util.c" line="322" lineEnd="322" colStart="7" colEnd="0"/>
        <Function name="strspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="C5F8BA55-839A-4AAE-82FD-5803705D8E31">
      <FunctionCall>
        <SourceLocation path="util.c" line="322" lineEnd="322" colStart="7" colEnd="0"/>
        <Function name="strspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="A5A573EC-B5AF-4A6F-B154-67856C9F29B6">
      <FunctionCall>
        <SourceLocation path="util.c" line="322" lineEnd="322" colStart="7" colEnd="0"/>
        <Function name="strspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="92FE493F-7472-4B08-B79C-71A6043BB159">
      <FunctionCall>
        <SourceLocation path="util.c" line="322" lineEnd="322" colStart="7" colEnd="0"/>
        <Function name="strspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="78E2C929-6A42-44B6-944C-3060D88998B4">
      <FunctionCall>
        <SourceLocation path="util.c" line="322" lineEnd="322" colStart="7" colEnd="0"/>
        <Function name="strspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="57A2DFD5-DA1E-451F-8DF0-BBA1CAAAC660">
      <FunctionCall>
        <SourceLocation path="util.c" line="322" lineEnd="322" colStart="7" colEnd="0"/>
        <Function name="strspn"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="893" lineEnd="893" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="893" lineEnd="893" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="893" lineEnd="893" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="3517F130-C453-4F87-9BBF-A3BAEE5E84FD">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1550" lineEnd="1550" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="07D4345F-E134-4D03-A072-023A830140BC">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1550" lineEnd="1550" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="310" lineEnd="310" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="310" lineEnd="310" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="310" lineEnd="310" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B5084B1B-0E81-4C22-8B55-3CD558799A08">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1348" lineEnd="1348" colStart="6" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7C1C0F31-DD65-4D46-8A8D-A4D4EE2F1C5C">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1348" lineEnd="1348" colStart="6" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="0C76CFB3-D99D-4991-B9D6-5E861241F852">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1348" lineEnd="1348" colStart="6" colEnd="0"/>
        <Function name="printf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="189" lineEnd="189" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="189" lineEnd="189" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="189" lineEnd="189" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="184" lineEnd="184" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="184" lineEnd="184" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="184" lineEnd="184" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="E34C4271-5E8A-47E8-8943-07B4F10CDE73">
      <FunctionCall>
        <SourceLocation path="util.c" line="293" lineEnd="293" colStart="16" colEnd="0"/>
        <Function name="xmalloc"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="BD75558D-3D1F-466F-B557-8C2E888093C7">
      <FunctionCall>
        <SourceLocation path="util.c" line="293" lineEnd="293" colStart="16" colEnd="0"/>
        <Function name="xmalloc"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="EB091198-21F7-4DE9-9784-AC0917616944">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="479" lineEnd="479" colStart="13" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DACEC7D4-DE90-4CF6-8087-85F36298053F">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="479" lineEnd="479" colStart="13" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1304" lineEnd="1304" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1304" lineEnd="1304" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1304" lineEnd="1304" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="420" lineEnd="420" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="420" lineEnd="420" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="420" lineEnd="420" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1308" lineEnd="1308" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1308" lineEnd="1308" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1308" lineEnd="1308" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="374" lineEnd="374" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="374" lineEnd="374" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="374" lineEnd="374" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="735" lineEnd="735" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="735" lineEnd="735" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="735" lineEnd="735" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="78E2C929-6A42-44B6-944C-3060D88998B4">
      <FunctionCall>
        <SourceLocation path="util.c" line="186" lineEnd="186" colStart="14" colEnd="0"/>
        <Function name="strrchr"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="A5A573EC-B5AF-4A6F-B154-67856C9F29B6">
      <FunctionCall>
        <SourceLocation path="util.c" line="186" lineEnd="186" colStart="14" colEnd="0"/>
        <Function name="strrchr"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="lzw.c" line="21" lineEnd="21" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="lzw.c" line="21" lineEnd="21" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="lzw.c" line="21" lineEnd="21" colStart="5" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="69" lineEnd="69" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="69" lineEnd="69" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="unzip.c" line="69" lineEnd="69" colStart="2" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="837" lineEnd="837" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="837" lineEnd="837" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="837" lineEnd="837" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="EB091198-21F7-4DE9-9784-AC0917616944">
      <FunctionCall>
        <SourceLocation path="util.c" line="293" lineEnd="293" colStart="24" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DACEC7D4-DE90-4CF6-8087-85F36298053F">
      <FunctionCall>
        <SourceLocation path="util.c" line="293" lineEnd="293" colStart="24" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="844" lineEnd="844" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="844" lineEnd="844" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="844" lineEnd="844" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="EB091198-21F7-4DE9-9784-AC0917616944">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="970" lineEnd="970" colStart="12" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="DACEC7D4-DE90-4CF6-8087-85F36298053F">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="970" lineEnd="970" colStart="12" colEnd="0"/>
        <Function name="strlen"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1190" lineEnd="1190" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1190" lineEnd="1190" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1190" lineEnd="1190" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="D4A36C35-E1F4-4442-8C8B-F2A7A490F287">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1133" lineEnd="1133" colStart="2" colEnd="0"/>
        <Function name="strcat"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="F1527367-A16C-40F4-9B98-06FD3E228BFA">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1133" lineEnd="1133" colStart="2" colEnd="0"/>
        <Function name="strcat"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="3517F130-C453-4F87-9BBF-A3BAEE5E84FD">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="708" lineEnd="708" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="07D4345F-E134-4D03-A072-023A830140BC">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="708" lineEnd="708" colStart="25" colEnd="0"/>
        <Function name="strcmp"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1628" lineEnd="1628" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1628" lineEnd="1628" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1628" lineEnd="1628" colStart="32" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1204" lineEnd="1204" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1204" lineEnd="1204" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1204" lineEnd="1204" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1223" lineEnd="1223" colStart="3" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1223" lineEnd="1223" colStart="3" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="1223" lineEnd="1223" colStart="3" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="B6445DB1-42D0-4025-B4A9-071A23DCED66">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="537" lineEnd="537" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="98E689A0-F013-45A6-A7A6-F07E97179460">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="537" lineEnd="537" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
    <SinkInstance ruleID="7467DE18-5588-416C-979E-CFCDBD24BE77">
      <FunctionCall>
        <SourceLocation path="gzip.c" line="537" lineEnd="537" colStart="6" colEnd="0"/>
        <Function name="fprintf"/>
      </FunctionCall>
    </SinkInstance>
  </Sinks>
  <CalledWithNoDef>
    <Function name="fileno"/>
    <Function name="__ctype_b_loc"/>
    <Function name="ctime"/>
    <Function name="__errno_location"/>
    <Function name="isatty"/>
    <Function name="fflush"/>
    <Function name="signal"/>
    <Function name="perror"/>
    <Function name="_IO_putc"/>
    <Function name="free"/>
  </CalledWithNoDef>
</ProgramData>
<EngineData>
  <EngineVersion>5.10.1.0043</EngineVersion>
  <InactiveResults/>
  <RulePacks>
    <RulePack>
      <RulePackID>FF9890E6-D119-4EE8-A591-83DCF4CA6952</RulePackID>
      <SKU>RUL13093</SKU>
      <Name>Fortify Secure Coding Rules, Core, Android</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>nFHgd1yTzrjOyW0YT4b6Cg0ceA5i1YjerepqK4s+WCU=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>AAAC0B10-79E7-4FE5-9921-F4903A79D317</RulePackID>
      <SKU>RUL13007</SKU>
      <Name>Fortify Secure Coding Rules, Extended, Java</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>Tieg6GBq2ZZb/XItQBwsrdVcqS2PdZ8Hp3nX9FIiyM0=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>343CBB32-087C-4A4E-8BD8-273B5F876069</RulePackID>
      <SKU>RUL13058</SKU>
      <Name>Fortify Secure Coding Rules, Core, PHP</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>A6iM5Z89cenKN0SEzuPG88NoryPdxaKTpWHmfqd/v7E=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>00403342-15D0-48C9-8E67-4B1CFBDEFCD2</RulePackID>
      <SKU>RUL13026</SKU>
      <Name>Fortify Secure Coding Rules, Extended, JSP</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>tNPBkgT4JVdNiC5bPoVyMFDBfaLxlJxnXm+1bQ9urAw=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>BD292C4E-4216-4DB8-96C7-9B607BFD9584</RulePackID>
      <SKU>RUL13059</SKU>
      <Name>Fortify Secure Coding Rules, Core, JavaScript</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>vEls0lFb5iNa66ismArQtDBFF9zKiP+C8cHWNIpyMqY=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>EEA7C678-058E-462A-8A59-AF925F7B7164</RulePackID>
      <SKU>RUL13024</SKU>
      <Name>Fortify Secure Coding Rules, Core, ColdFusion</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>o/WdoIftD5oL8eSezeX3rBrc+u38F1iEizgZBgE0MBI=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>FD15CBE4-E059-4CBB-914E-546BDCEB422B</RulePackID>
      <SKU>RUL13083</SKU>
      <Name>Fortify Secure Coding Rules, Core, Python</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>yZ+D0ahQpbG/luyvbtpweSmTJ46A/hv1GQSPq5k/MY0=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>D57210E5-E762-4112-97DD-019E61D32D0E</RulePackID>
      <SKU>RUL13002</SKU>
      <Name>Fortify Secure Coding Rules, Core, .NET</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>zI5BCYbNQ9njP/bQUwGRR5RkEQw2rTQU9Gk8m97zhkw=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>14EE50EB-FA1C-4AE8-8B59-39F952E21E3B</RulePackID>
      <SKU>RUL13078</SKU>
      <Name>Fortify Secure Coding Rules, Core, Annotations</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>a96SEWHQBHaDZByUyRQow9k7hnBFrzM/OOaVki50ztc=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>B18E58BA-8B2D-4FC5-83BF-378594CAD260</RulePackID>
      <SKU>RUL13099</SKU>
      <Name>Fortify Secure Coding Rules, Core, Objective-C</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>++sxDbE3xhzCKJcFNbj5/uxErqMoM8YmAJ7uP9nNk4o=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>557BCC56-CD42-43A7-B4FE-CDD00D58577E</RulePackID>
      <SKU>RUL13027</SKU>
      <Name>Fortify Secure Coding Rules, Extended, .NET</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>AzsOXnWXhfaiw/YxiS/wq9McUocCSLBQWrA9IB6GzwA=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>CD6959FC-0C37-45BE-9637-BAA43C3A4D56</RulePackID>
      <SKU>RUL13005</SKU>
      <Name>Fortify Secure Coding Rules, Extended, Configuration</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>yM4yGJChGejzAQXEU7Tl8jQAS6xUG2oykmR7rF4aAjs=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>9C48678C-09B6-474D-B86D-97EE94D38F17</RulePackID>
      <SKU>RUL13067</SKU>
      <Name>Fortify Secure Coding Rules, Extended, Content</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>6INvIw2kZO85QhoG/bXdwLnRbupksM1JAIlvQZsjzuY=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>92127AA2-E666-4F28-B1C1-C0F6A939A089</RulePackID>
      <SKU>RUL13094</SKU>
      <Name>Fortify Secure Coding Rules, Core, ActionScript 3.0</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>A0tiqOqOQybuGP+kNa/XWz8/TuAxXDGUucaTCGRtMFo=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>06A6CC97-8C3F-4E73-9093-3E74C64A2AAF</RulePackID>
      <SKU>RUL13003</SKU>
      <Name>Fortify Secure Coding Rules, Core, Java</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>109ixftqUoDu8aXCYBpPr6FW4Wl0HJEdHjXpq2t8ZR0=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>1D426B6F-8D33-4AD6-BBCE-237ABAFAB924</RulePackID>
      <SKU>RUL13060</SKU>
      <Name>Fortify Secure Coding Rules, Core, Classic ASP, VBScript, and VB6</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>BwpwplYjl8HpSuj35su1ldEkypAl03kFN2RmdfgT0bA=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>711E0652-7494-42BE-94B1-DB3799418C7E</RulePackID>
      <SKU>RUL13001</SKU>
      <Name>Fortify Secure Coding Rules, Core, C/C++</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>Panq3MZXT7fsNZRYq6OfwPpgJRNOQMsIG/DFsFUmU7k=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>4BC5B2FA-C209-4DBC-9C3E-1D3EEFAF135A</RulePackID>
      <SKU>RUL13025</SKU>
      <Name>Fortify Secure Coding Rules, Extended, SQL</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>GfeZuYI4V8ubRPlDSl0MiFPydWLEc0ef33DHbZ/mowM=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>BD4641AD-A6FF-4401-A8F4-6873272F2748</RulePackID>
      <SKU>RUL13006</SKU>
      <Name>Fortify Secure Coding Rules, Extended, C/C++</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>42v1lCrpA84CQVyTbX9Swy4MQwBqBQvxXiQDmH/jDyA=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>5A663288-B1F7-416A-AEED-E5F00DC3596F</RulePackID>
      <SKU>RUL13095</SKU>
      <Name>Fortify Secure Coding Rules, Core, ABAP</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>N9Pi5FHMfiLlc7/jrzj61XxMVz7rUwMnmrhLF9upCRU=</MAC>
    </RulePack>
    <RulePack>
      <RulePackID>6494160B-E1DB-41F5-9840-2B1609EE7649</RulePackID>
      <SKU>RUL13004</SKU>
      <Name>Fortify Secure Coding Rules, Core, SQL</Name>
      <Version>2013.1.0.0008</Version>
      <MAC>jSsHhyN5ESds9+MOlfCTk+9Snmt+IFkkq6Xy72nYMWw=</MAC>
    </RulePack>
  </RulePacks>
  <Properties type="System">
    <Property>
      <name>java.runtime.name</name>
      <value>Java(TM) SE Runtime Environment</value>
    </Property>
    <Property>
      <name>sun.boot.library.path</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/lib/i386</value>
    </Property>
    <Property>
      <name>java.vm.version</name>
      <value>19.1-b02</value>
    </Property>
    <Property>
      <name>com.fortify.sca.cpfe.options</name>
      <value>--remove_unneeded_entities --suppress_vtbl -tused</value>
    </Property>
    <Property>
      <name>com.fortify.sca.env.exesearchpath</name>
      <value>/home/bty/project-klee/llvm-gcc-4.2-2.9-i686-linux/llvm-gcc-4.2-2.9-i686-linux/bin:/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games</value>
    </Property>
    <Property>
      <name>java.vm.vendor</name>
      <value>Sun Microsystems Inc.</value>
    </Property>
    <Property>
      <name>java.vendor.url</name>
      <value>http://java.sun.com/</value>
    </Property>
    <Property>
      <name>java.rmi.server.randomIDs</name>
      <value>true</value>
    </Property>
    <Property>
      <name>path.separator</name>
      <value>:</value>
    </Property>
    <Property>
      <name>java.vm.name</name>
      <value>Java HotSpot(TM) Server VM</value>
    </Property>
    <Property>
      <name>file.encoding.pkg</name>
      <value>sun.io</value>
    </Property>
    <Property>
      <name>sun.java.launcher</name>
      <value>SUN_STANDARD</value>
    </Property>
    <Property>
      <name>user.country</name>
      <value>CN</value>
    </Property>
    <Property>
      <name>sun.os.patch.level</name>
      <value>unknown</value>
    </Property>
    <Property>
      <name>com.fortify.sca.Tank</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/Core/config/tank.dat#846878#1#/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/Core/config/tank.yALpnf#848385#1#/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/Core/config/tank.sRRhBk#848386#1#</value>
    </Property>
    <Property>
      <name>java.vm.specification.name</name>
      <value>Java Virtual Machine Specification</value>
    </Property>
    <Property>
      <name>user.dir</name>
      <value>/home/bty/testcase/gzip-1.2.4</value>
    </Property>
    <Property>
      <name>java.runtime.version</name>
      <value>1.6.0_24-b07</value>
    </Property>
    <Property>
      <name>java.awt.graphicsenv</name>
      <value>sun.awt.X11GraphicsEnvironment</value>
    </Property>
    <Property>
      <name>java.endorsed.dirs</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/lib/endorsed</value>
    </Property>
    <Property>
      <name>os.arch</name>
      <value>i386</value>
    </Property>
    <Property>
      <name>java.io.tmpdir</name>
      <value>/tmp</value>
    </Property>
    <Property>
      <name>line.separator</name>
      <value>
</value>
    </Property>
    <Property>
      <name>java.vm.specification.vendor</name>
      <value>Sun Microsystems Inc.</value>
    </Property>
    <Property>
      <name>stderr.isatty</name>
      <value>true</value>
    </Property>
    <Property>
      <name>os.name</name>
      <value>Linux</value>
    </Property>
    <Property>
      <name>sun.jnu.encoding</name>
      <value>UTF-8</value>
    </Property>
    <Property>
      <name>java.library.path</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/lib/i386/server:/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/lib/i386:/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/../lib/i386:/usr/java/packages/lib/i386:/lib:/usr/lib</value>
    </Property>
    <Property>
      <name>com.fortify.InstallRoot</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps</value>
    </Property>
    <Property>
      <name>java.specification.name</name>
      <value>Java Platform API Specification</value>
    </Property>
    <Property>
      <name>java.class.version</name>
      <value>50.0</value>
    </Property>
    <Property>
      <name>sun.management.compiler</name>
      <value>HotSpot Tiered Compilers</value>
    </Property>
    <Property>
      <name>os.version</name>
      <value>3.11.0-15-generic</value>
    </Property>
    <Property>
      <name>user.home</name>
      <value>/home/bty</value>
    </Property>
    <Property>
      <name>user.timezone</name>
      <value>Asia/Shanghai</value>
    </Property>
    <Property>
      <name>java.awt.printerjob</name>
      <value>sun.print.PSPrinterJob</value>
    </Property>
    <Property>
      <name>file.encoding</name>
      <value>UTF-8</value>
    </Property>
    <Property>
      <name>java.specification.version</name>
      <value>1.6</value>
    </Property>
    <Property>
      <name>java.class.path</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/Core/lib/exe/sca-exe.jar</value>
    </Property>
    <Property>
      <name>user.name</name>
      <value>bty</value>
    </Property>
    <Property>
      <name>com.fortify.TotalPhysicalMemory</name>
      <value>2793680896</value>
    </Property>
    <Property>
      <name>com.sun.management.jmxremote</name>
      <value>true</value>
    </Property>
    <Property>
      <name>java.vm.specification.version</name>
      <value>1.0</value>
    </Property>
    <Property>
      <name>com.fortify.sca.JVMArgs</name>
      <value>-Dcom.sun.management.jmxremote=true -XX:SoftRefLRUPolicyMSPerMB=100 -Xss1M -Xmx600M -Xms300M -server</value>
    </Property>
    <Property>
      <name>java.home</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre</value>
    </Property>
    <Property>
      <name>sun.arch.data.model</name>
      <value>32</value>
    </Property>
    <Property>
      <name>com.fortify.sca.PID</name>
      <value>6368</value>
    </Property>
    <Property>
      <name>user.language</name>
      <value>zh</value>
    </Property>
    <Property>
      <name>java.specification.vendor</name>
      <value>Sun Microsystems Inc.</value>
    </Property>
    <Property>
      <name>java.vm.info</name>
      <value>mixed mode</value>
    </Property>
    <Property>
      <name>java.version</name>
      <value>1.6.0_24</value>
    </Property>
    <Property>
      <name>java.ext.dirs</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/lib/ext:/usr/java/packages/lib/ext</value>
    </Property>
    <Property>
      <name>sun.boot.class.path</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/lib/resources.jar:/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/lib/rt.jar:/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/lib/sunrsasign.jar:/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/lib/jsse.jar:/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/lib/jce.jar:/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/lib/charsets.jar:/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/lib/modules/jdk.boot.jar:/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/jre/classes</value>
    </Property>
    <Property>
      <name>java.vendor</name>
      <value>Sun Microsystems Inc.</value>
    </Property>
    <Property>
      <name>stdout.isatty</name>
      <value>true</value>
    </Property>
    <Property>
      <name>file.separator</name>
      <value>/</value>
    </Property>
    <Property>
      <name>java.vendor.url.bug</name>
      <value>http://java.sun.com/cgi-bin/bugreport.cgi</value>
    </Property>
    <Property>
      <name>sun.io.unicode.encoding</name>
      <value>UnicodeLittle</value>
    </Property>
    <Property>
      <name>sun.cpu.endian</name>
      <value>little</value>
    </Property>
    <Property>
      <name>sun.desktop</name>
      <value>gnome</value>
    </Property>
    <Property>
      <name>sun.cpu.isalist</name>
      <value/>
    </Property>
  </Properties>
  <Properties type="Fortify">
    <Property>
      <name>com.fortify.AuthenticationKey</name>
      <value>/home/bty/.fortify/config/tools</value>
    </Property>
    <Property>
      <name>max.file.path.length</name>
      <value>255</value>
    </Property>
    <Property>
      <name>com.fortify.SCAExecutablePath</name>
      <value/>
    </Property>
    <Property>
      <name>com.fortify.InstallationUserName</name>
      <value>bty</value>
    </Property>
    <Property>
      <name>com.fortify.Core</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/Core</value>
    </Property>
    <Property>
      <name>com.fortify.VS.RequireASPPrecompilation</name>
      <value>true</value>
    </Property>
    <Property>
      <name>com.fortify.WorkingDirectory</name>
      <value>/home/bty/.fortify</value>
    </Property>
    <Property>
      <name>com.fortify.locale</name>
      <value>zh_CN</value>
    </Property>
  </Properties>
  <Properties type="SCA">
    <Property>
      <name>com.fortify.sca.compilers.ant</name>
      <value>com.fortify.sca.util.compilers.AntAdapter</value>
    </Property>
    <Property>
      <name>com.fortify.sca.DefaultRulesDir</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/Core/config/rules</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.ld</name>
      <value>com.fortify.sca.util.compilers.LdCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.ctp</name>
      <value>PHP</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.py</name>
      <value>PYTHON</value>
    </Property>
    <Property>
      <name>com.fortify.sca.LowSeverityCutoff</name>
      <value>1.0</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.ctl</name>
      <value>VB6</value>
    </Property>
    <Property>
      <name>com.fortify.sca.SuppressLowSeverity</name>
      <value>true</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.bas</name>
      <value>VB6</value>
    </Property>
    <Property>
      <name>com.fortify.sca.SolverTimeout</name>
      <value>15</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.asp</name>
      <value>ASP</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.pks</name>
      <value>PLSQL</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.sql</name>
      <value>SQL</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.pkh</name>
      <value>PLSQL</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.cfm</name>
      <value>CFML</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.pkb</name>
      <value>PLSQL</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.cfc</name>
      <value>CFML</value>
    </Property>
    <Property>
      <name>com.fortify.sca.DaemonCompilers</name>
      <value>com.fortify.sca.util.compilers.GppCompiler,com.fortify.sca.util.compilers.GccCompiler,com.fortify.sca.util.compilers.AppleGppCompiler,com.fortify.sca.util.compilers.AppleGccCompiler,com.fortify.sca.util.compilers.MicrosoftCompiler,com.fortify.sca.util.compilers.MicrosoftLinker,com.fortify.sca.util.compilers.LdCompiler,com.fortify.sca.util.compilers.ArUtil,com.fortify.sca.util.compilers.SunCCompiler,com.fortify.sca.util.compilers.SunCppCompiler,com.fortify.sca.util.compilers.IntelCompiler,com.fortify.sca.util.compilers.ExternalCppAdapter</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.fortify</name>
      <value>com.fortify.sca.util.compilers.FortifyCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.PrintPerformanceDataAfterScan</name>
      <value>false</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.armcc</name>
      <value>com.fortify.sca.util.compilers.ArmCcCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.AllocationWebServiceURL</name>
      <value>https://per-use.fortify.com/services/GasAllocationService</value>
    </Property>
    <Property>
      <name>com.fortify.sca.DeadCodeFilter</name>
      <value>true</value>
    </Property>
    <Property>
      <name>com.fortify.sca.analyzer.controlflow.EnableMachineFiltering</name>
      <value>false</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.tcc</name>
      <value>com.fortify.sca.util.compilers.ArmCcCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.java</name>
      <value>JAVA</value>
    </Property>
    <Property>
      <name>com.fortify.sca.IndirectCallGraphBuilders</name>
      <value>com.fortify.sca.analyzer.callgraph.VirtualCGBuilder,com.fortify.sca.analyzer.callgraph.J2EEIndirectCGBuilder,com.fortify.sca.analyzer.callgraph.JNICGBuilder,com.fortify.sca.analyzer.callgraph.StoredProcedureResolver,com.fortify.sca.analyzer.callgraph.JavaWSCGBuilder,com.fortify.sca.analyzer.callgraph.StrutsCGBuilder,com.fortify.sca.analyzer.callgraph.DotNetWSCGBuilder,com.fortify.sca.analyzer.callgraph.SqlServerSPResolver,com.fortify.sca.analyzer.callgraph.ASPCGBuilder,com.fortify.sca.analyzer.callgraph.ScriptedCGBuilder,com.fortify.sca.analyzer.callgraph.NewJspCustomTagCGBuilder</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.g++-*</name>
      <value>com.fortify.sca.util.compilers.GppCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.DisplayProgress</name>
      <value>true</value>
    </Property>
    <Property>
      <name>com.fortify.sca.jsp.UseNativeParser</name>
      <value>true</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.vbscript</name>
      <value>VBSCRIPT</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.cpx</name>
      <value>XML</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.gcc4*</name>
      <value>com.fortify.sca.util.compilers.GccCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.faces</name>
      <value>JSPX</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.properties</name>
      <value>JAVA_PROPERTIES</value>
    </Property>
    <Property>
      <name>com.fortify.sca.JdkVersion</name>
      <value>1.4</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.wsdd</name>
      <value>XML</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.php</name>
      <value>PHP</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.config</name>
      <value>XML</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.jsff</name>
      <value>JSPX</value>
    </Property>
    <Property>
      <name>com.fortify.sca.DefaultFileTypes</name>
      <value>java,jsp,jspx,tag,tagx,sql,cfm,php,ctp,pks,pkh,pkb,xml,config,properties,dll,exe,inc,asp,vbscript,js,ini,bas,cls,vbs,frm,ctl,html,htm,xsd,wsdd,xmi,py,cfml,cfc,abap,xhtml,cpx,xcfg,jsff</value>
    </Property>
    <Property>
      <name>com.fortify.sca.ResultsFile</name>
      <value>results.fpr</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.gcc3*</name>
      <value>com.fortify.sca.util.compilers.GccCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.analyzer.controlflow.EnableTimeOut</name>
      <value>true</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.touchless</name>
      <value>com.fortify.sca.util.compilers.FortifyCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.xsd</name>
      <value>XML</value>
    </Property>
    <Property>
      <name>com.fortify.sca.BuildID</name>
      <value>build1</value>
    </Property>
    <Property>
      <name>com.fortify.sca.FVDLStylesheet</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/Core/resources/sca/fvdl2html.xsl</value>
    </Property>
    <Property>
      <name>com.fortify.sca.DisableGlobals</name>
      <value>false</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.abap</name>
      <value>ABAP</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.ini</name>
      <value>JAVA_PROPERTIES</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.icpc</name>
      <value>com.fortify.sca.util.compilers.IntelCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.htm</name>
      <value>HTML</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.jam</name>
      <value>com.fortify.sca.util.compilers.TouchlessCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.gcc2*</name>
      <value>com.fortify.sca.util.compilers.GccCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.xhtml</name>
      <value>JSPX</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.ABAP</name>
      <value>ABAP</value>
    </Property>
    <Property>
      <name>com.fortify.sca.CollectPerformanceData</name>
      <value>true</value>
    </Property>
    <Property>
      <name>com.fortify.sca.FVDLDisableProgramData</name>
      <value>false</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.js</name>
      <value>JAVASCRIPT</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.jspx</name>
      <value>JSPX</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.jsp</name>
      <value>JSP</value>
    </Property>
    <Property>
      <name>com.fortify.sca.CustomRulesDir</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/Core/config/customrules</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.g++</name>
      <value>com.fortify.sca.util.compilers.GppCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.xcfg</name>
      <value>XML</value>
    </Property>
    <Property>
      <name>com.fortify.sca.DeadCodeIgnoreTrivialPredicates</name>
      <value>true</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.javac</name>
      <value>com.fortify.sca.util.compilers.JavacCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.tagx</name>
      <value>JSP</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.c++</name>
      <value>com.fortify.sca.util.compilers.GppCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.UnicodeInputFile</name>
      <value>true</value>
    </Property>
    <Property>
      <name>com.fortify.sca.DefaultAnalyzers</name>
      <value>semantic:dataflow:controlflow:nullptr:configuration:content:structural:buffer</value>
    </Property>
    <Property>
      <name>com.fortify.sca.AntCompilerClass</name>
      <value>com.fortify.dev.ant.SCACompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.cls</name>
      <value>VB6</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.frm</name>
      <value>VB6</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.g++4*</name>
      <value>com.fortify.sca.util.compilers.GppCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.analyzer.controlflow.EnableRefRuleOptimization</name>
      <value>false</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.armcpp</name>
      <value>com.fortify.sca.util.compilers.ArmCppCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.analyzer.controlflow.EnableLivenessOptimization</name>
      <value>false</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.cc</name>
      <value>com.fortify.sca.util.compilers.GccCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.cpfe.file.option</name>
      <value>--gen_c_file_name</value>
    </Property>
    <Property>
      <name>com.fortify.sca.ProjectRoot</name>
      <value>/home/bty/.fortify</value>
    </Property>
    <Property>
      <name>com.fortify.sca.FVDLDisableSnippets</name>
      <value>false</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.make</name>
      <value>com.fortify.sca.util.compilers.TouchlessCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.g++3*</name>
      <value>com.fortify.sca.util.compilers.GppCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.vbs</name>
      <value>VB6</value>
    </Property>
    <Property>
      <name>com.fortify.sca.SqlLanguage</name>
      <value>PLSQL</value>
    </Property>
    <Property>
      <name>com.fortify.sca.DisableFunctionPointers</name>
      <value>false</value>
    </Property>
    <Property>
      <name>com.fortify.sca.NoNestedOutTagOutput</name>
      <value>org.apache.taglibs.standard.tag.rt.core.RemoveTag,org.apache.taglibs.standard.tag.rt.core.SetTag</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.tcpp</name>
      <value>com.fortify.sca.util.compilers.ArmCppCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.DefaultJarsDirs</name>
      <value>default_jars</value>
    </Property>
    <Property>
      <name>com.fortify.sca.BundleControlflowIssues</name>
      <value>true</value>
    </Property>
    <Property>
      <name>com.fortify.sca.cpfe.options</name>
      <value>--remove_unneeded_entities --suppress_vtbl -tused</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.icc</name>
      <value>com.fortify.sca.util.compilers.IntelCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.html</name>
      <value>HTML</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.g++2*</name>
      <value>com.fortify.sca.util.compilers.GppCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.ar</name>
      <value>com.fortify.sca.util.compilers.ArUtil</value>
    </Property>
    <Property>
      <name>com.fortify.sca.cpfe.command</name>
      <value>/home/bty/Fortify-360-3.1.0-Analyzers_and_Apps/Core/private-bin/sca/cpfe</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.gcc</name>
      <value>com.fortify.sca.util.compilers.GccCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.gcc-*</name>
      <value>com.fortify.sca.util.compilers.GccCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.xml</name>
      <value>XML</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.cfml</name>
      <value>CFML</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.gmake</name>
      <value>com.fortify.sca.util.compilers.TouchlessCompiler</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.xmi</name>
      <value>XML</value>
    </Property>
    <Property>
      <name>com.fortify.sca.DisableDeadCodeElimination</name>
      <value>false</value>
    </Property>
    <Property>
      <name>com.fortify.sca.fileextensions.tag</name>
      <value>JSP</value>
    </Property>
    <Property>
      <name>com.fortify.sca.FVDLDisableDescriptions</name>
      <value>false</value>
    </Property>
    <Property>
      <name>com.fortify.sca.FVDLAllowUnifiedVulnerability</name>
      <value>true</value>
    </Property>
    <Property>
      <name>com.fortify.sca.compilers.clearmake</name>
      <value>com.fortify.sca.util.compilers.TouchlessCompiler</value>
    </Property>
  </Properties>
  <CommandLine>
    <Argument>-b</Argument>
    <Argument>build1</Argument>
    <Argument>-scan</Argument>
    <Argument>-f</Argument>
    <Argument>results.fpr</Argument>
  </CommandLine>
  <Errors/>
  <MachineInfo>
    <Hostname>bty-virtual-machine</Hostname>
    <Username>bty</Username>
    <Platform>Linux</Platform>
  </MachineInfo>
  <FilterResult/>
  <RuleInfo>
    <Rule id="054DFA59-0195-4AB2-B12C-C89C8650F4A5">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="inputsource">Command Line Arguments</Group>
        <Group name="audience">dev,medium,broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="0B138A51-FDDD-4FA6-A615-70B8C0EC87DA">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="altcategoryCWE">CWE ID 190</Group>
        <Group name="altcategoryOWASP2004">A1 Unvalidated Input</Group>
        <Group name="altcategoryOWASP2007">None</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">Risky Resource Management - CWE ID 682</Group>
        <Group name="altcategoryFISMA">SI</Group>
        <Group name="altcategoryPCI1.1">Requirement 6.5.1, Requirement 6.5.5</Group>
        <Group name="altcategoryPCI1.2">Requirement 6.3.1.1</Group>
        <Group name="altcategoryPCI2.0">Requirement 6.5.2</Group>
        <Group name="altcategorySTIG2">APP3510 CAT I, APP3550 CAT I</Group>
        <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3550 CAT I</Group>
        <Group name="altcategoryWASC24+2">None</Group>
        <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 190</Group>
        <Group name="altcategorySANSTop252011">Risky Resource Management - CWE ID 190</Group>
        <Group name="PrimaryAudience">security</Group>
        <Group name="Accuracy">2.0</Group>
        <Group name="Impact">3.0</Group>
        <Group name="RemediationEffort">3.0</Group>
        <Group name="Probability">1.0</Group>
        <Group name="ImpactBias">Integrity</Group>
        <Group name="ConfidentialityImpact">Complete</Group>
        <Group name="IntegrityImpact">Complete</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="1763683B-B7F0-4A25-BF21-6A7233743A8D">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="product">SQZL</Group>
        <Group name="altcategoryCWE">CWE ID 253, CWE ID 690</Group>
        <Group name="altcategoryOWASP2004">A9 Application Denial of Service</Group>
        <Group name="altcategoryOWASP2007">None</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">None</Group>
        <Group name="altcategoryFISMA">None</Group>
        <Group name="altcategoryPCI1.1">Requirement 6.5.9</Group>
        <Group name="altcategoryPCI1.2">None</Group>
        <Group name="altcategoryPCI2.0">None</Group>
        <Group name="altcategorySTIG2">APP3120 CAT II, APP6080 CAT II</Group>
        <Group name="altcategorySTIG3.4">APP3120 CAT II, APP6080 CAT II</Group>
        <Group name="altcategoryWASC24+2">None</Group>
        <Group name="altcategorySANS2010">None</Group>
        <Group name="altcategorySANSTop252011">None</Group>
        <Group name="PrimaryAudience">quality</Group>
        <Group name="Accuracy">4.0</Group>
        <Group name="Impact">2.0</Group>
        <Group name="RemediationEffort">1.0</Group>
        <Group name="Probability">1.0</Group>
        <Group name="ImpactBias">Normal</Group>
        <Group name="ConfidentialityImpact">None</Group>
        <Group name="IntegrityImpact">None</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="2213BC0A-B324-4C8A-BFAD-0AD7FE480A6A">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="altcategoryCWE">CWE ID 22, CWE ID 73</Group>
        <Group name="altcategoryOWASP2004">A1 Unvalidated Input</Group>
        <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
        <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
        <Group name="altcategorySANS2009">Risky Resource Management - CWE ID 426</Group>
        <Group name="altcategoryFISMA">SI</Group>
        <Group name="altcategoryPCI1.1">Requirement 6.5.1</Group>
        <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.4</Group>
        <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
        <Group name="altcategorySTIG2">APP3510 CAT I, APP3600 CAT II</Group>
        <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3600 CAT II</Group>
        <Group name="altcategoryWASC24+2">Path Traversal</Group>
        <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 022</Group>
        <Group name="altcategorySANSTop252011">Risky Resource Management - CWE ID 022</Group>
        <Group name="PrimaryAudience">security</Group>
        <Group name="Accuracy">4.0</Group>
        <Group name="Impact">3.0</Group>
        <Group name="RemediationEffort">3.0</Group>
        <Group name="Probability">4.0</Group>
        <Group name="ImpactBias">Integrity</Group>
        <Group name="ConfidentialityImpact">Partial</Group>
        <Group name="IntegrityImpact">Partial</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">fod,medium,broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="39DDF4FD-5A7A-4BFF-AEC4-05A8232615B1">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="inputsource">Stream</Group>
        <Group name="audience">medium,broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="57B0CA93-7DF5-4452-9A00-08AC165BA412">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="package">CPP Core</Group>
        <Group name="package">C GLib</Group>
        <Group name="package">C WinAPI</Group>
        <Group name="package">C Netscape LDAP</Group>
        <Group name="altcategoryCWE">CWE ID 362, CWE ID 367</Group>
        <Group name="altcategoryOWASP2004">None</Group>
        <Group name="altcategoryOWASP2007">None</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 362</Group>
        <Group name="altcategoryFISMA">None</Group>
        <Group name="altcategoryPCI1.1">None</Group>
        <Group name="altcategoryPCI1.2">None</Group>
        <Group name="altcategoryPCI2.0">None</Group>
        <Group name="altcategorySTIG2">APP3630.1 CAT II</Group>
        <Group name="altcategorySTIG3.4">APP3630.1 CAT II</Group>
        <Group name="altcategoryWASC24+2">None</Group>
        <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 362</Group>
        <Group name="altcategorySANSTop252011">None</Group>
        <Group name="PrimaryAudience">security</Group>
        <Group name="Accuracy">2.0</Group>
        <Group name="Impact">3.0</Group>
        <Group name="RemediationEffort">4.0</Group>
        <Group name="Probability">1.0</Group>
        <Group name="ImpactBias">Integrity</Group>
        <Group name="ConfidentialityImpact">Partial</Group>
        <Group name="IntegrityImpact">Complete</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019">
      <MetaInfo>
        <Group name="package">C Fortify Internal</Group>
        <Group name="package">CPP Fortify Internal</Group>
        <Group name="product">SQZL</Group>
        <Group name="altcategoryCWE">CWE ID 787, CWE ID 120, CWE ID 129, CWE ID 131</Group>
        <Group name="altcategoryOWASP2004">A5 Buffer Overflow</Group>
        <Group name="altcategoryOWASP2007">None</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">Risky Resource Management - CWE ID 119</Group>
        <Group name="altcategoryFISMA">None</Group>
        <Group name="altcategoryPCI1.1">Requirement 6.5.5</Group>
        <Group name="altcategoryPCI1.2">Requirement 6.3.1.1</Group>
        <Group name="altcategoryPCI2.0">Requirement 6.5.2</Group>
        <Group name="altcategorySTIG2">APP3510 CAT I, APP3590.1 CAT I</Group>
        <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3590.1 CAT I</Group>
        <Group name="altcategoryWASC24+2">Buffer Overflow</Group>
        <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 120, Risky Resource Management - CWE ID 129, Risky Resource Management - CWE ID 131</Group>
        <Group name="altcategorySANSTop252011">Risky Resource Management - CWE ID 120, Risky Resource Management - CWE ID 131</Group>
        <Group name="PrimaryAudience">security</Group>
        <Group name="Accuracy">4.0</Group>
        <Group name="Impact">5.0</Group>
        <Group name="RemediationEffort">1.0</Group>
        <Group name="Probability">4.0</Group>
        <Group name="ImpactBias">Integrity</Group>
        <Group name="ConfidentialityImpact">Complete</Group>
        <Group name="IntegrityImpact">Complete</Group>
        <Group name="AvailabilityImpact">Complete</Group>
        <Group name="audience">fod,dev,targeted,medium,broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="63E1A29D-E3D7-C1C6-040D-FA1808593DFA">
      <MetaInfo>
        <Group name="package">C Fortify Internal</Group>
        <Group name="package">CPP Fortify Internal</Group>
        <Group name="product">SQZL</Group>
        <Group name="altcategoryCWE">CWE ID 561</Group>
        <Group name="altcategoryOWASP2004">None</Group>
        <Group name="altcategoryOWASP2007">None</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">None</Group>
        <Group name="altcategoryFISMA">None</Group>
        <Group name="altcategoryPCI1.1">None</Group>
        <Group name="altcategoryPCI1.2">None</Group>
        <Group name="altcategoryPCI2.0">None</Group>
        <Group name="altcategorySTIG2">APP3050 CAT II</Group>
        <Group name="altcategorySTIG3.4">APP3050 CAT II</Group>
        <Group name="altcategoryWASC24+2">None</Group>
        <Group name="altcategorySANS2010">None</Group>
        <Group name="altcategorySANSTop252011">None</Group>
        <Group name="PrimaryAudience">quality</Group>
        <Group name="Accuracy">3.0</Group>
        <Group name="Impact">2.0</Group>
        <Group name="RemediationEffort">1.0</Group>
        <Group name="Probability">1.0</Group>
        <Group name="ImpactBias">Normal</Group>
        <Group name="ConfidentialityImpact">None</Group>
        <Group name="IntegrityImpact">None</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="6F195230-103C-42F3-930D-8ACA743407EE">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="altcategoryCWE">CWE ID 474</Group>
        <Group name="altcategoryOWASP2004">None</Group>
        <Group name="altcategoryOWASP2007">None</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">None</Group>
        <Group name="altcategoryFISMA">None</Group>
        <Group name="altcategoryPCI1.1">None</Group>
        <Group name="altcategoryPCI1.2">None</Group>
        <Group name="altcategoryPCI2.0">None</Group>
        <Group name="altcategorySTIG2">None</Group>
        <Group name="altcategorySTIG3.4">None</Group>
        <Group name="altcategoryWASC24+2">None</Group>
        <Group name="altcategorySANS2010">None</Group>
        <Group name="altcategorySANSTop252011">None</Group>
        <Group name="PrimaryAudience">quality</Group>
        <Group name="Accuracy">5.0</Group>
        <Group name="Impact">2.0</Group>
        <Group name="RemediationEffort">1.0</Group>
        <Group name="Probability">1.0</Group>
        <Group name="ImpactBias">Normal</Group>
        <Group name="ConfidentialityImpact">None</Group>
        <Group name="IntegrityImpact">None</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="7EF7E5CD-5511-49A5-B57E-87F33F2C6C82">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="Impact">2</Group>
        <Group name="altcategoryCWE">CWE ID 190</Group>
        <Group name="altcategoryOWASP2004">A1 Unvalidated Input</Group>
        <Group name="altcategoryOWASP2007">None</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">Risky Resource Management - CWE ID 682</Group>
        <Group name="altcategoryFISMA">SI</Group>
        <Group name="altcategoryPCI1.1">Requirement 6.5.1, Requirement 6.5.5</Group>
        <Group name="altcategoryPCI1.2">Requirement 6.3.1.1</Group>
        <Group name="altcategoryPCI2.0">Requirement 6.5.2</Group>
        <Group name="altcategorySTIG2">APP3510 CAT I, APP3550 CAT I</Group>
        <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3550 CAT I</Group>
        <Group name="altcategoryWASC24+2">None</Group>
        <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 190</Group>
        <Group name="altcategorySANSTop252011">Risky Resource Management - CWE ID 190</Group>
        <Group name="PrimaryAudience">security</Group>
        <Group name="Accuracy">2.0</Group>
        <Group name="RemediationEffort">3.0</Group>
        <Group name="Probability">1.0</Group>
        <Group name="ImpactBias">Integrity</Group>
        <Group name="ConfidentialityImpact">Complete</Group>
        <Group name="IntegrityImpact">Complete</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="86C7916D-A73B-4EBE-A235-9E570095EE66">
      <MetaInfo>
        <Group name="package">C Fortify Internal</Group>
        <Group name="package">CPP Fortify Internal</Group>
        <Group name="altcategoryCWE">CWE ID 787, CWE ID 120, CWE ID 129, CWE ID 131</Group>
        <Group name="altcategoryOWASP2004">A5 Buffer Overflow</Group>
        <Group name="altcategoryOWASP2007">None</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">Risky Resource Management - CWE ID 119</Group>
        <Group name="altcategoryFISMA">None</Group>
        <Group name="altcategoryPCI1.1">Requirement 6.5.5</Group>
        <Group name="altcategoryPCI1.2">Requirement 6.3.1.1</Group>
        <Group name="altcategoryPCI2.0">Requirement 6.5.2</Group>
        <Group name="altcategorySTIG2">APP3510 CAT I, APP3590.1 CAT I</Group>
        <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3590.1 CAT I</Group>
        <Group name="altcategoryWASC24+2">Buffer Overflow</Group>
        <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 120, Risky Resource Management - CWE ID 129, Risky Resource Management - CWE ID 131</Group>
        <Group name="altcategorySANSTop252011">Risky Resource Management - CWE ID 120, Risky Resource Management - CWE ID 131</Group>
        <Group name="PrimaryAudience">security</Group>
        <Group name="Accuracy">4.0</Group>
        <Group name="Impact">5.0</Group>
        <Group name="RemediationEffort">1.0</Group>
        <Group name="Probability">4.0</Group>
        <Group name="ImpactBias">Integrity</Group>
        <Group name="ConfidentialityImpact">Complete</Group>
        <Group name="IntegrityImpact">Complete</Group>
        <Group name="AvailabilityImpact">Complete</Group>
        <Group name="audience">fod,dev,targeted,medium,broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="95414A7F-C5A3-4E3C-BC41-0630BDED9E36">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="product">SQZL D</Group>
        <Group name="altcategoryCWE">CWE ID 252, CWE ID 754</Group>
        <Group name="altcategoryOWASP2004">A7 Improper Error Handling</Group>
        <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">None</Group>
        <Group name="altcategoryFISMA">None</Group>
        <Group name="altcategoryPCI1.1">Requirement 6.5.7</Group>
        <Group name="altcategoryPCI1.2">Requirement 6.3.1.2, Requirement 6.5.6</Group>
        <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
        <Group name="altcategorySTIG2">APP3120 CAT II</Group>
        <Group name="altcategorySTIG3.4">APP3120 CAT II</Group>
        <Group name="altcategoryWASC24+2">None</Group>
        <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 754</Group>
        <Group name="altcategorySANSTop252011">None</Group>
        <Group name="PrimaryAudience">quality</Group>
        <Group name="Accuracy">4.0</Group>
        <Group name="Impact">2.0</Group>
        <Group name="RemediationEffort">1.0</Group>
        <Group name="Probability">1.0</Group>
        <Group name="ImpactBias">Normal</Group>
        <Group name="ConfidentialityImpact">None</Group>
        <Group name="IntegrityImpact">None</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="ACEDD018-EA76-47B9-A765-21CB8C6701DA">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="inputsource">Environment Variables</Group>
        <Group name="audience">dev,medium,broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="B530C5D6-3C71-48C5-9512-72A7F4911822">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="package">CPP Core</Group>
        <Group name="package">C GLib</Group>
        <Group name="package">C Sun RPC</Group>
        <Group name="package">C WinAPI</Group>
        <Group name="package">C Netscape LDAP</Group>
        <Group name="package">C POSIX Threads</Group>
        <Group name="product">SQZL</Group>
        <Group name="altcategoryCWE">CWE ID 401</Group>
        <Group name="altcategoryOWASP2004">A9 Application Denial of Service</Group>
        <Group name="altcategoryOWASP2007">None</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">None</Group>
        <Group name="altcategoryFISMA">None</Group>
        <Group name="altcategoryPCI1.1">Requirement 6.5.9</Group>
        <Group name="altcategoryPCI1.2">None</Group>
        <Group name="altcategoryPCI2.0">None</Group>
        <Group name="altcategorySTIG2">APP6080 CAT II</Group>
        <Group name="altcategorySTIG3.4">APP6080 CAT II</Group>
        <Group name="altcategoryWASC24+2">None</Group>
        <Group name="altcategorySANS2010">None</Group>
        <Group name="altcategorySANSTop252011">None</Group>
        <Group name="PrimaryAudience">quality</Group>
        <Group name="Accuracy">3.0</Group>
        <Group name="Impact">4.0</Group>
        <Group name="RemediationEffort">2.0</Group>
        <Group name="Probability">1.0</Group>
        <Group name="ImpactBias">Normal</Group>
        <Group name="ConfidentialityImpact">None</Group>
        <Group name="IntegrityImpact">None</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">fod,dev,broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="BA40B07C-72BC-4732-B24C-9E9C7CFF1089">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="altcategoryCWE">CWE ID 676</Group>
        <Group name="altcategoryOWASP2004">A5 Buffer Overflow</Group>
        <Group name="altcategoryOWASP2007">None</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">None</Group>
        <Group name="altcategoryFISMA">None</Group>
        <Group name="altcategoryPCI1.1">Requirement 6.5.5</Group>
        <Group name="altcategoryPCI1.2">Requirement 6.3.1.1</Group>
        <Group name="altcategoryPCI2.0">Requirement 6.5.2</Group>
        <Group name="altcategorySTIG2">APP2060.4 CAT II, APP3590.2 CAT I</Group>
        <Group name="altcategorySTIG3.4">APP2060.4 CAT II, APP3590.2 CAT II</Group>
        <Group name="altcategoryWASC24+2">Buffer Overflow</Group>
        <Group name="altcategorySANS2010">None</Group>
        <Group name="altcategorySANSTop252011">Risky Resource Management - CWE ID 676</Group>
        <Group name="PrimaryAudience">security</Group>
        <Group name="Accuracy">4.0</Group>
        <Group name="Impact">2.0</Group>
        <Group name="RemediationEffort">2.0</Group>
        <Group name="Probability">1.0</Group>
        <Group name="ImpactBias">Integrity</Group>
        <Group name="ConfidentialityImpact">None</Group>
        <Group name="IntegrityImpact">Partial</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="BF90AB50-4D35-4249-A679-57C93827CC46">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="altcategoryCWE">CWE ID 497</Group>
        <Group name="altcategoryOWASP2004">None</Group>
        <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">None</Group>
        <Group name="altcategoryFISMA">None</Group>
        <Group name="altcategoryPCI1.1">None</Group>
        <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
        <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
        <Group name="altcategorySTIG2">APP3620 CAT II</Group>
        <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
        <Group name="altcategoryWASC24+2">Information Leakage</Group>
        <Group name="altcategorySANS2010">None</Group>
        <Group name="altcategorySANSTop252011">None</Group>
        <Group name="PrimaryAudience">security</Group>
        <Group name="Accuracy">4.0</Group>
        <Group name="Impact">2.0</Group>
        <Group name="RemediationEffort">1.0</Group>
        <Group name="Probability">1.0</Group>
        <Group name="ImpactBias">Confidentiality</Group>
        <Group name="ConfidentialityImpact">Partial</Group>
        <Group name="IntegrityImpact">None</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="D9CBF365-998C-464B-BF12-92EE7E08939B">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="altcategoryCWE">CWE ID 252, CWE ID 754</Group>
        <Group name="altcategoryOWASP2004">A7 Improper Error Handling</Group>
        <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">None</Group>
        <Group name="altcategoryFISMA">None</Group>
        <Group name="altcategoryPCI1.1">Requirement 6.5.7</Group>
        <Group name="altcategoryPCI1.2">Requirement 6.3.1.2, Requirement 6.5.6</Group>
        <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
        <Group name="altcategorySTIG2">APP3120 CAT II</Group>
        <Group name="altcategorySTIG3.4">APP3120 CAT II</Group>
        <Group name="altcategoryWASC24+2">None</Group>
        <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 754</Group>
        <Group name="altcategorySANSTop252011">None</Group>
        <Group name="PrimaryAudience">quality</Group>
        <Group name="Accuracy">4.0</Group>
        <Group name="Impact">2.0</Group>
        <Group name="RemediationEffort">1.0</Group>
        <Group name="Probability">1.0</Group>
        <Group name="ImpactBias">Normal</Group>
        <Group name="ConfidentialityImpact">None</Group>
        <Group name="IntegrityImpact">None</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="E34C4271-5E8A-47E8-8943-07B4F10CDE73">
      <MetaInfo>
        <Group name="package">C Core</Group>
        <Group name="Impact">2</Group>
        <Group name="altcategoryCWE">CWE ID 190</Group>
        <Group name="altcategoryOWASP2004">A1 Unvalidated Input</Group>
        <Group name="altcategoryOWASP2007">None</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">Risky Resource Management - CWE ID 682</Group>
        <Group name="altcategoryFISMA">SI</Group>
        <Group name="altcategoryPCI1.1">Requirement 6.5.1, Requirement 6.5.5</Group>
        <Group name="altcategoryPCI1.2">Requirement 6.3.1.1</Group>
        <Group name="altcategoryPCI2.0">Requirement 6.5.2</Group>
        <Group name="altcategorySTIG2">APP3510 CAT I, APP3550 CAT I</Group>
        <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3550 CAT I</Group>
        <Group name="altcategoryWASC24+2">None</Group>
        <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 190</Group>
        <Group name="altcategorySANSTop252011">Risky Resource Management - CWE ID 190</Group>
        <Group name="PrimaryAudience">security</Group>
        <Group name="Accuracy">2.0</Group>
        <Group name="RemediationEffort">3.0</Group>
        <Group name="Probability">1.0</Group>
        <Group name="ImpactBias">Integrity</Group>
        <Group name="ConfidentialityImpact">Complete</Group>
        <Group name="IntegrityImpact">Complete</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">broad</Group>
      </MetaInfo>
    </Rule>
    <Rule id="FDE123D1-00F8-A0F5-E54C-B20080EE8025">
      <MetaInfo>
        <Group name="package">C Fortify Internal</Group>
        <Group name="package">CPP Fortify Internal</Group>
        <Group name="altcategoryCWE">CWE ID 476</Group>
        <Group name="altcategoryOWASP2004">A9 Application Denial of Service</Group>
        <Group name="altcategoryOWASP2007">None</Group>
        <Group name="altcategoryOWASP2010">None</Group>
        <Group name="altcategorySANS2009">None</Group>
        <Group name="altcategoryFISMA">None</Group>
        <Group name="altcategoryPCI1.1">Requirement 6.5.9</Group>
        <Group name="altcategoryPCI1.2">None</Group>
        <Group name="altcategoryPCI2.0">None</Group>
        <Group name="altcategorySTIG2">APP6080 CAT II</Group>
        <Group name="altcategorySTIG3.4">APP6080 CAT II</Group>
        <Group name="altcategoryWASC24+2">None</Group>
        <Group name="altcategorySANS2010">None</Group>
        <Group name="altcategorySANSTop252011">None</Group>
        <Group name="PrimaryAudience">quality</Group>
        <Group name="Accuracy">4.0</Group>
        <Group name="Impact">3.0</Group>
        <Group name="RemediationEffort">1.0</Group>
        <Group name="Probability">1.0</Group>
        <Group name="ImpactBias">Normal</Group>
        <Group name="ConfidentialityImpact">None</Group>
        <Group name="IntegrityImpact">None</Group>
        <Group name="AvailabilityImpact">None</Group>
        <Group name="audience">fod,broad</Group>
      </MetaInfo>
    </Rule>
  </RuleInfo>
  <LicenseInfo>
    <Metadata>
      <name>owner</name>
      <value>Nanjing University</value>
    </Metadata>
    <Metadata>
      <name>License Description</name>
      <value>WFM id:4640117720</value>
    </Metadata>
    <Metadata>
      <name>Subscription ID</name>
      <value>S53d3ddc2-3917-4368-965f-fe4f699f2d87</value>
    </Metadata>
    <Metadata>
      <name>License ID</name>
      <value>L92f3b396-fdd0-4e4a-ae36-1de66db48b64</value>
    </Metadata>
    <Metadata>
      <name>Created On</name>
      <value>2012-05-23 03:24:22.0</value>
    </Metadata>
    <Capability>
      <Name>Enterprise-Reporting</Name>
      <Expiration>2035-05-23</Expiration>
    </Capability>
    <Capability>
      <Name>JDeveloperPlugins</Name>
      <Expiration>2035-05-23</Expiration>
    </Capability>
    <Capability>
      <Name>RulePackUpdate</Name>
      <Expiration>2035-05-23</Expiration>
      <Attribute>
        <name>lid</name>
        <value>L92f3b396-fdd0-4e4a-ae36-1de66db48b64</value>
      </Attribute>
    </Capability>
    <Capability>
      <Name>VSPlugins</Name>
      <Expiration>2035-05-23</Expiration>
    </Capability>
    <Capability>
      <Name>F360-Server</Name>
      <Expiration>2035-05-23</Expiration>
    </Capability>
    <Capability>
      <Name>AuditWorkbench</Name>
      <Expiration>2035-05-23</Expiration>
    </Capability>
    <Capability>
      <Name>F360-CollabModule</Name>
      <Expiration>2035-05-23</Expiration>
    </Capability>
    <Capability>
      <Name>EclipsePlugins</Name>
      <Expiration>2035-05-23</Expiration>
    </Capability>
    <Capability>
      <Name>SCA-Analysis</Name>
      <Expiration>2035-05-23</Expiration>
    </Capability>
  </LicenseInfo>
</EngineData>
</FVDL>
